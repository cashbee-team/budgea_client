=begin
#Budgea API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.1

=end

require 'spec_helper'
require 'json'

# Unit tests for BudgeaClient::ProvidersApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ProvidersApi' do
  before do
    # run before each test
    @instance = BudgeaClient::ProvidersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProvidersApi' do
    it 'should create an instance of ProvidersApi' do
      expect(@instance).to be_instance_of(BudgeaClient::ProvidersApi)
    end
  end

  # unit tests for banks_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2008]
  describe 'banks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for banks_id_connector_logos_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'banks_id_connector_logos_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for banks_id_connector_logos_main_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'banks_id_connector_logos_main_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for banks_id_connector_logos_thumbnail_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'banks_id_connector_logos_thumbnail_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_get
  # Get connections without a user
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20014]
  describe 'connectors_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'connectors_id_connector_logos_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_id_logo_delete
  # Delete a single Logo object.
  # 
  # @param id_connector 
  # @param id_logo 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectorLogo]
  describe 'connectors_id_connector_logos_id_logo_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_id_logo_put
  # Create or Update a connector Logo.
  # This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).&lt;br&gt;&lt;br&gt;Form params: - id_file (integer): The id of the file to link with that connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param id_logo 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectorLogo]
  describe 'connectors_id_connector_logos_id_logo_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_main_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'connectors_id_connector_logos_main_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_post
  # Create a connector Logo
  # This endpoint creates a connector logo. You can either pass a file to as a parameter to insert and link it with the connector or pass an id_file to link a connector with an existing file. Will fail if the file is already linked with that connector.&lt;br&gt;&lt;br&gt;Form params: - id_file (integer): The id of the file to link with that connector. - img (string): Path to the image to link with that connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectorLogo]
  describe 'connectors_id_connector_logos_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_put
  # Create or Update a connector Logo
  # This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).&lt;br&gt;&lt;br&gt;Form params: - id_file (integer): The id of the file to link with that connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectorLogo]
  describe 'connectors_id_connector_logos_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_logos_thumbnail_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'connectors_id_connector_logos_thumbnail_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_post
  # Request a new connector
  # Send a request to add a new connector&lt;br&gt;&lt;br&gt;
  # @param name Name of the bank or provider
  # @param login Users login
  # @param password Users password
  # @param [Hash] opts the optional parameters
  # @option opts [String] :url Url of the bank
  # @option opts [String] :email Email of the user
  # @option opts [String] :types Type of connector, eg. banks or providers
  # @option opts [String] :comment Optionnal comment
  # @option opts [BOOLEAN] :sendmail if set, send an email to user
  # @option opts [String] :expand 
  # @return [Connector]
  describe 'connectors_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for documenttypes_get
  # Get document types
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20015]
  describe 'documenttypes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for documenttypes_id_documenttype_put
  # Edit a document type
  # Change value of a document type.&lt;br&gt;&lt;br&gt;
  # @param id_documenttype 
  # @param name Displayed name of document type
  # @param attacheable If true, documents of this type can be attached to a transaction, and have amount related meta-data
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [DocumentType]
  describe 'documenttypes_id_documenttype_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user ID of a user
  # @option opts [Integer] :id_connection ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [String] :expand 
  # @return [InlineResponse20017]
  describe 'logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for ocr_post
  # Post an image with OCR
  # Post an image and apply OCR on it to obtain found meta-data.&lt;br&gt;&lt;br&gt;
  # @param file File of the document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_transaction Transaction used to help OCR to find data
  # @option opts [String] :name Name of the document
  # @return [nil]
  describe 'ocr_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20018]
  describe 'providers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_id_connector_logos_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20019]
  describe 'providers_id_connector_logos_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_id_connector_logos_main_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'providers_id_connector_logos_main_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_id_connector_logos_thumbnail_get
  # Get all links to the files associated with this connector.
  # This endpoint returns all links to files associated with this connector.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20010]
  describe 'providers_id_connector_logos_thumbnail_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactions_id_transaction_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transaction 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactions_id_transaction_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_delete
  # Delete all connections
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_get
  # Get connections
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'users_id_user_connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transaction 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactions_id_transaction_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_account 
  # @param id_transactions_cluster 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_accounts_id_account_transactionsclusters_id_transactions_cluster_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_delete
  # Delete a connection.
  # This endpoint deletes a connection and all related accounts and transactions.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_informations_get
  # Get connection additionnal informations
  # &lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'users_id_user_connections_id_connection_informations_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user2 ID of a user
  # @option opts [Integer] :id_connection2 ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [String] :expand 
  # @return [InlineResponse20017]
  describe 'users_id_user_connections_id_connection_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_post
  # Update a connection.
  # Give new parameters to change on the configuration of this connection (for example \&quot;password\&quot;).&lt;br&gt;&lt;br&gt;It tests connection to website, and if it fails, a 400 response is given with the error code \&quot;wrongpass\&quot; or \&quot;websiteUnavailable\&quot;.&lt;br&gt;&lt;br&gt;You can also supply meta-parameters on connection, like &#39;active&#39; or &#39;expire&#39;.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :active Set if the connection synchronisation is active
  # @option opts [DateTime] :expire Set expiration of the connection to this date
  # @option opts [String] :login Set login to this new login
  # @option opts [String] :password Set password to this new password
  # @option opts [BOOLEAN] :decoupled Try to update a connection with the decoupled error
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_put
  # Force synchronisation of a connection.
  # We suggest to pass parameter expand&#x3D;accounts[transactions] to get all *new* and *updated* transactions.&lt;br&gt;&lt;br&gt;Query params: - expand (string): fields to expand - last_update (dateTime): if supplied, get transactions inserted since this date&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_delete
  # Delete a subscription.
  # It deletes a specific subscription.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Subscription]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_subscriptions_id_subscription_put
  # Update a subscription
  # It updates a specific subscription&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Label of the subscription
  # @option opts [BOOLEAN] :disabled If the subscription is disabled (not synchronized)
  # @option opts [String] :expand 
  # @return [Subscription]
  describe 'users_id_user_connections_id_connection_subscriptions_id_subscription_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactions_id_transaction_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transaction 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactions_id_transaction_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_transactions_cluster 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_connections_id_connection_transactionsclusters_id_transactions_cluster_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_post
  # Add a new connection.
  # Create a new connection to a given bank or provider. You have to give all needed parameters (use /banks/ID/fields or /providers/ID/fields to get them).&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_connector ID of the connector
  # @option opts [String] :connector_uuid optional uuid of the connector (replaces id_connector)
  # @option opts [String] :birthday bank additional login parameter
  # @option opts [String] :password bank additional login parameter
  # @option opts [String] :oauth_token bank additional login parameter
  # @option opts [String] :oauth_token_secret bank additional login parameter
  # @option opts [String] :auth_type bank additional login parameter
  # @option opts [String] :secret bank additional login parameter
  # @option opts [String] :type bank additional login parameter
  # @option opts [String] :birthdate bank additional login parameter
  # @option opts [String] :nuser bank additional login parameter
  # @option opts [String] :website bank additional login parameter
  # @option opts [String] :login bank additional login parameter
  # @option opts [Integer] :id_provider ID of the provider
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user2 ID of a user
  # @option opts [Integer] :id_connection ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [String] :expand 
  # @return [InlineResponse20017]
  describe 'users_id_user_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_ocr_post
  # Post an image with OCR
  # Post an image and apply OCR on it to obtain found meta-data.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param file File of the document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_transaction Transaction used to help OCR to find data
  # @option opts [String] :name Name of the document
  # @return [nil]
  describe 'users_id_user_ocr_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_delete
  # Delete a subscription.
  # It deletes a specific subscription.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Subscription]
  describe 'users_id_user_subscriptions_id_subscription_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_subscriptions_id_subscription_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_subscriptions_id_subscription_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_subscriptions_id_subscription_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_subscriptions_id_subscription_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_subscriptions_id_subscription_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_subscriptions_id_subscription_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_subscriptions_id_subscription_put
  # Update a subscription
  # It updates a specific subscription&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_subscription 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Label of the subscription
  # @option opts [BOOLEAN] :disabled If the subscription is disabled (not synchronized)
  # @option opts [String] :expand 
  # @return [Subscription]
  describe 'users_id_user_subscriptions_id_subscription_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactions_id_transaction_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_transactions_id_transaction_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactions_id_transaction_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactions_id_transaction_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactions_id_transaction_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactions_id_transaction_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transaction 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactions_id_transaction_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_delete
  # Delete documents
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_get
  # Get documents
  # Get list of documents&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal (inclusive) date
  # @option opts [Date] :max_date maximum (inclusive) date
  # @option opts [Float] :min_amount minimal (inclusive) amount
  # @option opts [Float] :max_amount maximum (inclusive) amount
  # @option opts [Float] :min_timestamp minimal (inclusive) timestamp
  # @option opts [Float] :max_timestamp maximum (inclusive) timestamp
  # @option opts [Integer] :id_type filter with a document type
  # @option opts [String] :expand 
  # @return [InlineResponse20031]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_id_document_delete
  # Delete a document
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_id_document_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_id_document_put
  # Edit a document
  # Edit meta-data of a specific document.
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param id_document 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Date] :date Date of document
  # @option opts [Date] :duedate Due date of document
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [Integer] :income Is an income or an outcome
  # @option opts [Integer] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_id_document_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_post
  # Add a new document
  # Add a new document&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param date Date of document
  # @param duedate Due date of document
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_type Type of this document
  # @option opts [Integer] :id_category Related category
  # @option opts [Float] :total_amount Taxed amount
  # @option opts [Float] :untaxed_amount Untaxed amount
  # @option opts [Float] :vat VAT amount
  # @option opts [BOOLEAN] :income Is an income or an outcome
  # @option opts [BOOLEAN] :readonly Is this file readonly
  # @option opts [File] :file File of the document
  # @option opts [Integer] :id_ocr Related OCR process
  # @option opts [String] :name Name of the document
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_transactionsclusters_id_transactions_cluster_documents_put
  # Attach an existing document to a transaction or a transactions_cluster
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_transactions_cluster 
  # @param id_document id of the document you want to attach the file to
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Document]
  describe 'users_id_user_transactionsclusters_id_transactions_cluster_documents_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
