=begin
#Budgea API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for BudgeaClient::AuthenticationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AuthenticationApi' do
  before do
    # run before each test
    @instance = BudgeaClient::AuthenticationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthenticationApi' do
    it 'should create an instance of AuthenticationApi' do
      expect(@instance).to be_instance_of(BudgeaClient::AuthenticationApi)
    end
  end

  # unit tests for admin_jwt_post
  # Generate a jwt manage token
  # This endpoint generates a new jwt manage token. It requires an admin manage token to be used&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :scope scope requested for the token (default: config)
  # @option opts [Integer] :duration number of minute before the token expiration (0 for token that won&#39;t expire unless the client application is deleted) (default: 1)
  # @return [Object]
  describe 'admin_jwt_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_init_post
  # Create a new anonymous user
  # This endpoint creates a new temporary token related to a new anonymous user.&lt;br&gt;&lt;br&gt;It will expire 30 minutes after.&lt;br&gt;&lt;br&gt;Note: if you supply client_id and client_secret, or if you call this endpoint with the manage_token, the token will be permanent.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id ID of the client
  # @option opts [String] :client_secret secret of the client
  # @return [InlineResponse2002]
  describe 'auth_init_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_jwt_post
  # Generate a user jwt token
  # This endpoint generates a new jwt token for the user. This token will last the time in minutes given by the config key auth.default_token_expire (permanent if this the parameter expire&#x3D;False is given)&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :client_id id of the client
  # @option opts [String] :client_secret secret for the client
  # @option opts [String] :scope scope requested for the token
  # @option opts [Integer] :id_user user for whom the token has to be generated. If not supplied, a user will be created
  # @option opts [BOOLEAN] :expire if set to True, the token will expire n minutes after its creation, n being the value of configuration key auth.default_token_expire (default: True)
  # @return [InlineResponse2003]
  describe 'auth_jwt_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_token_access_post
  # Transform a temporary code to a access_token
  # In order to register a new user with the OAuth 2 process, the client has to call this endpoint to request a granted access_token with the received temporary code.&lt;br&gt;&lt;br&gt;
  # @param client_id ID of the client
  # @param client_secret secret of the client
  # @param code user&#39;s temporary code
  # @param [Hash] opts the optional parameters
  # @option opts [String] :grant_type default is \&quot;authorization_code\&quot;
  # @option opts [String] :redirect_uri redirect uri used by user
  # @return [InlineResponse2006]
  describe 'auth_token_access_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_token_code_get
  # Generate a user temporary token
  # This endpoint generates a new temporary token for the user.&lt;br&gt;&lt;br&gt;In case the access_token is used by a trusted device, and you want to let another one (for example a web browser) access to user resources, use this service to create a token which will expire in 30 minutes.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2007]
  describe 'auth_token_code_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for auth_token_delete
  # Remove user access
  # This endpoint removes the token in use.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'auth_token_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for certificate_type_get
  # Get the latest certificate of a type
  # 
  # @param type 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Certificate]
  describe 'certificate_type_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for hash_delete
  # Delete the user&#39;s connections
  # deletes all connections of the user given his hash&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'hash_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_delete
  # Delete the user
  # This endpoint deletes the user.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [User]
  describe 'users_id_user_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_get
  # Get a user
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [User]
  describe 'users_id_user_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_token_post
  # Create a token
  # Create an access_token for this user and get it.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param application application name
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'users_id_user_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webauth_get
  # First step to establish an oAuth2 connection.
  # The route encapsulate 2 functionalities: 1. Create or update a connection through oAuth2 session.&lt;br&gt;&lt;br&gt;2. Execute a transfer through OAuth2 session.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_connector ID of the connector
  # @option opts [Integer] :id_transfer ID of the transfer
  # @option opts [String] :connector_uuid Optional unique ID of the connector (replaces id_connector)
  # @option opts [Integer] :client_id Client Application ID
  # @option opts [String] :redirect_uri Redirect URI
  # @option opts [String] :state Optional state
  # @option opts [String] :fields Optional fields
  # @option opts [Integer] :id_connection Optional already existing connection to update
  # @return [nil]
  describe 'webauth_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
