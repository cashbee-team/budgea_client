=begin
#Budgea API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for BudgeaClient::ConnectionsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ConnectionsApi' do
  before do
    # run before each test
    @instance = BudgeaClient::ConnectionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConnectionsApi' do
    it 'should create an instance of ConnectionsApi' do
      expect(@instance).to be_instance_of(BudgeaClient::ConnectionsApi)
    end
  end

  # unit tests for banks_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2008]
  describe 'banks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for banks_id_connector_connections_get
  # Get a subset of id_connection with the largest diversity of account
  # By default, it selects a set of 3 connections.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :range the length of the connection subset
  # @option opts [Integer] :type to target a specific account type which will be
  # @option opts [Integer] :occurrences require at least N accounts of the targeted
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'banks_id_connector_connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for banks_id_connector_sources_get
  # Get list of connector sources
  # 
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20011]
  describe 'banks_id_connector_sources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_get
  # Get connections without a user
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_id_connection_logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user ID of a user
  # @option opts [Integer] :id_connection2 ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [Integer] :id_source ID of a source
  # @option opts [String] :expand 
  # @return [InlineResponse20015]
  describe 'connections_id_connection_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_id_connection_sources_get
  # Get connection sources
  # 
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20016]
  describe 'connections_id_connection_sources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_id_connection_sources_id_source_delete
  # Disable a connection source
  # This will make it so the specified source will not be synchronized anymore.&lt;br&gt;&lt;br&gt;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'connections_id_connection_sources_id_source_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_id_connection_sources_id_source_post
  # Enable connection source
  # This will make it so the specified source will be able to be synchronized.&lt;br&gt;&lt;br&gt;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'connections_id_connection_sources_id_source_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connections_id_connection_sources_id_source_put
  # Enable connection source
  # This will make it so the specified source will be able to be synchronized.&lt;br&gt;&lt;br&gt;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'connections_id_connection_sources_id_source_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20017]
  describe 'connectors_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_sources_get
  # Get list of connector sources
  # 
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20011]
  describe 'connectors_id_connector_sources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_id_connector_sources_id_source_put
  # Edit the provided connector source
  # 
  # @param id_connector 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :auth_mechanism the authentication mechanism to use for this connector source
  # @option opts [DateTime] :disabled to enable or disable connector source
  # @option opts [String] :expand 
  # @return [ConnectorSource]
  describe 'connectors_id_connector_sources_id_source_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for connectors_post
  # Request a new connector
  # Send a request to add a new connector&lt;br&gt;&lt;br&gt;
  # @param name Name of the bank or provider
  # @param login Users login
  # @param password Users password
  # @param [Hash] opts the optional parameters
  # @option opts [String] :url Url of the bank
  # @option opts [String] :email Email of the user
  # @option opts [String] :types Type of connector, eg. banks or providers
  # @option opts [String] :comment Optionnal comment
  # @option opts [BOOLEAN] :sendmail if set, send an email to user
  # @option opts [String] :expand 
  # @return [Connector]
  describe 'connectors_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user ID of a user
  # @option opts [Integer] :id_connection ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [Integer] :id_source ID of a source
  # @option opts [String] :expand 
  # @return [InlineResponse20015]
  describe 'logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_get
  # Get list of connectors
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20020]
  describe 'providers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_id_connector_connections_get
  # Get a random subset of provider&#39;s id_connection
  # By default, it selects a set of 3 connections.&lt;br&gt;&lt;br&gt;
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :range the length of the connection subset
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'providers_id_connector_connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for providers_id_connector_sources_get
  # Get list of connector sources
  # 
  # @param id_connector 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20011]
  describe 'providers_id_connector_sources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_delete
  # Delete all connections
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_get
  # Get connections
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'users_id_user_connections_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_delete
  # Delete a connection.
  # This endpoint deletes a connection and all related accounts and transactions.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_get
  # Get connection
  # Get connection by ID
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_informations_get
  # Get connection additionnal informations
  # &lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse2009]
  describe 'users_id_user_connections_id_connection_informations_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user2 ID of a user
  # @option opts [Integer] :id_connection2 ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [Integer] :id_source ID of a source
  # @option opts [String] :expand 
  # @return [InlineResponse20015]
  describe 'users_id_user_connections_id_connection_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_post
  # Update a connection.
  # Give new parameters to change on the configuration of this connection (for example \&quot;password\&quot;).&lt;br&gt;&lt;br&gt;It tests connection to website, and if it fails, a 400 response is given with the error code \&quot;wrongpass\&quot; or \&quot;websiteUnavailable\&quot;.&lt;br&gt;&lt;br&gt;You can also supply meta-parameters on connection, like &#39;active&#39; or &#39;expire&#39;.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [Object] :connection 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_put
  # Force synchronisation of a connection.
  # We suggest to pass parameter expand&#x3D;accounts[transactions] to get all *new* and *updated* transactions.&lt;br&gt;&lt;br&gt;Query params: - expand (string): fields to expand - last_update (dateTime): if supplied, get transactions inserted since this date&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Connection]
  describe 'users_id_user_connections_id_connection_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_sources_get
  # Get connection sources
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20016]
  describe 'users_id_user_connections_id_connection_sources_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_sources_id_source_delete
  # Disable a connection source
  # This will make it so the specified source will not be synchronized anymore.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'users_id_user_connections_id_connection_sources_id_source_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_sources_id_source_post
  # Enable connection source
  # This will make it so the specified source will be able to be synchronized.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'users_id_user_connections_id_connection_sources_id_source_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_id_connection_sources_id_source_put
  # Enable connection source
  # This will make it so the specified source will be able to be synchronized.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param id_connection 
  # @param id_source 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [ConnectionSource]
  describe 'users_id_user_connections_id_connection_sources_id_source_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_connections_post
  # Add a new connection.
  # Create a new connection to a given bank or provider. You have to give all needed parameters (use /banks/ID/fields or /providers/ID/fields to get them).&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :source optional comma-separated list of sources to use for the connection synchronization
  # @option opts [String] :expand 
  # @option opts [Object] :connection 
  # @return [Connection]
  describe 'users_id_user_connections_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_logs_get
  # Get connection logs
  # Get logs about connections.&lt;br&gt;&lt;br&gt;
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit limit number of results
  # @option opts [Integer] :offset offset of first result
  # @option opts [Date] :min_date minimal date
  # @option opts [Date] :max_date maximum date
  # @option opts [Integer] :state state of user
  # @option opts [String] :period period to group logs
  # @option opts [Integer] :id_user2 ID of a user
  # @option opts [Integer] :id_connection ID of a connection
  # @option opts [Integer] :id_connector ID of a connector
  # @option opts [BOOLEAN] :charged consider only logs for charged connectors
  # @option opts [Integer] :id_source ID of a source
  # @option opts [String] :expand 
  # @return [InlineResponse20015]
  describe 'users_id_user_logs_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
