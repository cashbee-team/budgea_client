# frozen_string_literal: true

require 'spec_helper'
require 'json'

# Unit tests for BudgeaClient::TermsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TermsApi' do
  before do
    # run before each test
    @instance = BudgeaClient::TermsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TermsApi' do
    it 'should create an instance of TermsApi' do
      expect(@instance).to be_instance_of(BudgeaClient::TermsApi)
    end
  end

  # unit tests for terms_get
  # Return the current terms and the content of the associated file
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20016]
  describe 'terms_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for terms_post
  # Register a version of &#39;Terms of Service&#39; in database
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :version Number of version
  # @option opts [String] :file_content file containing the terms, optional
  # @option opts [String] :expand 
  # @return [TermsOfService]
  describe 'terms_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_terms_get
  # Get active terms object for a specific user, only one terms can be active
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20016]
  describe 'users_id_user_terms_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for users_id_user_terms_post
  # Register user&#39;s consent for a specific terms id
  # 
  # @param id_user Hint: you can use &#39;me&#39; or &#39;all&#39;
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_user2 user id (optionnal)
  # @option opts [Integer] :id_terms terms id
  # @option opts [String] :expand 
  # @return [TermsOfService]
  describe 'users_id_user_terms_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
