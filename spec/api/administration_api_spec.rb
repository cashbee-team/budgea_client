# frozen_string_literal: true

require 'spec_helper'
require 'json'

# Unit tests for BudgeaClient::AdministrationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AdministrationApi' do
  before do
    # run before each test
    @instance = BudgeaClient::AdministrationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AdministrationApi' do
    it 'should create an instance of AdministrationApi' do
      expect(@instance).to be_instance_of(BudgeaClient::AdministrationApi)
    end
  end

  # unit tests for clients_get
  # List clients
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20011]
  describe 'clients_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_id_client_delete
  # Delete a client
  # 
  # @param id_client 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Client]
  describe 'clients_id_client_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_id_client_get
  # Get information about a client
  # If you use the manage_token, you will get also the client_secret.&lt;br&gt;&lt;br&gt;
  # @param id_client 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Client]
  describe 'clients_id_client_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_id_client_logo_delete
  # Delete the client logo
  # 
  # @param id_client 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [File]
  describe 'clients_id_client_logo_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_id_client_logo_post
  # Update the client logo
  # 
  # @param id_client 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [File]
  describe 'clients_id_client_logo_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_id_client_put
  # Update a client
  # 
  # @param id_client 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name name of client
  # @option opts [BOOLEAN] :secret reset the secret
  # @option opts [String] :redirect_uri redirect_uri
  # @option opts [String] :primary_color hexadecimal code of the client primary color (e.g F45B9A)
  # @option opts [String] :secondary_color hexadecimal code of the client secondary color (e.g F45B9A)
  # @option opts [String] :description text to display as a default description
  # @option opts [String] :description_banks text to display as a description for banks
  # @option opts [String] :description_providers text to display as a description for providers
  # @option opts [BOOLEAN] :pro Wether the client should display the company manager page
  # @option opts [String] :expand 
  # @return [Client]
  describe 'clients_id_client_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for clients_post
  # Create a client
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Client]
  describe 'clients_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for config_get
  # Get configuration of the API.
  # &lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search limit the results to keys matching the given value
  # @return [nil]
  describe 'config_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for config_post
  # Set a configuration value on the API.
  # Request: { \&quot;bank.connection.disable_new\&quot;: \&quot;0\&quot;, \&quot;search\&quot;: \&quot;bank.connection.disable_new\&quot; }&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search limit the results to keys matching the given value
  # @return [Object]
  describe 'config_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for monitoring_get
  # get performances stats on this instance
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :period number on days on which stats on synchronization have to be done per worker (Default: 1)
  # @return [nil]
  describe 'monitoring_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_sync_post
  # Test synchronization on a random connection.
  # It can be used to test receiving data on your webhooks.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'test_sync_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for test_webhooks_post
  # Test synchronization on a random connection.
  # It can be used to test receiving data on your webhooks.&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'test_webhooks_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_delete
  # Deletes all webhooks
  # Updates the deleted field with the date of the deletion&lt;br&gt;&lt;br&gt;
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Webhook]
  describe 'webhooks_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_get
  # Get webhooks
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [InlineResponse20033]
  describe 'webhooks_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_id_webhook_delete
  # Deletes a webhook
  # Updates the deleted field with the date of the deletion&lt;br&gt;&lt;br&gt;
  # @param id_webhook 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand 
  # @return [Webhook]
  describe 'webhooks_id_webhook_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_id_webhook_post
  # Updates a webhook
  # 
  # @param id_webhook 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :deleted a date to delete the webhook or &#39;null&#39; to enable it
  # @option opts [Integer] :id_user The user ID to associate with the webhook
  # @option opts [Integer] :id_service The service ID to associate with the webhook
  # @option opts [Float] :url The webhook callback url
  # @option opts [String] :event The webhook event
  # @option opts [String] :expand 
  # @return [Webhook]
  describe 'webhooks_id_webhook_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_id_webhook_put
  # Updates a webhook
  # 
  # @param id_webhook 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :deleted a date to delete the webhook or &#39;null&#39; to enable it
  # @option opts [Integer] :id_user The user ID to associate with the webhook
  # @option opts [Integer] :id_service The service ID to associate with the webhook
  # @option opts [Float] :url The webhook callback url
  # @option opts [String] :event The webhook event
  # @option opts [String] :expand 
  # @return [Webhook]
  describe 'webhooks_id_webhook_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for webhooks_post
  # Adds a new webhook
  # 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :id_user The user ID to associate with the webhook
  # @option opts [Integer] :id_service The service ID to associate with the webhook
  # @option opts [Float] :url The webhook callback url
  # @option opts [String] :event The webhook event
  # @option opts [String] :params The webhook parameters as an object with three keys: type, key and value
  # @option opts [String] :expand 
  # @return [Webhook]
  describe 'webhooks_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
