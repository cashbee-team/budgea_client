=begin
#Budgea API Documentation

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: 2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'uri'

module BudgeaClient
  class TransferApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # First step to establish an oAuth2 connection.
    # The route encapsulate 2 functionalities: 1. Create or update a connection through oAuth2 session.<br><br>2. Execute a transfer through OAuth2 session.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_connector ID of the connector
    # @option opts [Integer] :id_transfer ID of the transfer
    # @option opts [String] :connector_uuid Optional unique ID of the connector (replaces id_connector)
    # @option opts [Integer] :client_id Client Application ID
    # @option opts [String] :redirect_uri Redirect URI
    # @option opts [String] :state Optional state
    # @option opts [String] :fields Optional fields
    # @option opts [Integer] :id_connection Optional already existing connection to update
    # @return [nil]
    def webauth_get(opts = {})
      webauth_get_with_http_info(opts)
      nil
    end

    # First step to establish an oAuth2 connection.
    # The route encapsulate 2 functionalities: 1. Create or update a connection through oAuth2 session.&lt;br&gt;&lt;br&gt;2. Execute a transfer through OAuth2 session.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :id_connector ID of the connector
    # @option opts [Integer] :id_transfer ID of the transfer
    # @option opts [String] :connector_uuid Optional unique ID of the connector (replaces id_connector)
    # @option opts [Integer] :client_id Client Application ID
    # @option opts [String] :redirect_uri Redirect URI
    # @option opts [String] :state Optional state
    # @option opts [String] :fields Optional fields
    # @option opts [Integer] :id_connection Optional already existing connection to update
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def webauth_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TransferApi.webauth_get ...'
      end
      # resource path
      local_var_path = '/webauth'

      # query parameters
      query_params = {}
      query_params[:'id_connector'] = opts[:'id_connector'] if !opts[:'id_connector'].nil?
      query_params[:'id_transfer'] = opts[:'id_transfer'] if !opts[:'id_transfer'].nil?
      query_params[:'connector_uuid'] = opts[:'connector_uuid'] if !opts[:'connector_uuid'].nil?
      query_params[:'client_id'] = opts[:'client_id'] if !opts[:'client_id'].nil?
      query_params[:'redirect_uri'] = opts[:'redirect_uri'] if !opts[:'redirect_uri'].nil?
      query_params[:'state'] = opts[:'state'] if !opts[:'state'].nil?
      query_params[:'fields'] = opts[:'fields'] if !opts[:'fields'].nil?
      query_params[:'id_connection'] = opts[:'id_connection'] if !opts[:'id_connection'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['api_key']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TransferApi#webauth_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
