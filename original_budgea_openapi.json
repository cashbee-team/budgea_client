{
  "info": {
    "version": "2.0",
    "description": "# Budgea Development Guides\n\nWelcome to **Budgea**'s documentation.\n\nThis documentation is intended to get you up-and-running with our APIs and advise on the implementation of some regulatory aspects of your application, following the DSP2's guidelines.\n\n## Getting Started\n**IMPORTANT**\nDepending on your status with regard of the DSP2 regulation, **agent** or **partner**, you may call our APIs or simply use our Webview and callbacks to get the financial data of your users.\nAs an **agent**, you are allowed to call directly our APIs and implement your own form to get the user's credentials.\nAs a **partner**, you cannot manipulate the credentials, and have to delegate this step to us through our webview.\n\nThe sections below will document how to use our APIs, make sure you have the **agent** status to do so.\nFor the **partner**, please refer to the section *Webview* and *Callbacks* of this documentation.\n\n### Overview\nYour API is a REST API which requires a communication through https to send and receive JSON documents.\nDuring your tests, we recommend to make calls to the API with curl or any other HTTP client of your choice.\nYou can watch a video demonstration on this [URL](https://asciinema.org/a/FsaFyt3WAPyDm7sfaZPkwal3V).\nFor the examples we'll use the demo API with address `https://demo.biapi.pro`, you should change that name to your API's name.\n\n### Hello World\nLet's start by calling the service `/banks` which lists all available banks.\n```\ncurl https://demo.biapi.pro/2.0/banks/\n```\nTo log in to a bank webpage, you'll need to know for a given bank, the fields your user should fill in the form.\nLet's call a  specific bank and ask for an additional resource *fields*.\n```\ncurl https://demo.biapi.pro/2.0/banks/59?expand=fields\n```\nThe response here concerns only 1 bank (since we specified an id) and the resource _Fields_ is added to the response thanks to the query parameter `expand`.\n\nTo get more interesting things done, you'll need to send authenticated requests.\n\n### Authentication\nThe way to authenticate is by passing the `Authorization: Bearer <token>` header in your request.\nAt the setup a _manage token_ have been generated, you can use this token for now, when creating your user we'll see how to generate a user's token.\n```\ncurl https://demo.biapi.pro/2.0/config \\\n  -H 'Authorization: Bearer <token>'\n```\nThis endpoint will list all the parameters you can change to adapt Budgea to your needs.\n\nWe've covered the very first calls. Before diving deeper, let's see some general information about the APIs.\n\n## Abstract\n\n### API URL\n`https://demo.biapi.pro/2.0`\n\n### Requests format\nData format: **application/x-www-form-urlencoded** or **application/json** (suggested)\n\nAdditional headers: Authorization: User's token (private)\n\n### Responses format\nData format: **application/json** ([http://www.json.org](http://www.json.org/))\nCharset: **UTF-8**\n\n### Resources\nEach call on an endpoint will return resources. The main resources are:\n| Resource            | Description                                                                                                           |\n| ---------------------|:------------------------------------------------------------------------------------------------------------------   |\n|Users                 |Represent a user                                                                                                      |\n|Connection            |A set of data used to authenticate on a website (usually a login and password). There is 1 connection for each website|\n|Account               |A bank account contained in a connection                                                                              |\n|Transaction           |An entry in a bank account                                                                                            |\n|Investment            |An asset in a bank account                                                                                            |\n\nThe chain of resources is as follow: **Users ∈ Connections ∈ Accounts ∈ Transactions or Investments**\n\n### RESTful API\n\nThis API is RESTful, which means it is stateless and each resource is accessed with an unique URI.\n\nSeveral HTTP methods are available:\n\n| Method                  | Description                    |\n| ------------------------|:-------------------------------|\n| GET /resources          | List resources                 |\n| GET /resources/{ID}     | Get a resource from its ID     |\n| POST /resources         | Create a new resource          |\n| POST /resources/{ID}    | Update a resource              |\n| PUT /resources  /{ID}   | Update a resource              |\n| DELETE /resources       | Remove every resources         |\n| DELETE /resources/{ID}  | Delete a resource              |\n\n\nEach resource can contain sub-resources, for example:\n`/users/me/connections/2/accounts/23/transactions/48`\n\n### HTTP response codes\n\n| Code        | Message               | Description                                                                                   |\n| ----------- |:---------------------:|-----------------------------------------------------------------------------------------------|\n| 200         | OK                    |Default response when a GET or POST request has succeed                                        |\n| 202         | Accepted              |For a new connection this code means it is necessary to provide complementary information (2FA)|\n| 204         | No content            |Default response when a POST request succeed without content                                   |\n| 400         | Bad request           |Supplied parameters are incorrect                                                              |\n| 403         | Forbidden             |Invalid token                                                                                  |\n| 500         | Internal Servor Error |Server error                                                                                   |\n| 503         | Service Unavailable   |Service is temporarily unavailable                                                             |\n\n### Errors management\nIn case an error occurs (code 4xx or 5xx), the response can contain a JSON object describing this error:\n```json\n{\n   \"code\": \"authFailure\",\n   \"message\": \"Wrong password\"  // Optional\n}\n```\nIf an error is displayed on the website, Its content is returned in error_message field.\nThe list of all possible errors is listed further down this page.\n\n### Authentication\nA user is authenticated by an access_token which is sent by the API during a call on one of the authentication services, and can be supplied with this header:\n`Authorization: Bearer YYYYYYYYYYYYYYYYYYYYYYYYYYY`\n\n There are two user levels:\n\n    - Normal user, which can only access to his own accounts\n    - Administrator, with extended rights\n\n### Default filters\nDuring a call to an URI which lists resources, some filters can be passed as query parameters:\n\n| Parameter   | Type      | Description                                               |\n| ----------- |:---------:|-----------------------------------------------------------|\n| offset      | Integer   |Offset of the first returned resource                      |\n| limit       | Integer   |Limit number of results                                    |\n| min_date    | Date      |Minimal date (if supported by service), format: YYYY-MM-DD |\n| max_date    | Date      |Maximal date (if supported by service), format: YYYY-MM-DD |\n\n### Extend requests\nDuring a GET on a set of resources or on a unique resource, it is possible to add a parameter expand to the request to extend relations with other resources:\n\n`GET /2.0/users/me/accounts/123?expand=transactions[category],connection`\n\n```json\n{\n   \"id\" : 123\n   \"name\" : \"Compte chèque\"\n   \"balance\" : 1561.15\n   \"transactions\" : [\n      {\n         \"id\" : 9849,\n         \"simplified_wording\" : \"HALL'S BEER\",\n         \"value\" : -513.20,\n         ...\n         \"category\" : {\n            \"id\" : 561,\n            \"name\" : \"Sorties / Bar\",\n            ...\n         }\n       },\n       ...\n   ],\n   \"id_user\" : 1,\n   \"connection\" : {\n      \"id\" : 1518,\n      \"id_bank\" : 41,\n      \"id_user\" : 1,\n      \"error\" : null,\n      ...\n   }\n}\n```\n\n### Request example\n```http\nGET /2.0/banks?offset=0&limit=10&expand=fields\nHost: demo.biapi.pro\nAccept: application/json\nAuthorization: Bearer <token>\n```\n```http\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 3026\nServer: Apache\nDate: Fri, 14 Mar 2014 08:24:02 GMT\n\n{\n   \"banks\" : [\n      {\n         \"id_weboob\" : \"bnporc\",\n         \"name\" : \"BNP Paribas\",\n         \"id\" : 3,\n         \"hidden\" : false,\n         \"fields\" : [\n            {\n               \"id\" : 1,\n               \"id_bank\" : 3,\n               \"regex\" : \"^[0-9]{5,10}$\",\n               \"name\" : \"login\",\n               \"type\" : \"text\",\n               \"label\" : \"Numéro client\"\n            },\n            {\n               \"id\" : 2,\n               \"id_bank\" : 3,\n               \"regex\" : \"^[0-9]{6}$\",\n               \"name\" : \"password\",\n               \"type\" : \"password\",\n               \"label\" : \"Code secret\"\n            }\n         ]\n      },\n      ...\n   ]\n   \"total\" : 41\n}\n```\n\n### Constants\n#### List of bank account types\n| Type          |Description                        |\n| -----------   |-----------------------------------|\n| checking      |Checking account                   |\n| savings       |Savings account                    |\n| deposit       |Deposit accounts                   |\n| loan          |Loan                               |\n| market        | Market accounts                   |\n| joint         |Joint account                      |\n| card          |Card                               |\n| lifeinsurance |Life insurance accounts            |\n| pee           |Plan Épargne Entreprise            |\n| perco         |Plan Épargne Retraite              |\n| article83     |Article 83                         |\n| rsp           |Réserve spéciale de participation  |\n| pea           |Plan d'épargne en actions          |\n| capitalisation|Contrat de capitalisation          |\n| perp          |Plan d'épargne retraite populaire  |\n| madelin       |Contrat retraite Madelin           |\n| unknown       |Inconnu                            |\n\n#### List of transaction types\n\n| Type         |Description                        |\n| -----------  |-----------------------------------|\n|transfer      |Transfers                          |\n|order         |Orders                             |\n|check         |Checks                             |\n|deposit       |Cash deposit                       |\n|payback       |Payback                            |\n|withdrawal    |Withdrawal                         |\n|loan_payment  |Loan payment                       |\n|bank          |Bank fees                          |\n|card          |Card operation                     |\n|deferred_card |Deferred card operation            |\n|card_summary  |Mensual debit of a deferred card   |\n\n#### List of synchronization errors\n##### Error on Connection object\nThe error field may take one of the below values in case of error when accessing the user space.\n\n| Error                      |Description                                                                                       |\n| -----------------------    |--------------------------------------------------------------------------------------------------|\n|wrongpass                   |The authentication on website has failed                                                          |\n|additionalInformationNeeded |Additional information is needed such as an OTP                                                  |\n|websiteUnavailable          |The website is unavailable, for instance we get a HTTP 503 response when requesting the website   |\n|actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |\n|SCARequired                |An SCA process must be done by updating the connection                               |\n|decoupled                  |Requires a user validation (ex: digital key)|\n|passwordExpired                   |The password has expired and needs to be changed on the website.                                                         |\n|webauthRequired                |A complete authentication process is required by update the connection via redirect                            |\n|bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |\n\n#### Error on Account object\nErrors can be filled at the account level in case we access the user's dashboard but some account related data cannot be retrieved.\nFor instance, we may not access the transactions or investments for a specific account.\nGetting an error during an account synchronization does not impact the scraping of other acccounts.\n\n| Error                      |Description                                                                                       |\n| -----------------------    |--------------------------------------------------------------------------------------------------|\n|websiteUnavailable          |The website or a page is unavailable                                                              |\n|actionNeeded                |An action is needed on the website by the user, scraping is blocked                               |\n|bug                         |A bug has occurred during the synchronization. An alert has been sent to Budget Insight           |\n\nNow you know the basics of Budgea API\n- Basic call to retrieve resources\n- Add query parameters to aplly filters\n- Expand resources\n- Authenticated calls\n\nWe're good for the basics! Now let's see how to integrate Budgea in your app and create your first user.\n\n## Integrate Budgea *(protocol or Webview)*\n### The workflow\nUsers of your application exist in the Budgea API.\nEvery User is identified by an access_token which is the shared secret between your application and our API.\n\nThe workflow is as below:\n1. The user is on your application and wants to share his bank accounts or invoices.\n2. A call is made **client side** (browser's javascript or desktop application) to create a temporarily token which will be used to make API calls.\n3. A form is built, allowing the user to select the connector to use (bank or provider, depending on context). Every connector requires different kind of credentials.\n4. A call on the API is made with the temporarily token to add a **Connection** with the credentials supplied by user.\n5. In case of success, the user chooses what bank accounts (**Account**) or subscriptions (**Subscription**) he wants to share with your application.\n6. When he validates the share, the temporarily token is transmitted to your server. This one will call the Budgea API with this token to get a permanent token.\n\n**Note**\nIn case your application works without a server (for example a desktop application), the permanent token can be obtained on the 1st step, by supplying a client_secret to /auth/init and the step 6 is omitted. To get more information, read the protocol.\n\nThere are 3 steps to integrate Budgea in your application:\n1. Provide a way for your users to share their credentials with you\n2. Get the data scraped from Budgea\n3. Be sure to follow the good practices before going into production\n\n### Get credentials from users\nYou have 2 options here:\n- Integrate the Budget Insight's Webview, a turnkey solution to get user's credentials\n- Create your own form following the protocol (must have the *agent* status)\n\n### Budgea webview\n\nThe Budgea webview complements REST API endpoints with web-based services to handle sensitive or complex operations:\n- add a connection (to a bank or a provider), or edit/repare access to a connection;\n- manage connections (add/remove/edit);\n- edit and validate bank transfers (alpha preview).\n\nUsage of the webview is mandatory if you don't hold an Agent status, since you are not allowed to use API endpoints carrying user credentials, and optional otherwise.\n\n#### Implementation guidelines\n\n##### Base URL\n\nThe base URL of all services must be customized:  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/`  \n`https://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/`  \n- `{{domain}}`: substitute with you API domain;\n- `{{lang}}`: optionally specify the language of the webview, `en` or `fr` (if not specified, an automatic redirection will be performed following the language of the browser).\n\n##### Browser integration\n\nServices available as part of the webview are designed as parameterized URLs intended to be opened in a web browser. A callback URI must be specified by callers to be notified at the end of the operation flow, similar to OAuth 2 specification.\n\nYou are encouraged to integrate web-based steps in your product following UX best practices:\n- in a web environment, perform a full-page redirect to the URL (using either [HTTP redirect](https://developer.mozilla.org/fr/docs/Web/HTTP/Status/302) or [scripting](https://developer.mozilla.org/fr/docs/Web/API/Location)), and avoid new tabs or popups;\n- in a native Android app, prefer opening the default browser or relying on [Chrome Custom Tabs](https://developer.chrome.com/multidevice/android/customtabs) to integrating a WebView;\n- in a native iOS app, prefer using a [SFSafariViewController](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller) to integrating a WKWebView.\n\n##### Callback handling\n\nMost flows redirect to a callback URI at the end of the process. Query parameters are added to the URI to identify successful or failed operations.\n\nSuccessful parameters are specific to each flow. In case of an error, the following parameters are added:\n\n| Parameter | Description |\n| - | - |\n| `error` | An lowercase string error code identifying the kind of error that occurred. When the parameter is not present, the response is successful. |\n| `error_description` | A longer string description of the error (not intended for user display). |\n\nCommon error codes include:\n\n| Code | Description |\n| - | - |\n| `access_denied` | The user explicitly cancelled the flow. |\n| `server_error` | Oops, a technical failure occurred during the process. |\n\n**Forward compatibility requirement**: Additional error codes may be added in the future to describe specific cases. When implementing error codes handling, always fallback to a generic case for unknown codes.\n\n##### Browser compatibility\n\nThe webview is designed and tested to work with browsers supported by the Angular framework:  \nhttps://angular.io/guide/browser-support\n\n##### Privacy / GDPR status\n\nThe webview itself does not use any kind of long-term data persistence mechanism such as cookies or local storage, but some authentication or authorization steps may delegate to third-party web services that may implement them.\n\n#### Configuration\n\nYou can configure the appearance and behaviour of the webview by configuring the associated *Client Application* in the console:\n\n| Key | Format | Description |\n| - | - | - |\n| `primary_color` | String | Optional. An accent color (hexadecimal string without '#' prefix) to personalize the UI elements of the webview. If absent, the default color is grey. |\n| `redirect_uri` | String | Optional. A recommended security whitelist configuration. The `redirect_uri` parameter sent to any endpoint of the webview is checked against the configuration, if any. |\n| `config.disable_connector_hints` | Boolean | Optional. This flags hides the list of most-used entries in the connector selection step. The default is `false`, i.e. the list is shown. |\n| `config.use_app_layout` | Boolean | Optional. Use this flag to enable presenting your log as an app icon. The default value is ` false`, i.e. the logo is shown in the top bar of the UI. |\n| `config.disable_accounts_pre_check` | Boolean | Optional. An optional boolean flag to prevent bank accounts to be automatically pre-checked when the user enters the activation step. The default value is ` false`, i.e. the bank accounts are pre-checked. |\n\n#### Endpoints reference\n\n##### Add connection flow\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/connect\n```\n\nThis flow allows an end-user to add a new connection to the API. The flow handles the following steps:\n- selecting a connector;\n- authenticating & authorizing with the connector, by collecting credentials or delegating;\n- managing consent to aggregate accounts/subscriptions;\n- collecting required information for professional accounts.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Optional. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before the connection is added, and you will be returned an access token code scoped to it with the success callback. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `connector_ids` | Optional. A comma-separated list of connector IDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_uuids`. |\n| `connector_uuids` | Optional. A comma-separated list of connector UUIDs available to pick from.<br>If the parameter is omitted, all active connectors are available.<br>If you pass a single value, the user is not prompted to choose the connector.<br>This parameter is mutually exclusive with `connector_ids`. |\n| `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |\n| `account_ibans` | Optional. A comma-separated list of IBANs to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n| `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n| `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n\n###### Successful callback parameters\n\n| Parameter | Description |\n| - | - |\n| `connection_id` | The id of the newly created connection. Please note that when redirecting to the callback URI, the accounts and/or subscriptions are available in the API, but bank transactions or documents may still be syncing in background. |\n| `code` | Optional. If a `code` was *not* initially specified, an API code that you must exchange to obtain a permanent access token associated with the newly-created anonymous user holding the connection. The parameter is URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional. Identical to the `state` parameter that was initially specified. |\n\n###### Additional error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined` | The end-user refused to validate the terms of service. |\n\n##### Re-auth / edit connection credentials flow\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/reconnect\n```\n\nThis flow allows an end-user to re-authenticate against a bank or a provider in order to recover an existing connection, or to completely reset credentials associated with a connection.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API. |\n| `connection_id` | Required. The id of the existing connection. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `reset_credentials` | Optional. In the default mode (`false`), the service will try to recover the connection and prompt the user only with outdated or transient information (new password, OTP...).<br>Set the parameter to `true` to force resetting all the credentials associated with the connection. This parameter may not apply to all connectors. |\n\n###### Successful callback parameters\n\nThis flow adds no parameter to the callback URI in case of success, except from `state`.\n\n##### Manage connections\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/manage\n```\nThis flow allows an end-user to manage the connections associated with his account in the API. The user can add new connections, remove existing ones, fix connection errors, reset credentials or activate/deactivate bank accounts.\n\nSupport of `redirect_uri` in this flow is optional, as it can be integrated or presented as a terminal step, without relying on a final redirection.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API. |\n| `redirect_uri` | Optional. An absolute callback URI. When provided, the webview will display a close button that redirects to it. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow when providing a `redirect_uri`. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `connector_capabilities` | Optional. A comma-separated list of capabilities to filter available connectors when adding a new connection.<br>If the parameter is omitted, `bank` is inferred.<br>If multiple values are provided, only connectors that expose all the requested capabilities are available.<br>To request a bank connection, use `bank`.<br>To request a provider connection, use `document`. |\n| `account_types` | Optional. A comma-separated list of account types to filter accounts available for activation on adding a new bank connection or updating existing connections. Other accounts will not be selectable. |\n| `account_usages` | Optional. A comma-separated list of account usages to filter accounts available for activation in a bank connection context. Other accounts will not be selectable. |\n\n###### Callback parameters\n\nThis flow adds no parameter to the callback URI, except from `state`.\n\n##### Execute a bank transfer (preview)\n\n**Disclaimer**: Transfer or payment services are available as a preview, protocols and parameters are subject to change in upcoming beta/final releases.\n\n```\nhttps://{{domain}}.biapi.pro/2.0/auth/webview/{{lang}}/transfer\n```\nThis flow allows an end-user to execute a bank transfer. The flow handles the following steps:\n- if the transfer is not already created, all steps to authenticate with a bank, select the recipient, the emitter account, the amount and label;\n- executing the transfer, including managing SCAs for recipient registration and/or transfer validation.\n\n###### Endpoint parameters\n\n| Parameter | Description |\n| - | - |\n| `client_id` | Required. The ID of the requesting client application. You can manage client applications of your domain in the admin console. |\n| `redirect_uri` | Required. An absolute callback URI. The webview will redirect to it at the end of the flow. |\n| `code` | Required. A user-scoped temporary code to use with the Budgea API.<br>If you don't provide a code, a new anonymous user will be created before a connection is added and the transfer is executed, and you will be returned an access token code scoped to it with the success callback. |\n| `state` | Optional. An opaque string parameter that you can use to carry state across the flow. The parameter will be set \"as is\" on the callback URI. Make sure that the `state` you provide is properly URL-encoded. |\n| `transfer_id`| Optional. The ID of an prepared transfer to be validated in the webview. The user cannot edit anything on the transfer before validation. |\n\n###### Successfull callback parameters\n\n| Parameter | Description |\n| - | - |\n| `transfer_id` | The ID of the transfer that was created and executed. |\n| `code` | Optional. If a `code` was *not* initially specified, an API code that you can exchange to obtain a permanent access token associated with the newly-created anonymous user holding the transfer. The parameter is URL-encoded, make sure to handle it accordingly. |\n| `state` | Optional. Identical to the `state` parameter that was initially specified. |\n\n###### Additional error codes\n\n| Code | Description |\n| - | - |\n| `tos_declined` | The end-user refused to validate the terms of service. |\n\n#### Migrating from v3\n\nWe provide a full backward compatibility layer with current implementations of the webview v3 to ease the transition. All endpoints remains accessible, with the same parameters and callback behaviour. Migration instructions are provided below.\n\n*The v3 compatibility mode is expected to be removed on 31 December 2019.* You should migrate your implementation a soon as possible to new endpoints and parameters.\n\n##### Add connection flow / Edit connection credentials  \n```\n/connect/select\n```\n\nThis endpoint has been superseded by `/connect` (no suffix) for adding a new connection, and `/reconnect` for resetting or updating an existing connection.\n\n| Endpoint parameter | Migration instructions |\n| - | - |\n| `client_id` | No change. |\n| `redirect_uri`, `state` | No change. |\n| `response_type` | This parameter is not used anymore. |\n| `id_connector`, `connectors` | Superseded by `connector_ids` sent to the `/connect` endpoint. |\n| `types` | Superseded by `connector_capabilities` sent to the `/connect` endpoint.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |\n| `id_connection` | Superseded by `connection_id` sent to the `/reconnect` endpoint. |\n\nPassing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.\n\n| Callback parameter | Migration instructions |\n| - | - |\n| `id_connection` | Superseded by `connection_id`.<br>In the `/reconnect` flow, this parameter is not returned anymore. |\n| `code` | Still named `code`, but in the `/connect` flow the parameter is now **only** added if an anonymous user was created, i.e. the `code` parameter was **not** provided as a query parameter or fragment.<br>In the `/reconnect` flow, this parameter is not returned anymore. |\n| `state` | No change. |\n\n##### Manage connections\n\n```\n/accounts\n```\n\nThis endpoint has been superseded by `/manage`, that now fully allows users to add/remove connections, reset their credentials or recover from error states.\n\n| Endpoint parameter | Migration instructions |\n| - | - |\n| `client_id` | No change. |\n| `redirect_uri`, `state` | No change, these parameters are now optional. |\n| `response_type` | This parameter is not used anymore. |\n| `types` | Superseded by `connector_capabilities`.<br>Use`connector_capabilities=bank` (bank connection) or `connector_capabilities=document` (provider connection). |\n\nPassing the code or access token as an URL fragment is no longer supported, use the `code` query parameter.\n\n| Callback parameter | Migration instructions |\n| - | - |\n| `code` | This parameter is not returned anymore. |\n| `state` | No change. |\n\n##### Behaviour change\n\nIn v3, the `/accounts` flow used to redirect to the `redirect_uri` after a connection addition. This is no longer the case in v4, where redirection is only performed when the user explicitly closes the flow. If you need to perform actions when a connection is added or removed, you should rely on webhooks.\n\n#### Protocol\nThis section describes the protocol used to set bank and provider accounts of a user, in case you don't want to use the webview.\n\nThe idea is to call the following services client-side (with AJAX in case of a web application), to ensure the bank and providers credentials will not be sent to your servers.\n\n1. /auth/init\n```http\nPOST /auth/init\n```\n```json\n{\n   \"auth_token\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\",\n   \"type\" : \"temporary\",\n   \"expires_in\" : 1800,\n   \"id_user\": 1\n}\n```\nThis service creates a temporarily token, to use in the \"Authorization\" header in next calls to the API\n\nThe returned token has a life-time of 30 minutes, and should be transfered to the API then (cf Permanent Token), so that your server can get a permanent access_token.\n\nIt is possible to generate a permanent token immediately, by calling the service with the manage_token, or by supply parameters client_id and client_secret.\n\n2. /banks or /providers\n```http\nGET /banks?expand=fields\nAuthorization: Bearer <token>\n```\n```json\n{\n   \"hidden\" : false,\n         \"charged\" : true,\n         \"name\" : \"American Express\",\n         \"id\" : 30,\n         \"fields\" : [\n            {\n               \"values\" : [\n                  {\n                     \"label\" : \"Particuliers/Professionnels\",\n                     \"value\" : \"pp\"\n                  },\n                  {\n                     \"value\" : \"ent\",\n                     \"label\" : \"Entreprises\"\n                  }\n               ],\n               \"label\" : \"Type de compte\",\n               \"regex\" : null,\n               \"name\" : \"website\",\n               \"type\" : \"list\"\n            },\n            {\n               \"type\" : \"password\",\n               \"label\" : \"Code secret\",\n               \"name\" : \"password\",\n               \"regex\" : \"^[0-9]{6}$\"\n            }\n         ],\n      },\n      ...\n   ],\n   \"total\" : 44,\n}\n```\nYou get a list of connectors, and all associated fields needed to build the form at step 3.\nYou can also use that list to show to your user, all available banks.\n\n3. /users/me/connections\nMake a POST request and supply the id_bank (ID of the chosen bank) or id_provider (ID of provider), and all requested fields as key/value parameters.\nFor example:\n```http\nPOST /users/me/connections\nAuthorization: Bearer <token>\n-F login=12345678\n-F password=123456\n-F id_bank=59\n```\nYou can get the following return codes:\n\n|Code           |Description                                                  |\n|---------------|------------------------------------------------------------ |\n|200            |The connection has succeed and has been created              |\n|202            |It is necessary to provide complementary information. This occurs on the first connection on some kind of Boursorama accounts for example, where a SMS is sent to the customer. It is necessary to ask the user to fill fields requested in the fields, and do a POST again on /users/me/connections/ID, with the connection ID in id_connection. |\n|400            |Unable to connect to the website, the field error in the JSON can be **websiteUnavailable** or **wrongpass**  |\n|403            |Invalid token                                                |\n\n4. Activate accounts\nThe accounts the user wants to aggregate must be activated before any transaction or investment is retrieved.\nSeveral accounts can be activated in 1 request by separating the account ids with commas.\n```http\nPUT /users/me/connections/<id_connection>/accounts/<id_account>?all\n```\n\n5. Permanent token\nIf the user validates the share of his accounts, it is necessary to transform the temporary code to a permanent access_token (so that the user won't expire).\n\nTo do that, make a POST request on /auth/token/access with the following parameters:\n|Parameter            |Description                                                     |\n|---------------------|----------------------------------------------------------------|\n|code                 |The temporarily token which will let you get the access_token   |\n|client_id            |The ID of your client application                               |\n|client_secret        |The secret of your client application                           |\n\n```json\nPOST /auth/token/access\n\n{\n   \"client_id\" : 17473055,\n   \"client_secret\" : \"54tHJHjvodbANVzaRtcLzlHGXQiOgw80\",\n   \"code\" : \"fBqjMZbYddebUGlkR445JKPA6pCoRaGb\"\n}\n```\n```http\nHTTP/1.1 200 OK\n\n{\n   \"access_token\" : \"7wBPuFfb1Hod82f1+KNa0AmrkIuQ3h1G\",\n   \"token_type\":\"Bearer\"\n}\n```\n\n### Update accounts\nAnother important call is when a user wants to add/remove connections to banks or providers, or to change the password on one of them, it is advised to give him a temporarily code from the permanent access_token, with the following call (using the access_token as bearer):\n```http\nPOST /auth/token/code\nAuthorization: Bearer <token>\n```\n```json\n{\n   \"code\" : \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\",\n   \"type\" : \"temporary\",\n   \"expires_in\" : 1800,\n}\n```\nIts life-time is 30 minutes, and let the browser to list connections and accounts, via `GET /users/me/connections?expand=accounts` for example.\n\n To update the password of a connection, you can do a POST on the *connection* resource, with the field *password* in the data. The new credentials are checked to make sure they are valid, and the return codes are the same as when adding a connection.\n\n## Getting the data (Webhooks)\nYou have created your users and their connections, now it's time to get the data.\nThere are 2 ways to retrieve it, the 2 can be complementary:\n- make regular calls to the API\n- use the webhooks (recommended)\n\n### Manual Synchronization\nIt is possible to do a manual synchronization of a user. We recommend to use this method in case the user wants fresh data after logging in.\n\nTo trigger the synchronization, call the API as below:\n`PUT /users/ID/connections`\nThe following call is blocking until the synchronization is terminated.\n\nEven if it is not recommended, it's possible to fetch synchronously new data. To do that, you can use the *expand* parameter:\n` /users/ID/connections?expand=accounts[transactions,investments[type]],subscriptions`\n```json\n{\n   \"connections\" : [\n      {\n         \"accounts\" : [\n            {\n               \"balance\" : 7481.01,\n               \"currency\" : {\n                  \"symbol\" : \"€\",\n                  \"id\" : \"EUR\",\n                  \"prefix\" : false\n               },\n               \"deleted\" : null,\n               \"display\" : true,\n               \"formatted_balance\" : \"7 481,01 €\",\n               \"iban\" : \"FR76131048379405300290000016\",\n               \"id\" : 17,\n               \"id_connection\" : 7,\n               \"investments\" : [\n                  {\n                     \"code\" : \"FR0010330902\",\n                     \"description\" : \"\",\n                     \"diff\" : -67.86,\n                     \"id\" : 55,\n                     \"id_account\" : 19,\n                     \"id_type\" : 1,\n                     \"label\" : \"Agressor PEA\",\n                     \"portfolio_share\" : 0.48,\n                     \"prev_diff\" : 2019.57,\n                     \"quantity\" : 7.338,\n                     \"type\" : {\n                        \"color\" : \"AABBCC\",\n                        \"id\" : 1,\n                        \"name\" : \"Fonds action\"\n                     },\n                     \"unitprice\" : 488.98,\n                     \"unitvalue\" : 479.73,\n                     \"valuation\" : 3520.28\n                  }\n               ],\n               \"last_update\" : \"2015-07-04 15:17:30\",\n               \"name\" : \"Compte chèque\",\n               \"number\" : \"3002900000\",\n               \"transactions\" : [\n                  {\n                     \"active\" : true,\n                     \"application_date\" : \"2015-06-17\",\n                     \"coming\" : false,\n                     \"comment\" : null,\n                     \"commission\" : null,\n                     \"country\" : null,\n                     \"date\" : \"2015-06-18\",\n                     \"date_scraped\" : \"2015-07-04 15:17:30\",\n                     \"deleted\" : null,\n                     \"documents_count\" : 0,\n                     \"formatted_value\" : \"-16,22 €\",\n                     \"id\" : 309,\n                     \"id_account\" : 17,\n                     \"id_category\" : 9998,\n                     \"id_cluster\" : null,\n                     \"last_update\" : \"2015-07-04 15:17:30\",\n                     \"new\" : true,\n                     \"original_currency\" : null,\n                     \"original_value\" : null,\n                     \"original_wording\" : \"FACTURE CB HALL'S BEER\",\n                     \"rdate\" : \"2015-06-17\",\n                     \"simplified_wording\" : \"HALL'S BEER\",\n                     \"state\" : \"parsed\",\n                     \"stemmed_wording\" : \"HALL'S BEER\",\n                     \"type\" : \"card\",\n                     \"value\" : -16.22,\n                     \"wording\" : \"HALL'S BEER\"\n                  }\n               ],\n               \"type\" : \"checking\"\n            }\n         ],\n         \"error\" : null,\n         \"expire\" : null,\n         \"id\" : 7,\n         \"id_user\" : 7,\n         \"id_bank\" : 41,\n         \"last_update\" : \"2015-07-04 15:17:31\"\n      }\n   ],\n   \"total\" : 1,\n}\n```\n\n### Background synchronizations & Webhooks\nWebhooks are callbacks sent to your server, when an event is triggered during a synchronization.\nSynchronizations are automatic, the frequency can be set using the configuration key `autosync.frequency`.\nUsing webhooks allows you to get the most up-to-date data of your users, after each synchronization.\n\nThe automatic synchronization makes it possible to recover new bank entries, or new invoices, at a given frequency.\nYou have the possibility to add webhooks on several events, and choose to receive each one on a distinct URL.\nTo see the list of available webhooks you can call the endpoint hereunder:\n```\ncurl https://demo.biapi.pro/2.0/webhooks_events \\\n  -H 'Authorization: Bearer <token>'\n```\n\nThe background synchronizations for each user are independent, and their plannings are spread over the day so that they do not overload any website.\n\nOnce the synchronization of a user is over, a POST request is sent on the callback URL you have defined, including all webhook data.\nA typical json sent to your server is as below:\n```http\nPOST /callback HTTP/1.1\nHost: example.org\nContent-Length: 959\nAccept-Encoding: gzip, deflate, compress\nAccept: */*\nUser-Agent: Budgea API/2.0\nContent-Type: application/json; charset=utf-8\nAuthorization: Bearer sl/wuqgD2eOo+4Zf9FjvAz3YJgU+JKsJ\n\n{\n   \"connections\" : [\n      {\n         \"accounts\" : [\n            {\n               \"balance\" : 7481.01,\n               \"currency\" : {\n                  \"symbol\" : \"€\",\n                  \"id\" : \"EUR\",\n                  \"prefix\" : false\n               },\n               \"deleted\" : null,\n               \"display\" : true,\n               \"formatted_balance\" : \"7 481,01 €\",\n               \"iban\" : \"FR76131048379405300290000016\",\n               \"id\" : 17,\n               \"id_connection\" : 7,\n               \"investments\" : [\n                  {\n                     \"code\" : \"FR0010330902\",\n                     \"description\" : \"\",\n                     \"diff\" : -67.86,\n                     \"id\" : 55,\n                     \"id_account\" : 19,\n                     \"id_type\" : 1,\n                     \"label\" : \"Agressor PEA\",\n                     \"portfolio_share\" : 0.48,\n                     \"prev_diff\" : 2019.57,\n                     \"quantity\" : 7.338,\n                     \"type\" : {\n                        \"color\" : \"AABBCC\",\n                        \"id\" : 1,\n                        \"name\" : \"Fonds action\"\n                     },\n                     \"unitprice\" : 488.98,\n                     \"unitvalue\" : 479.73,\n                     \"valuation\" : 3520.28\n                  }\n               ],\n               \"last_update\" : \"2015-07-04 15:17:30\",\n               \"name\" : \"Compte chèque\",\n               \"number\" : \"3002900000\",\n               \"transactions\" : [\n                  {\n                     \"active\" : true,\n                     \"application_date\" : \"2015-06-17\",\n                     \"coming\" : false,\n                     \"comment\" : null,\n                     \"commission\" : null,\n                     \"country\" : null,\n                     \"date\" : \"2015-06-18\",\n                     \"date_scraped\" : \"2015-07-04 15:17:30\",\n                     \"deleted\" : null,\n                     \"documents_count\" : 0,\n                     \"formatted_value\" : \"-16,22 €\",\n                     \"id\" : 309,\n                     \"id_account\" : 17,\n                     \"id_category\" : 9998,\n                     \"id_cluster\" : null,\n                     \"last_update\" : \"2015-07-04 15:17:30\",\n                     \"new\" : true,\n                     \"original_currency\" : null,\n                     \"original_value\" : null,\n                     \"original_wording\" : \"FACTURE CB HALL'S BEER\",\n                     \"rdate\" : \"2015-06-17\",\n                     \"simplified_wording\" : \"HALL'S BEER\",\n                     \"state\" : \"parsed\",\n                     \"stemmed_wording\" : \"HALL'S BEER\",\n                     \"type\" : \"card\",\n                     \"value\" : -16.22,\n                     \"wording\" : \"HALL'S BEER\"\n                  }\n               ],\n               \"type\" : \"checking\"\n            }\n         ],\n         \"bank\" : {\n            \"id_weboob\" : \"ing\",\n            \"charged\" : true,\n            \"name\" : \"ING Direct\",\n            \"id\" : 7,\n            \"hidden\" : false\n         },\n         \"error\" : null,\n         \"expire\" : null,\n         \"id\" : 7,\n         \"id_user\" : 7,\n         \"id_bank\" : 41,\n         \"last_update\" : \"2015-07-04 15:17:31\"\n      }\n   ],\n   \"total\" : 1,\n   \"user\" : {\n      \"signin\" : \"2015-07-04 15:17:29\",\n      \"id\" : 7,\n      \"platform\" : \"sharedAccess\"\n   }\n}\n```\nThe authentication on the callback is made with the access_token of the user (which is a shared secret between your server and the Budgea API).\n\nWhen you are in production, it is needed to define a HTTPS URL using a valid certificate, delivered by a recognized authority. If this is not the case, you can contact us to add your CA (Certificate Authority) to our PKI (Public Key Infrastructure).\n\nImportant: it is necessary to send back a HTTP 200 code, without what we consider that data is not correctly taken into account on your system, and it will be sent again at the next user synchronization.\n\n## Guidelines for production\nNow you should have integrated the API inside your application. Make sure your Webhooks URLs are in HTTPS, if so you can enable the production state of the API.\n\nTo make things great, here are some good practices, please check you have respected them:\n- You have provided to your users a way to configure their accounts\n- You have provided to your users a way to change their account passwords\n- You consider the **error** field of Connections, to alert the user in case the state is **wrongpass**\n- You map IDs of Accounts, Subscriptions, Transactions and Documents in your application, to be sure to correctly match them\n- When the deleted field is set on a bank transaction, you delete it in your database\n- You don't loop on all users to launch synchronizations, this might saturate the service\n\nIf you have questions about above points, please contact us. Otherwise, you can put into production!\n\n### Going further\nIf you want to raise the bar for your app and add features such as the ability to do transfers, get invoices, aggregate patrimony and more, please refer to the sections below.\nWe'll discuss complementary APIs building upon the aggregation, allowing for the best of financial apps.\n\n## Budgea API Pay\nThis API allows for the emition of transfers between the aggregated accounts.\nJust like the simple aggregation, BI provides a webview or a protocol to follow, to implement this feature.\n\n### API pay protocol\nThis section describes how the transfer and recipient protocol work, in case you don't want to integrate the webview.\nThe idea is to do following calls client side (with AJAX in case of a web application), so that the interaction with the Budgea API is transparent.\n\n#### Executing a transfer\n1. /auth/token/code\nIf you do calls client side, get a new temporary code for the user, from the access_token. This will prevent security issues.\n```\ncurl -d '' \\\n  https://demo.biapi.pro/2.0/auth/token/code \\\n  -H 'Authorization: Bearer <token>'\n```\n```json\n{\n   \"code\": \"/JiDppWgbmc+5ztHIUJtHl0ynYfw682Z\",\n   \"type\": \"temporary\",\n   \"expires_in\": 1800\n}\n```\nThe returned token has a life-time of 30 minutes.\n\n2. /users/me/accounts?able_to_transfer=1\nList all the accounts that can do transfers. Authenticate the call with the code you got at step 1.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts?able_to_transfer=1 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n{\n  \"accounts\" : [\n      {\n         \"display\" : true,\n         \"balance\" : 2893.36,\n         \"id_type\" : 2,\n         \"number\" : \"****1572\",\n         \"type\" : \"checking\",\n         \"deleted\" : null,\n         \"bic\" : \"BNPAFRPPXXX\",\n         \"bookmarked\" : false,\n         \"coming\" : -2702.74,\n         \"id_user\" : 1,\n         \"original_name\" : \"Compte de chèques\",\n         \"currency\" : {\n            \"symbol\" : \"€\",\n            \"id\" : \"EUR\",\n            \"prefix\" : false\n         },\n         \"name\" : \"lol\",\n         \"iban\" : \"FR7630004012550000041157244\",\n         \"last_update\" : \"2016-12-28 12:31:04\",\n         \"id\" : 723,\n         \"formatted_balance\" : \"2893,36 €\",\n         \"able_to_transfer\" : true,\n         \"id_connection\" : 202\n      }\n   ],\n   \"total\" : 1\n}\n```\n\n3. /users/me/accounts/ID/recipients\nList all available recipients for a given account.\n```\ncurl https://demo.biapi.pro/2.0/users/me/accounts/723/recipients?limit=1 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z'\n```\n```json\n{\n  \"total\" : 27,\n   \"recipients\" : [\n      {\n         \"bank_name\" : \"BNP PARIBAS\",\n         \"bic\" : \"BNPAFRPPXXX\",\n         \"category\" : \"Interne\",\n         \"deleted\" : null,\n         \"enabled_at\" : \"2016-10-31 18:52:53\",\n         \"expire\" : null,\n         \"iban\" : \"FR7630004012550003027641744\",\n         \"id\" : 1,\n         \"id_account\" : 1,\n         \"id_target_account\" : 2,\n         \"label\" : \"Livret A\",\n         \"last_update\" : \"2016-12-05 12:07:24\",\n         \"time_scraped\" : \"2016-10-31 18:52:54\",\n         \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\n      }\n   ]\n}\n```\n\n4. /users/me/accounts/ID/recipients/ID/transfers\nCreate the transfer\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/1/transfers \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F amount=10, \\\n  -F label=\"Test virement\", \\\n  -F exec_date=\"2018-09-12\" // optional\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"amount\" : 10,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"exec_date\" : \"2018-09-12\",\n   \"fees\" : null\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2018-09-12 10:34:59\",\n   \"state\" : \"created\",\n   \"webid\" : null\n}\n```\n\n5. /users/me/transfers/ID\nExecute the transfer\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"amount\" : 10,\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"exec_date\" : \"2016-12-19\",\n   \"fees\" : null,\n   \"fields\" : [\n      {\n         \"label\" : \"Code secret BNP Paribas\",\n         \"type\" : \"password\",\n         \"regex\" : \"^[0-9]{6}$\",\n         \"name\" : \"password\"\n      }\n   ],\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"created\",\n   \"webid\" : null\n}\n```\nHere, an authentication step asks user to enter his bank password. The transfer can be validated with:\n\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/transfers/22 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F validated=true \\\n  -F password=\"123456\"\n```\n```json\n{\n   \"account_iban\" : \"FR7630004012550000041157244\",\n   \"currency\" : {\n      \"id\" : \"EUR\",\n      \"prefix\" : false,\n      \"symbol\" : \"€\"\n   },\n   \"amount\" : 10,\n   \"exec_date\" : \"2016-12-19\",\n   \"fees\" : 0,\n   \"formatted_amount\" : \"10,00 €\",\n   \"id\" : 22,\n   \"id_account\" : 1,\n   \"id_recipient\" : 1,\n   \"label\" : \"Test virement\",\n   \"recipient_iban\" : \"FR7630004012550003027641744\",\n   \"register_date\" : \"2016-12-19 10:34:59\",\n   \"state\" : \"pending\",\n   \"webid\" : \"ZZ10C4FKSNP05TK95\"\n}\n```\nThe field state is changed to *pending*, telling that the transfer has been correctly executed on the bank. A connection synchronization is then launched, to find the bank transaction in the movements history. In this case, the transfer state will be changed to *done*.\n\n#### Adding a recipient\n1. /auth/token/code\nGet a temporary token for the user. Same procedure than step 1 for a transfer.\n\n2. /users/me/accounts?able_to_transfer=1\nList accounts allowing transfers. Same procedure than step 2 for a transfer.\n\n3. /users/me/accounts/ID/recipients/\nAdd a new recipient.\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F iban=FR7613048379405300290000355 \\\n  -F label=\"Papa\", \\\n  -F category=\"Famille\" // optional\n```\n```json\n{\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\" : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : null,\n   \"expire\" : \"2017-04-29 16:56:20\",\n   \"fields\" : [\n      {\n         \"label\" : \"Veuillez entrer le code reçu par SMS\",\n         \"type\" : \"password\",\n         \"regex\" : \"^[0-9]{6}$\",\n         \"name\" : \"sms\"\n      }\n   ],\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"id\" : 2,\n   \"id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\" : \"Papa\",\n   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\" : null,\n   \"webid\" : null\n}\n```\nIt is necessary to post on the object Recipient with the requested fields (here sms), until the add is validated:\n```\ncurl \\\n  https://demo.biapi.pro/2.0/users/me/accounts/1/recipients/2 \\\n  -H 'Authorization: Bearer /JiDppWgbmc+5ztHIUJtHl0ynYfw682Z' \\\n  -F sms=\"123456\"\n```\n```json\n{\n   \"bank_name\" : \"BNP PARIBAS\",\n   \"bic\" : \"BNPAFRPPXXX\",\n   \"category\" : \"Famille\",\n   \"deleted\" : null,\n   \"enabled_at\" : \"2017-05-01 00:00:00\",\n   \"expire\" : null,\n   \"iban\" : \"FR7613048379405300290000355\",\n   \"id\" : 2,\n   \"id_account\" : 1,\n   \"id_target_account\" : null,\n   \"label\" : \"Papa\",\n   \"last_update\" : \"2017-04-29 16:26:20\",\n   \"time_scraped\" : null,\n   \"webid\" : \"2741588268268091098819849694548441184167285851255682796371\"\n}\n```\nIf the field enabled_at is in the future, it means that it isn't possible yet to execute a transfer, as the bank requires to wait a validation period.\n\n### API Pay Webview\nThis section describes how to integrate the webview of the Budgea Pay API inside your application, to let your users do transfers to their recipients.\n\n#### User redirection\nTo redirect the user to the webview, it is necessary to build a URI authenticated with a temporary token.\nThis can be done from our library, or by calling the endpoint `/auth/token/code` (see the protocol section for an example).\nIf the parameter **redirect_uri** is supplied, the user will be redirected to that page once the transfer is done.\n\n#### List of pages\nHere are a list a pages you may call to redirect your user directly on a page of the process:\n|Path                                 |Description of the page                                                           |\n|-------------------------------------|----------------------------------------------------------------------------------|\n|/transfers                           |List Transfers                                                                    |\n|/transfers/accounts                  |List emitter accounts                                                             |\n|/transfers/accounts/id/recipients    |List recipients                                                                   |\n|/transfers/accounts/id/recipients/id |Initialization of a transfer between the account and the recipient                |\n|/transfers/id                        |Detail of a given transfer                                                        |\n\n## Deprecated\n\nThis section lists all the deprecated features in Budgea API. The associated date is the date of its removal.\n**Do not use them**.\n\n### Key Investments (**2019-06-24**)\n\nAdding a temporary new key \"all_investments\" that will include deleted investments in the **webhooks**.\n\n### No automatic expand on User objects (**2019-07-30**)\nIn the API responses, by default, User objects won't display the keys \"config\", \"alert_settings\" and \"invites\" anymore.\nYou will still be able to access this data by expanding the request.\nExample: GET /users/me/?expand=alert_settings,config\n\n### Renaming of \"type\" field for jwt tokens (**2019-07-30**)\nFor user's tokens in the jwt format, the \"type\" field will be renamed from \"shared_access\" to \"sharedAccess\".\n",
    "title": "Budgea API Documentation"
  },
  "paths": {
    "/account_types": {
      "get": {
        "responses": {
          "200": {
            "description": "accounttypes",
            "schema": {
              "required": [
                "accounttypes"
              ],
              "type": "object",
              "properties": {
                "accounttypes": {
                  "items": {
                    "$ref": "#/definitions/AccountType"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account types"
      }
    },
    "/account_types/{id_account_type}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on AccountType resource",
            "schema": {
              "$ref": "#/definitions/AccountType"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account_type",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get an account type"
      }
    },
    "/admin/jwt": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "jwt_token",
                "payload"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "jwt_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE1Mzg1OTUwODYsInR5cGUiOiJtYW5hZ2VfdG9rZW4iLCJhdWQiOiJsb2NhbGhvc3Q6MzE1OCIsImV4cCI6MTUzODU5NTE0Niwic2NvcGUiOiJjb25maWcifQ.Z-ygtorGB3yitd2MNias9r3dPojPh4yxFKO5uVM0NhEty5UhnwkqSZA29JKZKmTc7mUSDc30THFIL-VkHBOu2gfxv3fjrZ9R35jo29H_TEYpxiOxxl0m5jLxDn4KEoWpDCiuwkoEdklVJCOMFGC_Sp3uZ89C82OZ_-7CDExnA99FPKbJpVVHaIQdlmOAATHG-KvRJKJu7j2wIUSpIZ3flIqav9dBtaHbjaI-K0WTSC-a13gdzHJKhHmReKWNL8cOMIziPrUx4zv57_DSLWSI2e2FJ_SKbiEAgHcfEmnwktPwTeAdJhgUq5UVH1EP71NkpTQQL4SzHi3tlKmsG3SCbg",
              "payload": {
                "iat": 1538595086,
                "type": "manage_token",
                "aud": "localhost:3158",
                "exp": 1538595146,
                "scope": "config"
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint generates a new jwt manage token. It requires an admin manage token to be used<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token (default: config)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "duration",
            "description": "number of minute before the token expiration (0 for token that won't expire unless the client application is deleted) (default: 1)"
          }
        ],
        "summary": "Generate a jwt manage token"
      }
    },
    "/auth/confirm": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "user"
              ],
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "confirmed token"
                },
                "user": {
                  "type": "object",
                  "description": "user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "token",
            "description": "token received in email"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application in use"
          }
        ],
        "summary": "Confirm email address"
      }
    },
    "/auth/confirmNewEmail": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "token",
            "description": "token received by email"
          }
        ],
        "summary": "Confirm new email address"
      }
    },
    "/auth/cookie": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "username",
            "description": "username"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token"
          }
        ],
        "summary": "Login with credentials and set as cookie"
      }
    },
    "/auth/init": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "auth_token",
                "type"
              ],
              "type": "object",
              "properties": {
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "auth_token": {
                  "type": "string",
                  "description": "new token created for the new anonymous user"
                },
                "type": {
                  "type": "string",
                  "description": "type of the token"
                }
              }
            },
            "description": "",
            "examples": {
              "expires_in": 1800,
              "auth_token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "type": "temporary"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint creates a new temporary token related to a new anonymous user.<br><br>It will expire 30 minutes after.<br><br>Note: if you supply client_id and client_secret, or if you call this endpoint with the manage_token, the token will be permanent.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "description": "ID of the client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_secret",
            "description": "secret of the client"
          }
        ],
        "summary": "Create a new anonymous user"
      }
    },
    "/auth/jwt": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "jwt_token",
                "payload"
              ],
              "type": "object",
              "properties": {
                "jwt_token": {
                  "type": "string",
                  "description": "the jwt token"
                },
                "payload": {
                  "type": "object",
                  "description": "the payload contained in the jwt token"
                }
              }
            },
            "description": "",
            "examples": {
              "jwt_token": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZF91c2VyIjozMywiYXVkIjoibG9jYWxob3N0OjMxNTgiLCJpc3MiOjE5ODM4OTgyLCJleHAiOjE1Mzg1OTY2OTcsInNjb3BlIjoiIiwiaWF0IjoxNTM4NTk0ODk3LCJ0eXBlIjoic2hhcmVkX2FjY2VzcyJ9.Tesc90tQ35Fk2SbRXw_Da1Ec-AwAzi104N-hrZWyBeXYkoao6512Ym8v_3207zm-bE1mRDjmQJQN0bbvImZlNGKA8JqoxbXF5l8eetXnv-U9yZXp9ScpUoNWxrRbtyyiwIGWDsRjCjOXcrVvzYd0oJ2RpUXR2NFyCCRjuMJFU87ojGj9eHo5e1B78vB1xZe3c3Yyx8bCvm0Qe2JjoSuhnXgMzAuLQm2KHha_9iHuQBC4zmmICOvNsQ5gBWAnf0W0IYHTZG1vioGNstX05nYiGSSlmzP6HgA5CmB2A57rBERFYB7V59wSQJzUyVOpCOuPCp7zPkRNfgFsZqqACg-DDg",
              "payload": {
                "id_user": 33,
                "aud": "localhost:3158",
                "iss": 19838982,
                "exp": 1538596697,
                "iat": 1538594897,
                "scope": "",
                "type": "sharedAccess"
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint generates a new jwt token for the user. This token will last the time in minutes given by the config key auth.default_token_expire (permanent if this the parameter expire=False is given)<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "description": "id of the client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_secret",
            "description": "secret for the client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "user for whom the token has to be generated. If not supplied, a user will be created"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "expire",
            "description": "if set to True, the token will expire n minutes after its creation, n being the value of configuration key auth.default_token_expire (default: True)"
          }
        ],
        "summary": "Generate a user jwt token"
      }
    },
    "/auth/register": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "user",
                "profile"
              ],
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object",
                  "description": "the user profile data object"
                },
                "token": {
                  "type": "string",
                  "description": "the requested token"
                },
                "user": {
                  "type": "object",
                  "description": "the user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "profile": {},
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Create a new user with his email address and password.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "email address"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "sponsor",
            "description": "sponsor code to get advantages"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "APNS or GCM token to send notifications to device"
          }
        ],
        "summary": "Register to API"
      }
    },
    "/auth/resendConfirmEmail": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Sent token can be re-generated as it might be expired. Note that requesting email confirmation on already confirmed profile will raise a BadRequest.<br><br>",
        "parameters": [],
        "summary": "Resend an email to confirm email address."
      }
    },
    "/auth/token": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "scope",
                "user",
                "profile"
              ],
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object",
                  "description": "the user profile data object"
                },
                "scope": {
                  "type": "string",
                  "description": "the token scope"
                },
                "token": {
                  "type": "string",
                  "description": "the requested token"
                },
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "user": {
                  "type": "object",
                  "description": "the user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "profile": {},
              "scope": "",
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Request a new user token by giving an username and a password.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "username",
            "description": "username"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token"
          }
        ],
        "summary": "Login to API with credentials"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Authentication",
          "PFM"
        ],
        "description": "This endpoint removes the token in use.<br><br>",
        "parameters": [],
        "summary": "Remove user access"
      }
    },
    "/auth/token/access": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "access_token",
                "token_type"
              ],
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "the access token transformed from the temporary one"
                },
                "token_type": {
                  "type": "string",
                  "description": "the access token type"
                }
              }
            },
            "description": "",
            "examples": {
              "access_token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "token_type": "Bearer"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "In order to register a new user with the OAuth 2 process, the client has to call this endpoint to request a granted access_token with the received temporary code.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "grant_type",
            "description": "default is \"authorization_code\""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "description": "ID of the client"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "client_secret",
            "description": "secret of the client"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "code",
            "description": "user's temporary code"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "redirect uri used by user"
          }
        ],
        "summary": "Transform a temporary code to a access_token"
      }
    },
    "/auth/token/code": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "code",
                "type",
                "expires_in"
              ],
              "type": "object",
              "properties": {
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "code": {
                  "type": "string",
                  "description": "the temporary token"
                },
                "type": {
                  "type": "object",
                  "description": "the token type"
                }
              }
            },
            "description": "",
            "examples": {
              "expires_in": 1800,
              "code": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "type": "temporary"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint generates a new temporary token for the user.<br><br>In case the access_token is used by a trusted device, and you want to let another one (for example a web browser) access to user resources, use this service to create a token which will expire in 30 minutes.<br><br>",
        "parameters": [],
        "summary": "Generate a user temporary token"
      }
    },
    "/banks": {
      "get": {
        "responses": {
          "200": {
            "description": "banks",
            "schema": {
              "required": [
                "banks"
              ],
              "type": "object",
              "properties": {
                "banks": {
                  "items": {
                    "$ref": "#/definitions/Connector"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      }
    },
    "/banks/categories": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on ConnectorCategory resource",
            "schema": {
              "$ref": "#/definitions/ConnectorCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It requires the name of the category to be created<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of the category to be created"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create bank categories"
      }
    },
    "/banks/categories/{id_category}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on ConnectorCategory resource",
            "schema": {
              "$ref": "#/definitions/ConnectorCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Edit the name for the supplied category.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_category",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "new name for the supplied category"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a bank categories"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on ConnectorCategory resource",
            "schema": {
              "$ref": "#/definitions/ConnectorCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_category",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the supplied category"
      }
    },
    "/banks/{id_connector}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Connections"
        ],
        "description": "By default, it selects a set of 3 connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "range",
            "description": "the length of the connection subset"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "type",
            "description": "to target a specific account type which will be"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "occurrences",
            "description": "require at least N accounts of the targeted"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a subset of id_connection with the largest diversity of account"
      }
    },
    "/banks/{id_connector}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/banks/{id_connector}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/banks/{id_connector}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/banks/{id_connector}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectorSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connector sources"
      }
    },
    "/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "categories",
            "schema": {
              "required": [
                "categories"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "categories": {
                  "items": {
                    "$ref": "#/definitions/Category"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get all existing categories<br><br>",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all categories"
      }
    },
    "/categories/keywords": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Keyword resource",
            "schema": {
              "$ref": "#/definitions/Keyword"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "If the keyword already exists the keyword is not added. Used for the categorization of transactions.<br><br>Form params: - id_category (integer): a reference towards the category associated with the keyword - keyword (string): the searched keyword - income (bool): 1 if the associated category represents an income else 0 - priority (integer): sets the priority for the keyword, used when categorizing<br><br>",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a new keyword associated with a category in the database."
      }
    },
    "/categories/keywords/{id_keyword}": {
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Keyword resource",
            "schema": {
              "$ref": "#/definitions/Keyword"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_keyword",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/categorize": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "failed",
                "total",
                "transactions"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "failed": 1,
              "total": 2,
              "transactions": [
                {
                  "id_category": 84,
                  "state": "categorized_by_keyword",
                  "type": "card",
                  "value": -14,
                  "wording": "the great restaurant  "
                },
                {
                  "id_category": 9998,
                  "state": "fail_categorizing",
                  "type": "card",
                  "value": -14,
                  "wording": "toto"
                }
              ]
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It requires an array of transaction dictionaries. Any fields of transactions that are not required will be kept in the response. The response contains the list of transactions with two more fields: id_category and state (it indicates how the transaction has been categorized)<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "value of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          }
        ],
        "summary": "categorize transactions without storing them"
      }
    },
    "/certificate/{type}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Certificate resource",
            "schema": {
              "$ref": "#/definitions/Certificate"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "type",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get the latest certificate of a type"
      }
    },
    "/clients": {
      "get": {
        "responses": {
          "200": {
            "description": "clients",
            "schema": {
              "required": [
                "clients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "clients": {
                  "items": {
                    "$ref": "#/definitions/Client"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List clients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "generate_keys",
            "description": "if True, generate a rsa pair of keys so the client can be used to generate jwt user tokens (default: False)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "array",
            "name": "redirect_uris",
            "description": "list of allowed redirect uris"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "config",
            "description": "custom config about the client"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a client"
      }
    },
    "/clients/{id_client}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "If you use the manage_token or a configuration token, you will get also the client secret.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get information about a client"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "generate_keys",
            "description": "set a rsa key pair for the client, which make it possible to generate a jwt user token using this client. No effect if the client already has a set of keys(default: False)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "secret",
            "description": "reset the secret"
          },
          {
            "required": false,
            "in": "formData",
            "type": "array",
            "name": "redirect_uris",
            "description": "list of allowed redirect uris"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "primary_color",
            "description": "hexadecimal code of the client primary color (e.g F45B9A)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "secondary_color",
            "description": "hexadecimal code of the client secondary color (e.g F45B9A)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description",
            "description": "text to display as a default description"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description_banks",
            "description": "text to display as a description for banks"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description_providers",
            "description": "text to display as a description for providers"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "pro",
            "description": "Wether the client should display the company manager page"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "config",
            "description": "custom config about the client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "update_config",
            "description": "update the custom information about the client instead of replacing the existing one (default: True)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a client"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a client"
      }
    },
    "/clients/{id_client}/logo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update the client logo"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the client logo"
      }
    },
    "/config": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "limit the results to keys matching the given value"
          }
        ],
        "summary": "Get configuration of the API."
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "connection.disable_new"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "connection.disable_new": "0"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Request: { \"connection.disable_new\": \"0\", \"search\": \"connection.disable_new\" }<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "limit the results to keys matching the given value"
          }
        ],
        "summary": "Set a configuration value on the API."
      }
    },
    "/config/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "configlogs",
            "schema": {
              "required": [
                "configlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "configlogs": {
                  "items": {
                    "$ref": "#/definitions/ConfigLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "limit the results to keys matching the given value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "type",
            "description": "type of change done on the configuration"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date of the change"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date of the change"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get configuration change history of the API."
      }
    },
    "/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connections without a user"
      }
    },
    "/connections/{id_connection}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connector",
            "description": "ID of a connector"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged connectors"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_source",
            "description": "ID of a source"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/connectors": {
      "get": {
        "responses": {
          "200": {
            "description": "connectors",
            "schema": {
              "required": [
                "connectors"
              ],
              "type": "object",
              "properties": {
                "connectors": {
                  "items": {
                    "$ref": "#/definitions/Connector"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Connector"
            },
            "description": "Successful POST on Connector resource",
            "examples": {}
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Send a request to add a new connector<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the bank or provider"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "url",
            "description": "Url of the bank"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "Email of the user"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "Users login"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "Users password"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "types",
            "description": "Type of connector, eg. banks or providers"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "Optionnal comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "sendmail",
            "description": "if set, send an email to user"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Request a new connector"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Connector resource",
            "schema": {
              "$ref": "#/definitions/Connector"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "hidden",
            "description": "to enable  or disable connector (bank or provider)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Enable/disable several connectors"
      }
    },
    "/connectors/{id_connector}": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Connector"
            },
            "description": "Successful PUT on Connector resource",
            "examples": {
              "sync_frequency": null,
              "code": "40618",
              "name": "Boursorama",
              "color": "f10389",
              "beta": true,
              "capabilities": [
                "profile",
                "banktransferaddrecipient",
                "contact",
                "bank",
                "banktransfer"
              ],
              "id": 4,
              "auth_mechanism": "credentials",
              "hidden": false,
              "slug": "BOU",
              "categories": [
                "virtual"
              ],
              "charged": true
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_categories",
            "description": "one or several comma separated categories to map to the given connector (or null to map no category)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "hidden",
            "description": "to enable  or disable connector (bank or provider)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "sync_frequency",
            "description": "Allows you to overload global sync_frequency param"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "auth_mechanism",
            "description": "the authentication mechanism to use for this connector"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit the provided connector"
      }
    },
    "/connectors/{id_connector}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates a connector logo. You can either pass a file to as a parameter to insert and link it with the connector or pass an id_file to link a connector with an existing file. Will fail if the file is already linked with that connector.<br><br>Form params: - id_file (integer): The id of the file to link with that connector. - img (string): Path to the image to link with that connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a connector Logo"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create or Update a connector Logo"
      }
    },
    "/connectors/{id_connector}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/connectors/{id_connector}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/connectors/{id_connector}/logos/{id_logo}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates or update a connector logo. This logo is a mapping between a file (/file route) and a connector (/connectors route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_logo",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create or Update a connector Logo."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_logo",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a single Logo object."
      }
    },
    "/connectors/{id_connector}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectorSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connector sources"
      }
    },
    "/connectors/{id_connector}/sources/{id_source}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectorSource resource",
            "schema": {
              "$ref": "#/definitions/ConnectorSource"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_source",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "auth_mechanism",
            "description": "the authentication mechanism to use for this connector source"
          },
          {
            "name": "disabled",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "to enable or disable connector source"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit the provided connector source"
      }
    },
    "/documenttypes": {
      "get": {
        "responses": {
          "200": {
            "description": "documenttypes",
            "schema": {
              "required": [
                "documenttypes"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documenttypes": {
                  "items": {
                    "$ref": "#/definitions/DocumentType"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get document types"
      }
    },
    "/documenttypes/{id_documenttype}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on DocumentType resource",
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Change value of a document type.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_documenttype",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Displayed name of document type"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "attacheable",
            "description": "If true, documents of this type can be attached to a transaction, and have amount related meta-data"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a document type"
      }
    },
    "/finance/securities": {
      "get": {
        "responses": {
          "200": {
            "description": "securities",
            "schema": {
              "required": [
                "securities"
              ],
              "type": "object",
              "properties": {
                "securities": {
                  "items": {
                    "$ref": "#/definitions/Security"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get securities"
      }
    },
    "/finance/securities/{id_security}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_security",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/hash": {
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management",
          "PFM",
          "Authentication"
        ],
        "description": "deletes all connections of the user given his hash<br><br>",
        "parameters": [],
        "summary": "Delete the user's connections"
      }
    },
    "/invoicing": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "You can get all the invoicing data or just specific ones by using the available parameters.<br><br>If no parameters are specified, no invoicing data is returned.<br><br>",
        "parameters": [
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "users_synced",
            "description": "the number of user synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "users_bank",
            "description": "the number of user of the Bank API synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "users_bill",
            "description": " the number of user of the Bill API synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "accounts_synced",
            "description": "the number of accounts synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "subscriptions_synced",
            "description": "the number of subscriptions synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "connections_synced",
            "description": "the number of connections synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "connections_account",
            "description": "the number of Bank API connections synchronized during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "transfers_synced",
            "description": "the number of transfers done during the period"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "all",
            "description": "get all the invoicing data at once"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "detail",
            "description": "get full ids list instead of numbers"
          }
        ],
        "summary": "Get invoicing data for a given period (default is the current month)."
      }
    },
    "/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connector",
            "description": "ID of a connector"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged connectors"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_source",
            "description": "ID of a source"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/merchants": {
      "get": {
        "responses": {
          "200": {
            "description": "clients",
            "schema": {
              "required": [
                "clients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "clients": {
                  "items": {
                    "$ref": "#/definitions/Client"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List clients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of merchant"
          },
          {
            "required": true,
            "in": "formData",
            "type": "array",
            "name": "redirect_uris",
            "description": "list of allowed redirect uris"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "payments initiated by this merchant will be done to this IBAN"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a merchant. Needs a user identified in bearer to be used"
      }
    },
    "/merchants/{id_client}/logo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update the client logo"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the client logo"
      }
    },
    "/monitoring": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "period",
            "description": "number on days on which stats on synchronization have to be done per worker (Default: 1)"
          }
        ],
        "summary": "get performances stats on this instance"
      }
    },
    "/ocr": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_transaction",
            "description": "Transaction used to help OCR to find data"
          },
          {
            "required": true,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          }
        ],
        "tags": [
          "OCR",
          "Providers",
          "Documents"
        ],
        "summary": "Post an image with OCR",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Post an image and apply OCR on it to obtain found meta-data.<br><br>"
      }
    },
    "/oidc/whitelist": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "It requires the authorized redirect uri to be created<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "authorized redirect uri to be created"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Adds an authorized redirect uri"
      }
    },
    "/oidc/whitelist/{id_whitelist}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "Edit the uri for the supplied authorized redirect uri.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_whitelist",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "new authorized redirect uri"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a authorized redirect uri"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_whitelist",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the supplied authorized redirect uri"
      }
    },
    "/providers": {
      "get": {
        "responses": {
          "200": {
            "description": "providers",
            "schema": {
              "required": [
                "providers"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "providers": {
                  "items": {
                    "$ref": "#/definitions/Connector"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      }
    },
    "/providers/{id_connector}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Connections"
        ],
        "description": "By default, it selects a set of 3 connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "range",
            "description": "the length of the connection subset"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a random subset of provider's id_connection"
      }
    },
    "/providers/{id_connector}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/providers/{id_connector}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/providers/{id_connector}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this connector.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this connector."
      }
    },
    "/providers/{id_connector}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectorSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connector sources"
      }
    },
    "/terms": {
      "get": {
        "responses": {
          "200": {
            "description": "termsofservices",
            "schema": {
              "required": [
                "termsofservices"
              ],
              "type": "object",
              "properties": {
                "termsofservices": {
                  "items": {
                    "$ref": "#/definitions/TermsOfService"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Return the current terms and the content of the associated file"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TermsOfService resource",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "version",
            "description": "Number of version"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "file_content",
            "description": "file containing the terms, optional"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Register a version of 'Terms of Service' in database"
      }
    },
    "/test/sync": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "It can be used to test receiving data on your webhooks.<br><br>",
        "parameters": [],
        "summary": "Test synchronization on a random connection."
      }
    },
    "/test/webhooks": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "It can be used to test receiving data on your webhooks.<br><br>",
        "parameters": [],
        "summary": "Test synchronization on a random connection."
      }
    },
    "/users": {
      "get": {
        "responses": {
          "200": {
            "description": "users",
            "schema": {
              "required": [
                "users"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "users": {
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "searches a user by mail (if it contains no '@', '@biapi.pro' will be added at the end)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get users"
      }
    },
    "/users/{id_user}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on User resource",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM",
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a user"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on User resource",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Authentication",
          "Users management"
        ],
        "description": "This endpoint deletes the user.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the user"
      }
    },
    "/users/{id_user}/account_types": {
      "get": {
        "responses": {
          "200": {
            "description": "accounttypes",
            "schema": {
              "required": [
                "accounttypes"
              ],
              "type": "object",
              "properties": {
                "accounttypes": {
                  "items": {
                    "$ref": "#/definitions/AccountType"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account types"
      }
    },
    "/users/{id_user}/account_types/{id_account_type}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on AccountType resource",
            "schema": {
              "$ref": "#/definitions/AccountType"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account_type",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get an account type"
      }
    },
    "/users/{id_user}/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "accounts",
            "schema": {
              "required": [
                "accounts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "accounts": {
                  "items": {
                    "$ref": "#/definitions/Account"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts list."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "This endpoint creates an account related to a connection or not.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "balance of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "number",
            "description": "number of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_currency",
            "description": "the currency of the account (default: 'EUR')"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_connection",
            "description": "the connection to attach to the account"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an account"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update many accounts at once"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It updates a specific account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "display",
            "description": "If the account is displayed"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Balance of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the account is disabled (not synchronized)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "bookmarked",
            "description": "If the account is bookmarked"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "usage",
            "description": "Usage of the account : PRIV, ORGA or ASSO"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update an account"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It deletes a specific account.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an account."
      }
    },
    "/users/{id_user}/accounts/{id_account}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/accounts/{id_account}/delta": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get account delta between sums of transactions and difference of account balance for the given period.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get deltas of accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments/{id_investment}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/accounts/{id_account}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "accountlogs",
            "schema": {
              "required": [
                "accountlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "accountlogs": {
                  "items": {
                    "$ref": "#/definitions/AccountLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get logs of account. By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts logs."
      }
    },
    "/users/{id_user}/accounts/{id_account}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user"
      }
    },
    "/users/{id_user}/accounts/{id_account}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investemens"
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investemens"
      }
    },
    "/users/{id_user}/accounts/{id_account}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "category",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "bank_name",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "deleted",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "bic",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "label",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "iban",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "error",
            "in": "query"
          },
          {
            "required": false,
            "type": "string",
            "name": "id",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "if config key transfer.recipient.iban_white_list.enabled is set to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries will be deleted<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/accounts/{id_account}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectionSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account sources"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/accounts/{id_account}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/accountsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "example"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "example": {
                "balance_min2": 0,
                "balance_min1": 500,
                "expense_max": 500,
                "enabled": true,
                "accounts": null,
                "income_max": 500
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get alert configuration of a specific account"
      },
      "put": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "example"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "example": {
                "balance_min2": 0,
                "balance_min1": 500,
                "expense_max": 500,
                "enabled": true,
                "accounts": null,
                "income_max": 500
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "It updates the alert configuration of a specific account<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "threshold from which an alert has to be sent for a high expense"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "accounts",
            "description": "list of accounts (id coma separated) on wich the alert has to be applied. If 'all' is given, it is applied on all accounts. default: all"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "threshold from which an alert has to be sent for a high income"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "balance_min2",
            "description": "second threshold from which an alert has to be sent for a low balance"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "enabled",
            "description": "if false, the alert is not taken into account"
          }
        ],
        "summary": "Update alert configuration of an account"
      }
    },
    "/users/{id_user}/alerts": {
      "get": {
        "responses": {
          "200": {
            "description": "alerts",
            "schema": {
              "required": [
                "alerts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "alerts": {
                  "items": {
                    "$ref": "#/definitions/Alert"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get alerts"
      }
    },
    "/users/{id_user}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/categories/full": {
      "get": {
        "responses": {
          "200": {
            "description": "categorys",
            "schema": {
              "required": [
                "categorys"
              ],
              "type": "object",
              "properties": {
                "categorys": {
                  "items": {
                    "$ref": "#/definitions/Category"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get the category"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Category resource",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the category."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_parent_category",
            "description": "ID of the parent category."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_parent_category_in_menu",
            "description": "ID of the parent category to be displayed."
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "color",
            "description": "Color of the category."
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income category. If null, this is both an income and an expense category."
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "refundable",
            "description": "This category accepts opposite sign of transactions."
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "accountant_account",
            "description": "Accountant account number."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a new transaction category"
      }
    },
    "/users/{id_user}/categories/full/{id_full}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Category resource",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_full",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "hide",
            "description": "Hide (but not delete) a category. Must be 0, 1 or toggle."
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "accountant_account",
            "description": "Accountant account number."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Modify a user-created category"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Category resource",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_full",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a user-created transaction category"
      }
    },
    "/users/{id_user}/config": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "biapi.last_push"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "biapi.last_push": "2016-12-18T12:31:15"
            }
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get configuration of a user."
      },
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Change configuration of a user. modifications on keys prefixed by 'biapi.' (except callback_url) are ignored"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "- keys (string): list of coma separated keys to be deleted.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Delete the given user configurations. deletions on keys prefixed by 'biapi.' (except callback_url) are ignored"
      }
    },
    "/users/{id_user}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connections"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Create a new connection to a given bank or provider. You have to give all needed parameters (use /banks/ID/fields or /providers/ID/fields to get them).<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "source",
            "description": "optional comma-separated list of sources to use for the connection synchronization"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_connector",
            "description": "ID of the connector"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "connector_uuid",
            "description": "optional uuid of the connector (replaces id_connector)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "birthday",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "oauth_token",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "oauth_token_secret",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "auth_type",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "secret",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "birthdate",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "nuser",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "website",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "openapiwebsite",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "website",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_provider",
            "description": "ID of the provider"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a new connection."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all connections"
      }
    },
    "/users/{id_user}/connections/{id_connection}": {
      "get": {
        "responses": {
          "200": {
            "description": "connection",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get connection by ID",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Give new parameters to change on the configuration of this connection (for example \"password\").<br><br>It tests connection to website, and if it fails, a 400 response is given with the error code \"wrongpass\" or \"websiteUnavailable\".<br><br>You can also supply meta-parameters on connection, like 'active' or 'expire'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "Set if the connection synchronisation is active"
          },
          {
            "name": "expire",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Set expiration of the connection to this date"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "Set login to this new login"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "Set password to this new password"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "decoupled",
            "description": "Try to update a connection with the decoupled error"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a connection."
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "We suggest to pass parameter expand=accounts[transactions] to get all *new* and *updated* transactions.<br><br>Query params: - expand (string): fields to expand - last_update (dateTime): if supplied, get transactions inserted since this date<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Force synchronisation of a connection."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "This endpoint deletes a connection and all related accounts and transactions.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a connection."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "accounts",
            "schema": {
              "required": [
                "accounts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "accounts": {
                  "items": {
                    "$ref": "#/definitions/Account"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts list."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "This endpoint creates an account related to a connection or not.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "balance of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "number",
            "description": "number of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_currency",
            "description": "the currency of the account (default: 'EUR')"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_connection",
            "description": "the connection to attach to the account"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an account"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update many accounts at once"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It updates a specific account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "display",
            "description": "If the account is displayed"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Balance of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the account is disabled (not synchronized)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "bookmarked",
            "description": "If the account is bookmarked"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "usage",
            "description": "Usage of the account : PRIV, ORGA or ASSO"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update an account"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It deletes a specific account.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an account."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/delta": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get account delta between sums of transactions and difference of account balance for the given period.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get deltas of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "accountlogs",
            "schema": {
              "required": [
                "accountlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "accountlogs": {
                  "items": {
                    "$ref": "#/definitions/AccountLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get logs of account. By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts logs."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investemens"
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investemens"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "if config key transfer.recipient.iban_white_list.enabled is set to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries will be deleted<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectionSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account sources"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/informations": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            },
            "description": "connections",
            "examples": {
              "owner": {
                "...": "...",
                "name": "Monsieur Honoré Émile"
              },
              "compagny": {
                "...": "...",
                "name": "Roundcore"
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection additionnal informations"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments/{id_investment}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connector",
            "description": "ID of a connector"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged connectors"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_source",
            "description": "ID of a source"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "if config key transfer.recipient.iban_white_list.enabled is set to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries will be deleted<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/sources": {
      "get": {
        "responses": {
          "200": {
            "description": "sources",
            "schema": {
              "required": [
                "sources"
              ],
              "type": "object",
              "properties": {
                "sources": {
                  "items": {
                    "$ref": "#/definitions/ConnectionSource"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection sources"
      }
    },
    "/users/{id_user}/connections/{id_connection}/sources/{id_source}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on ConnectionSource resource",
            "schema": {
              "$ref": "#/definitions/ConnectionSource"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "This will make it so the specified source will be able to be synchronized.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_source",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Enable connection source"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectionSource resource",
            "schema": {
              "$ref": "#/definitions/ConnectionSource"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "This will make it so the specified source will be able to be synchronized.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_source",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Enable connection source"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on ConnectionSource resource",
            "schema": {
              "$ref": "#/definitions/ConnectionSource"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "This will make it so the specified source will not be synchronized anymore.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_source",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Disable a connection source"
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update many subscriptions at once"
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It updates a specific subscription<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the subscription"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the subscription is disabled (not synchronized)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a subscription"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It deletes a specific subscription.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a subscription."
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "subscriptionlogs",
            "schema": {
              "required": [
                "subscriptionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "subscriptionlogs": {
                  "items": {
                    "$ref": "#/definitions/SubscriptionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Get logs of subscription.<br><br>By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get subscriptions logs."
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/devices": {
      "get": {
        "responses": {
          "200": {
            "description": "devices",
            "schema": {
              "required": [
                "devices"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "devices": {
                  "items": {
                    "$ref": "#/definitions/Device"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get devices"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "the GCM or APNS notification_token to use"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "the device in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "notification_version",
            "description": "version of notifications"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a device linked to specified token."
      }
    },
    "/users/{id_user}/devices/{id_device}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a device"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "the GCM or APNS notification_token to use"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "the device in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "notification_version",
            "description": "version of notifications"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update attributes of the device."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete device."
      }
    },
    "/users/{id_user}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/forecast": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get forecast"
      }
    },
    "/users/{id_user}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/investments/{id_investment}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connector",
            "description": "ID of a connector"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged connectors"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_source",
            "description": "ID of a source"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/ocr": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_transaction",
            "description": "Transaction used to help OCR to find data"
          },
          {
            "required": true,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          }
        ],
        "tags": [
          "OCR",
          "Providers",
          "Documents"
        ],
        "summary": "Post an image with OCR",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Post an image and apply OCR on it to obtain found meta-data.<br><br>"
      }
    },
    "/users/{id_user}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user"
      }
    },
    "/users/{id_user}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investemens"
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investemens"
      }
    },
    "/users/{id_user}/pockets": {
      "get": {
        "responses": {
          "200": {
            "description": "pockets",
            "schema": {
              "required": [
                "pockets"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "pockets": {
                  "items": {
                    "$ref": "#/definitions/Pocket"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get pockets"
      }
    },
    "/users/{id_user}/profiles": {
      "get": {
        "responses": {
          "200": {
            "description": "profiles",
            "schema": {
              "required": [
                "profiles"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "profiles": {
                  "items": {
                    "$ref": "#/definitions/Profile"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get profiles"
      }
    },
    "/users/{id_user}/profiles/main": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get the main profile"
      }
    },
    "/users/{id_user}/profiles/me": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get my profile"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "change email of profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "change password of profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "current_password",
            "description": "needed when changing the password or the email"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "contact",
            "description": "change contact information of a profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "conf",
            "description": "change config of a profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "state",
            "description": "state of the profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "lang",
            "description": "change lang of the profile"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Change settings of the profile."
      }
    },
    "/users/{id_user}/profiles/{id_profile}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_profile",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a profile"
      }
    },
    "/users/{id_user}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "if config key transfer.recipient.iban_white_list.enabled is set to 1, recipients whose IBAN are not from countries codes contained in transfer.recipient.iban_white_list.entries will be deleted<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "background",
            "description": "if true, do synchronization in background"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/resume": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "examples"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "examples": {
                "resume_enabled": true,
                "promotion_enabled": true,
                "newsletter_enabled": true,
                "resume_frequency": 7,
                "last_resume": "2018-07-10 10:08:39"
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get synthesis configuration of a specific user"
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "examples"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "examples": {
                "resume_enabled": true,
                "promotion_enabled": true,
                "newsletter_enabled": true,
                "resume_frequency": 7,
                "last_resume": "2018-07-10 10:08:39"
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "resume_enabled",
            "description": "whether the synthesis is activated or not"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "resume_frequency",
            "description": "frequency of the synthesis given in days"
          }
        ],
        "summary": "Update synthesis configuration"
      }
    },
    "/users/{id_user}/subscriptions": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update many subscriptions at once"
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It updates a specific subscription<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the subscription"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the subscription is disabled (not synchronized)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a subscription"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It deletes a specific subscription.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a subscription."
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "subscriptionlogs",
            "schema": {
              "required": [
                "subscriptionlogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "subscriptionlogs": {
                  "items": {
                    "$ref": "#/definitions/SubscriptionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "Get logs of subscription.<br><br>By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get subscriptions logs."
      }
    },
    "/users/{id_user}/terms": {
      "get": {
        "responses": {
          "200": {
            "description": "termsofservices",
            "schema": {
              "required": [
                "termsofservices"
              ],
              "type": "object",
              "properties": {
                "termsofservices": {
                  "items": {
                    "$ref": "#/definitions/TermsOfService"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get active terms object for a specific user, only one terms can be active"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TermsOfService resource",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_terms",
            "description": "terms id"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Register user's consent for a specific terms id"
      }
    },
    "/users/{id_user}/token": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n"
            }
          }
        },
        "tags": [
          "Users management",
          "Authentication"
        ],
        "description": "Create an access_token for this user and get it.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          }
        ],
        "summary": "Create a token"
      }
    },
    "/users/{id_user}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_recipient",
            "description": "set the recipient of the transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/webauth": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Authentication",
          "Transfer"
        ],
        "description": "The route encapsulate 2 functionalities: 1. Create or update a connection through oAuth2 session.<br><br>2. Execute a transfer through OAuth2 session.",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_transfer",
            "description": "ID of the transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "client_id",
            "description": "Client Application ID"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "Redirect URI"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "Optional state"
          }
        ],
        "summary": "First step to establish an oAuth2 connection."
      }
    },
    "/webhooks": {
      "get": {
        "responses": {
          "200": {
            "description": "webhooks",
            "schema": {
              "required": [
                "webhooks"
              ],
              "type": "object",
              "properties": {
                "webhooks": {
                  "items": {
                    "$ref": "#/definitions/Webhook"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get webhooks"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_auth",
            "description": "The webhook authentication process to use (its ID or its name)"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "params",
            "description": "The webhook parameters as an object with three keys: type, key and value"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Adds a new webhook"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Updates the deleted field with the date of the deletion<br><br>",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes all webhooks"
      }
    },
    "/webhooks/auth": {
      "get": {
        "responses": {
          "200": {
            "description": "authproviders",
            "schema": {
              "required": [
                "authproviders"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "authproviders": {
                  "items": {
                    "$ref": "#/definitions/AuthProvider"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get webhooks authentication types"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on AuthProvider resource",
            "schema": {
              "$ref": "#/definitions/AuthProvider"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "type",
            "description": "The type of the authentication process (oauth, certificate, token, etc...)"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "The name of the authentication process to differentiate"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "config",
            "description": "The authentication process configuration. A dict contains either the certificate"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Adds a new webhook authentication type"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on AuthProvider resource",
            "schema": {
              "$ref": "#/definitions/AuthProvider"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes all webhook authentication types"
      }
    },
    "/webhooks/auth/{id_auth}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on AuthProvider resource",
            "schema": {
              "$ref": "#/definitions/AuthProvider"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_auth",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "type",
            "description": "The type of the authentication process (oauth, certificate, token, etc...)"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "The name of the authentication process to differentiate"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "config",
            "description": "The authentication process configuration. A dict containing either the certificate"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates the webhook authentication type"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on AuthProvider resource",
            "schema": {
              "$ref": "#/definitions/AuthProvider"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_auth",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "type",
            "description": "The type of the authentication process (oauth, certificate, token, etc...)"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "The name of the authentication process to differentiate"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "config",
            "description": "The authentication process configuration. A dict containt either the certificate"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates the webhook authentication type"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on AuthProvider resource",
            "schema": {
              "$ref": "#/definitions/AuthProvider"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Updates the deleted field with the date of the deletion<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_auth",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes the webhook authentication type"
      }
    },
    "/webhooks/{id_webhook}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "deleted",
            "description": "a date to delete the webhook or 'null' to enable it"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_auth",
            "description": "The webhook authentication process to use"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates a webhook"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "deleted",
            "description": "a date to delete the webhook or 'null' to enable it"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_auth",
            "description": "The webhook authentication process to use"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates a webhook"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Updates the deleted field with the date of the deletion<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes a webhook"
      }
    },
    "/webhooks/{id_webhook}/add_to_data": {
      "get": {
        "responses": {
          "200": {
            "description": "webhooks",
            "schema": {
              "required": [
                "webhooks"
              ],
              "type": "object",
              "properties": {
                "webhooks": {
                  "items": {
                    "$ref": "#/definitions/Webhook"
                  },
                  "type": "array"
                },
                "total": {
                  "type": "number",
                  "description": "total number of results"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "retrieve the list of the value to add in webhooks when sending the requested webhook"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "For each parameter, a value will be added in the webhook data. Use the key to set the name of the field. The values that can be added are to be found in the user configuration.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Setup a field to store in user config when calling the endpoint"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "delete all entries"
      }
    },
    "/webhooks/{id_webhook}/add_to_data/{key}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "key",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "retrieve the value to add in the requested webhook for the requested name"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "For each parameter, a value will be added in the webhook data. Use the key to set the name of the field. The values that can be added are to be found in the user configuration.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "key",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "upate the requested field to store in user config when calling the endpoint"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "key",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "delete the requested entry"
      }
    },
    "/webhooks/{id_webhook}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "webhooklogs",
            "schema": {
              "required": [
                "webhooklogs"
              ],
              "type": "object",
              "properties": {
                "total": {
                  "type": "number",
                  "description": "total number of results"
                },
                "webhooklogs": {
                  "items": {
                    "$ref": "#/definitions/WebhookLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Get logs of the webhooks.<br><br>By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "limit number of results to this user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get webhooks logs."
      }
    }
  },
  "host": "demo.biapi.pro",
  "x-deactivated_services": [],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "Connector": {
      "required": [
        "id",
        "name",
        "charged",
        "beta",
        "uuid",
        "restricted"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the connector"
        },
        "name": {
          "type": "string",
          "description": "Name of the bank or provider"
        },
        "hidden": {
          "default": false,
          "type": "boolean",
          "description": "This connector is hidden from your users"
        },
        "charged": {
          "default": true,
          "type": "boolean",
          "description": "Usage of this connector is charged"
        },
        "code": {
          "type": "string",
          "description": "Bank code"
        },
        "beta": {
          "default": false,
          "type": "boolean",
          "description": "If true, this connector is perhaps unstable :)"
        },
        "color": {
          "type": "string",
          "description": "Main color of the bank or provider"
        },
        "slug": {
          "type": "string"
        },
        "sync_frequency": {
          "type": "number",
          "description": "How many days to wait between syncs",
          "format": "float"
        },
        "months_to_fetch": {
          "type": "integer",
          "description": "How many months of history to fetch"
        },
        "auth_mechanism": {
          "type": "string",
          "description": "Authentication mechanism to use"
        },
        "siret": {
          "type": "string",
          "description": "SIRET code for Bill modules"
        },
        "uuid": {
          "type": "string",
          "description": "Unique connector identifier"
        },
        "restricted": {
          "default": false,
          "type": "boolean",
          "description": "If true, new connections cannot be added with this connector"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "hidden": false,
        "charged": true,
        "code": "",
        "beta": false,
        "color": "",
        "slug": "",
        "sync_frequency": 0,
        "months_to_fetch": 0,
        "auth_mechanism": "",
        "siret": "",
        "uuid": "",
        "restricted": false
      }
    },
    "ConnectorSource": {
      "required": [
        "id",
        "id_connector",
        "name",
        "id_weboob"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the connector source"
        },
        "id_connector": {
          "type": "integer",
          "description": "ID of the connector"
        },
        "name": {
          "type": "string",
          "description": "Name of the source"
        },
        "id_weboob": {
          "type": "string"
        },
        "auth_mechanism": {
          "type": "string",
          "description": "Authentication mechanism to use"
        },
        "fallback": {
          "type": "string",
          "description": "Name of the source this fallback is for"
        },
        "disabled": {
          "type": "string",
          "description": "This source is not used to synchronize the connection",
          "format": "date-time"
        },
        "priority": {
          "type": "integer",
          "description": "The source priority order for the synchronization"
        }
      },
      "example": {
        "id": 0,
        "id_connector": 0,
        "name": "",
        "id_weboob": "",
        "auth_mechanism": "",
        "fallback": "",
        "disabled": "2019-12-27 16:17:55.183995",
        "priority": 0
      }
    },
    "Field": {
      "required": [
        "id_connector",
        "id",
        "name",
        "label"
      ],
      "type": "object",
      "properties": {
        "id_connector": {
          "type": "integer",
          "description": "ID of the related connector"
        },
        "id": {
          "type": "integer",
          "description": "ID of the field"
        },
        "name": {
          "type": "string",
          "description": "Name of the field"
        },
        "label": {
          "type": "string",
          "description": "Label to display to user"
        },
        "regex": {
          "type": "string",
          "description": "If set, the value must match this regexp"
        },
        "type": {
          "default": "text",
          "type": "string",
          "description": "Type of field (text, password, list, hidden)"
        },
        "ephemeral": {
          "default": false,
          "type": "boolean",
          "description": "This field will not be saved in database"
        },
        "value": {
          "type": "string",
          "description": "Default value of the field"
        },
        "required": {
          "default": true,
          "type": "boolean",
          "description": "If true, field has to be set to synchronize the connection"
        },
        "auth_mechanisms": {
          "type": "string",
          "description": "Authentication mechanisms this field is used for"
        }
      },
      "example": {
        "id_connector": 0,
        "id": 0,
        "name": "",
        "label": "",
        "regex": "",
        "type": "text",
        "ephemeral": false,
        "value": "",
        "required": true,
        "auth_mechanisms": ""
      }
    },
    "ConnectorLogo": {
      "required": [
        "id",
        "id_connector",
        "id_file"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_connector": {
          "type": "integer",
          "description": "ID of the connector"
        },
        "id_file": {
          "type": "integer",
          "description": "Id of the Bank/Provider Logo"
        },
        "type": {
          "type": "string",
          "description": "Logo's type"
        }
      },
      "example": {
        "id": 0,
        "id_connector": 0,
        "id_file": 0,
        "type": ""
      }
    },
    "User": {
      "required": [
        "id",
        "signin",
        "platform"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "signin": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "platform": {
          "enum": [
            "web",
            "iPad",
            "iPhone",
            "Android",
            "CAstore",
            "requestAccess",
            "sharedAccess",
            "transfer",
            "refresh_token"
          ],
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "signin": "CURRENT_TIMESTAMP",
        "platform": ""
      }
    },
    "Keyword": {
      "required": [
        "id",
        "keyword",
        "id_category",
        "priority",
        "income"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "keyword": {
          "type": "string"
        },
        "id_category": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "income": {
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "keyword": "",
        "id_category": 0,
        "priority": 0,
        "income": false
      }
    },
    "AuthProvider": {
      "required": [
        "id",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Name to differentiate the authentication type"
        },
        "type": {
          "type": "string",
          "description": "Authentication type to use when pushing the webhook"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "type": ""
      }
    },
    "TermsOfService": {
      "required": [
        "id",
        "version",
        "created"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "id_file": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "version": "",
        "id_file": 0,
        "created": "2019-12-27 16:17:55.197166",
        "deleted": "2019-12-27 16:17:55.197240"
      }
    },
    "Category": {
      "required": [
        "id",
        "id_parent_category",
        "name",
        "color",
        "id_parent_category_in_menu",
        "refundable"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the category"
        },
        "id_parent_category": {
          "type": "integer",
          "description": "ID of the parent category. If this is a parent category, it will be equal to its own ID"
        },
        "name": {
          "type": "string",
          "description": "Name of the category"
        },
        "income": {
          "type": "boolean",
          "description": "Is an income category. If null, this is both an income and an expense category"
        },
        "color": {
          "type": "string",
          "description": "Color of the category"
        },
        "id_parent_category_in_menu": {
          "type": "integer",
          "description": "ID of the parent category to be displayed"
        },
        "name_displayed": {
          "type": "string",
          "description": "Displayed name, with HTML tags"
        },
        "refundable": {
          "type": "boolean",
          "description": "This category accepts opposite sign of transactions"
        },
        "id_user": {
          "type": "integer",
          "description": "If not null, this category is specific to a user"
        },
        "id_logo": {
          "type": "integer",
          "description": "ID of the logo"
        }
      },
      "example": {
        "id": 0,
        "id_parent_category": 0,
        "name": "",
        "income": false,
        "color": "",
        "id_parent_category_in_menu": 0,
        "name_displayed": "",
        "refundable": false,
        "id_user": 0,
        "id_logo": 0
      }
    },
    "Client": {
      "required": [
        "id",
        "name",
        "secret",
        "redirect_uris",
        "pro"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "default": "",
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "public_key": {
          "type": "string"
        },
        "private_key": {
          "type": "string"
        },
        "redirect_uris": {
          "default": "",
          "type": "string"
        },
        "pro": {
          "default": false,
          "type": "boolean",
          "description": "Should the client display the company manager page."
        },
        "id_logo": {
          "type": "integer"
        },
        "config": {
          "type": "string",
          "description": "customizable config"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "secret": "",
        "public_key": "",
        "private_key": "",
        "redirect_uris": "",
        "pro": false,
        "id_logo": 0
      }
    },
    "File": {
      "required": [
        "id",
        "content_type",
        "filename",
        "file_size"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "content_type": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "file_size": {
          "type": "integer"
        }
      },
      "example": {
        "id": 0,
        "content_type": "",
        "filename": "",
        "file_size": 0
      }
    },
    "Security": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the security"
        },
        "code": {
          "type": "string",
          "description": "ISIN code of the security"
        },
        "name": {
          "type": "string",
          "description": "Name of the security"
        },
        "id_type": {
          "type": "integer",
          "description": "ID of the security type"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the security",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "code": "",
        "name": "",
        "id_type": 0,
        "last_update": "2019-12-27 16:17:55.203476"
      }
    },
    "Webhook": {
      "required": [
        "id",
        "created",
        "updated"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the webhook"
        },
        "created": {
          "type": "string",
          "description": "Date of the webhook creation",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "Date of the webhook last update",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "Date of the webhook deletion",
          "format": "date-time"
        },
        "id_service": {
          "type": "integer",
          "description": "ID of the service"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the emitter user"
        },
        "id_event": {
          "type": "integer",
          "description": "ID of the webhook event"
        },
        "id_auth": {
          "type": "integer",
          "description": "ID of the authentication process"
        },
        "url": {
          "type": "string",
          "description": "URL of the webhook"
        },
        "add_to_data": {
          "type": "string",
          "description": "json object to describe data to add"
        }
      },
      "example": {
        "id": 0,
        "created": "2019-12-27 16:17:55.205052",
        "updated": "2019-12-27 16:17:55.205127",
        "deleted": "2019-12-27 16:17:55.205189",
        "id_service": 0,
        "id_user": 0,
        "id_event": 0,
        "id_auth": 0,
        "url": ""
      }
    },
    "WebhookData": {
      "required": [
        "id",
        "id_webhook",
        "id_user",
        "created"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the webhook data"
        },
        "id_webhook": {
          "type": "integer",
          "description": "ID of the webhook"
        },
        "id_service": {
          "type": "integer",
          "description": "ID of the recipient service"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the emitter user"
        },
        "id_resource": {
          "type": "integer",
          "description": "a changing ID used to filter webhookdata depending on the event triggered"
        },
        "data": {
          "type": "string",
          "description": "Data emitted"
        },
        "mimetype": {
          "type": "string",
          "description": "Mimetype of the data"
        },
        "created": {
          "type": "string",
          "description": "Timestamp when the hook data was generated",
          "format": "date-time"
        },
        "success": {
          "type": "string",
          "description": "Timestamp when the hook has been successfully called",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_webhook": 0,
        "id_service": 0,
        "id_user": 0,
        "id_resource": 0,
        "mimetype": "",
        "created": "2019-12-27 16:17:55.207112",
        "success": "2019-12-27 16:17:55.207178"
      }
    },
    "WebhookLog": {
      "required": [
        "id",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the log"
        },
        "id_webhook_data": {
          "type": "integer",
          "description": "ID of the webhook data"
        },
        "id_service": {
          "type": "integer",
          "description": "ID of the service"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the user"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp when the hook was sent",
          "format": "date-time"
        },
        "response_date": {
          "type": "string",
          "description": "Timestamp of the reply to the hook",
          "format": "date-time"
        },
        "response_code": {
          "type": "integer",
          "description": "Return code of the reply to the hook"
        },
        "next_try": {
          "type": "string",
          "description": "If the log is an error, do not retry to push before this timestamp",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_webhook_data": 0,
        "id_service": 0,
        "id_user": 0,
        "timestamp": "2019-12-27 16:17:55.207847",
        "response_date": "2019-12-27 16:17:55.207908",
        "response_code": 0,
        "next_try": "2019-12-27 16:17:55.208014"
      }
    },
    "DocumentType": {
      "required": [
        "id",
        "name",
        "attacheable"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "attacheable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "attacheable": true
      }
    },
    "HashTable": {
      "required": [
        "wording",
        "income",
        "display",
        "nature"
      ],
      "type": "object",
      "properties": {
        "wording": {
          "type": "string"
        },
        "income": {
          "type": "boolean"
        },
        "display": {
          "default": true,
          "type": "boolean"
        },
        "nature": {
          "type": "string"
        }
      },
      "example": {
        "wording": "",
        "income": false,
        "display": true,
        "nature": ""
      }
    },
    "Connection": {
      "required": [
        "id",
        "id_connector",
        "active"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "id_connector": {
          "type": "integer",
          "description": "ID of the related connector"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update",
          "format": "date-time"
        },
        "created": {
          "default": "<function <lambda> at 0x7f8894ce1aa0>",
          "type": "string",
          "description": "Creation date",
          "format": "date-time"
        },
        "active": {
          "default": true,
          "type": "boolean",
          "description": "This connection is active and will be automatically synced"
        },
        "last_push": {
          "type": "string",
          "description": "Last successful push",
          "format": "date-time"
        },
        "next_try": {
          "type": "string",
          "description": "Date of next synchronization",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_connector": 0,
        "last_update": "2019-12-27 16:17:55.214719",
        "created": "<function <lambda> at 0x7f8894ce1aa0>",
        "active": true,
        "last_push": "2019-12-27 16:17:55.214905",
        "next_try": "2019-12-27 16:17:55.214963"
      }
    },
    "ConnectionLog": {
      "required": [
        "id",
        "id_connection",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the log"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the user"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the connection"
        },
        "id_connector": {
          "type": "integer",
          "description": "ID of the connector"
        },
        "id_source": {
          "type": "integer",
          "description": "ID of the related connection source"
        },
        "login": {
          "type": "string",
          "description": "bcrypt hash of the login"
        },
        "error_uid": {
          "type": "string",
          "description": "MD5 hash of the exception backtrace"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of log, when the synchronization has finished",
          "format": "date-time"
        },
        "next_try": {
          "type": "string",
          "description": "If fail, the date represents the next try to connect",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If fail, contains the error code"
        },
        "error_message": {
          "type": "string",
          "description": "If fail, error message received from connector"
        },
        "statut": {
          "type": "integer",
          "description": "Status of user (1 = charged user)"
        },
        "nb_accounts": {
          "type": "integer",
          "description": "In case of bank connection, number of accounts"
        },
        "start": {
          "type": "string",
          "description": "Timestamp when the synchronization has started",
          "format": "date-time"
        },
        "worker": {
          "type": "string",
          "description": "Worker used to do synchronization"
        },
        "session_folder_id": {
          "type": "string",
          "description": "Session folder uid"
        },
        "fields": {
          "type": "string",
          "description": "Fields for connection in additionalInformationNeeded state with background option"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_connection": 0,
        "id_connector": 0,
        "id_source": 0,
        "login": "",
        "error_uid": "",
        "timestamp": "CURRENT_TIMESTAMP",
        "next_try": "2019-12-27 16:17:55.216094",
        "error": "",
        "error_message": "",
        "statut": 0,
        "nb_accounts": 0,
        "start": "2019-12-27 16:17:55.216370",
        "worker": "",
        "session_folder_id": ""
      }
    },
    "Transfer": {
      "description": "This is a representation of a transfer.",
      "required": [
        "id",
        "exec_date",
        "register_date",
        "amount",
        "state",
        "beneficiary_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of transfer"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the debited account"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "id_recipient": {
          "type": "integer",
          "description": "ID of the recipient"
        },
        "account_iban": {
          "type": "string",
          "description": "IBAN of the debited account"
        },
        "recipient_iban": {
          "type": "string",
          "description": "IBAN of the recipient in bank recipient list"
        },
        "exec_date": {
          "type": "string",
          "description": "Date when the transfer will be operated by the bank",
          "format": "date"
        },
        "register_date": {
          "type": "string",
          "description": "Date when the transfer has been registered",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transfer",
          "format": "float"
        },
        "fees": {
          "type": "number",
          "description": "Fees taken by the bank",
          "format": "float"
        },
        "webid": {
          "type": "string",
          "description": "WebID of the transfer"
        },
        "state": {
          "type": "string",
          "description": "State of the transfer (created, scheduled, validating, pending, coming, done, canceled, transactionNotFound, deleted, error, bug)"
        },
        "error": {
          "type": "string",
          "description": "Error message during transfer, if any"
        },
        "label": {
          "type": "string",
          "description": "Label of the transfer"
        },
        "account_balance": {
          "type": "number",
          "description": "Balance of the account just before the transfer",
          "format": "float"
        },
        "id_transaction": {
          "type": "integer",
          "description": "If found, ID of the related transaction"
        },
        "beneficiary_type": {
          "default": "recipient",
          "type": "string",
          "description": "Type of beneficiary number, for example: 'recipient' (in bank recipient list), 'iban' or 'phone_number'"
        },
        "beneficiary_number": {
          "type": "string",
          "description": "Beneficiary bank identifier value like recipient webid, iban: EX6713281847025300290000062 or phone_number: 06XXXXXX"
        },
        "beneficiary_label": {
          "type": "string",
          "description": "Label of the beneficiary (needed for transfer to other beneficiary type than 'recipient')"
        },
        "validate_mechanism": {
          "type": "string",
          "description": "Authentication method used to validate transfer (credentials or webauth)"
        },
        "currency": {
          "type": "object",
          "description": "Currency of the object"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_user": 0,
        "id_recipient": 0,
        "account_iban": "",
        "recipient_iban": "",
        "exec_date": "2019-12-27",
        "register_date": "2019-12-27 16:17:55.220954",
        "amount": 0,
        "fees": 0,
        "webid": "",
        "state": "",
        "error": "",
        "label": "",
        "account_balance": 0,
        "id_transaction": 0,
        "beneficiary_type": "recipient",
        "beneficiary_number": "",
        "beneficiary_label": "",
        "validate_mechanism": "",
        "currency": ""
      }
    },
    "Order": {
      "required": [
        "id",
        "id_merchant",
        "id_transfer"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the order"
        },
        "id_merchant": {
          "type": "integer",
          "description": "id of the merchant who initiated the order"
        },
        "id_transfer": {
          "type": "integer",
          "description": "id of the transfer used to pay this the order"
        },
        "state": {
          "type": "string",
          "description": "State of the order (result of the recipient adding and the transfer execution)"
        },
        "error_message": {
          "type": "string",
          "description": "more information on the state if something went wrong during the order"
        },
        "opt_out_cause": {
          "type": "string",
          "description": "set by the webview, indicates at which step of the payment the user has left the order"
        },
        "refund_value": {
          "type": "number",
          "description": "Amount refunded",
          "format": "float"
        }
      },
      "example": {
        "id": 0,
        "id_merchant": 0,
        "id_transfer": 0,
        "state": "",
        "error_message": "",
        "opt_out_cause": "",
        "refund_value": 0
      }
    },
    "Certificate": {
      "required": [
        "id",
        "id_public_key_file",
        "id_private_key_file",
        "type",
        "created"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_public_key_file": {
          "type": "integer"
        },
        "id_private_key_file": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_public_key_file": 0,
        "id_private_key_file": 0,
        "type": "",
        "created": "2019-12-27 16:17:55.226500"
      }
    },
    "ProjectType": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "icon_url": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "icon_url": ""
      }
    },
    "Access": {
      "required": [
        "id",
        "id_profile"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "id_profile": {
          "type": "integer"
        },
        "id_role": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_profile": 0,
        "id_role": 0,
        "email": ""
      }
    },
    "Profile": {
      "required": [
        "id",
        "id_user",
        "role",
        "email",
        "statut",
        "admin"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "role": {
          "default": "admin",
          "enum": [
            "admin",
            "ser"
          ],
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "statut": {
          "default": 0,
          "type": "integer"
        },
        "admin": {
          "default": false,
          "type": "boolean"
        },
        "conf": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "role": "admin",
        "statut": 0,
        "admin": false,
        "conf": "",
        "lang": ""
      }
    },
    "TransactionsCluster": {
      "required": [
        "id",
        "id_account",
        "mean_amount",
        "enabled",
        "wording"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_account": {
          "type": "integer"
        },
        "mean_amount": {
          "type": "number",
          "format": "float"
        },
        "median_increment": {
          "type": "integer"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "next_date": {
          "type": "string",
          "format": "date"
        },
        "wording": {
          "type": "string"
        },
        "id_category": {
          "type": "integer"
        },
        "created_by": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "mean_amount": 0,
        "median_increment": 0,
        "enabled": true,
        "next_date": "2019-12-27",
        "wording": "",
        "id_category": 0,
        "created_by": ""
      }
    },
    "UserAlert": {
      "description": "/!\\ Careful we use default value from database if present\n\n    For more information see AlertsPlugin.init",
      "required": [
        "id",
        "value_type",
        "type",
        "resume_frequency"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "income_max": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "expense_max": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "balance_min1": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "balance_min2": {
          "default": 0,
          "type": "number",
          "format": "float"
        },
        "balance_max": {
          "default": 10000,
          "type": "number",
          "format": "float"
        },
        "resume_enabled": {
          "default": true,
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "value_type": {
          "default": "flat",
          "type": "string"
        },
        "type": {
          "default": "transactions",
          "type": "string"
        },
        "transaction_types": {
          "type": "string"
        },
        "date_range": {
          "type": "integer"
        },
        "apply": {
          "type": "string"
        },
        "resume_frequency": {
          "default": 7,
          "type": "integer"
        }
      },
      "example": {
        "id": 0,
        "income_max": 500,
        "expense_max": 500,
        "balance_min1": 500,
        "balance_min2": 0,
        "balance_max": 10000,
        "resume_enabled": true,
        "enabled": true,
        "value_type": "flat",
        "type": "transactions",
        "transaction_types": "",
        "date_range": 0,
        "apply": "",
        "resume_frequency": 7
      }
    },
    "AccountType": {
      "required": [
        "id",
        "name",
        "is_invest",
        "weboob_type_id",
        "display_name_p",
        "display_name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the account type"
        },
        "name": {
          "type": "string",
          "description": "Name of the account type"
        },
        "is_invest": {
          "default": false,
          "type": "boolean",
          "description": "Is it an investment account"
        },
        "weboob_type_id": {
          "type": "integer",
          "description": "Map to the weboob_type_id"
        },
        "display_name_p": {
          "type": "string",
          "description": "Name to display in plurial"
        },
        "display_name": {
          "type": "string",
          "description": "Name to display in singular"
        },
        "color": {
          "type": "string",
          "description": "Color of the account type (hexdecimal)"
        },
        "id_parent": {
          "type": "integer",
          "description": "Id of the parent type"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "is_invest": false,
        "weboob_type_id": 0,
        "display_name_p": "",
        "display_name": "",
        "color": "",
        "id_parent": 0
      }
    },
    "Subscription": {
      "required": [
        "id",
        "number",
        "label"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of subscription"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of related connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of related user"
        },
        "id_source": {
          "type": "integer",
          "description": "ID of the related connection source"
        },
        "number": {
          "type": "string",
          "description": "Subscription's number"
        },
        "label": {
          "type": "string",
          "description": "Label of the subscription"
        },
        "subscriber": {
          "type": "string",
          "description": "Name of the subscriber"
        },
        "validity": {
          "type": "string",
          "description": "The subscription is valid until this date, if any",
          "format": "date"
        },
        "renewdate": {
          "type": "string",
          "description": "Next renew date, if any",
          "format": "date"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the subscription",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "This subscription is not found on the website anymore",
          "format": "date-time"
        },
        "disabled": {
          "type": "string",
          "description": "This subscription has been deleted by user and will not be synchronized anymore",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If the last update has failed, the error code"
        }
      },
      "example": {
        "id": 0,
        "id_connection": 0,
        "id_user": 0,
        "id_source": 0,
        "number": "",
        "label": "",
        "subscriber": "",
        "validity": "2019-12-27",
        "renewdate": "2019-12-27",
        "last_update": "2019-12-27 16:17:55.250146",
        "deleted": "2019-12-27 16:17:55.250214",
        "disabled": "2019-12-27 16:17:55.250273",
        "error": ""
      }
    },
    "Transaction": {
      "required": [
        "id",
        "id_account",
        "date",
        "nature",
        "original_wording",
        "simplified_wording",
        "stemmed_wording",
        "state",
        "date_scraped",
        "rdate",
        "coming",
        "active"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the transaction"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "webid": {
          "type": "string",
          "description": "Webid of the transaction"
        },
        "application_date": {
          "type": "string",
          "description": "Date considered by PFM services. It is used to change the month of a transaction, for example.",
          "format": "date"
        },
        "date": {
          "type": "string",
          "description": "Debit date",
          "format": "date"
        },
        "value": {
          "type": "number",
          "description": "Value of the transaction",
          "format": "float"
        },
        "gross_value": {
          "type": "number",
          "description": "Gross value of the transaction",
          "format": "float"
        },
        "nature": {
          "default": "inconnu",
          "type": "string",
          "description": "Type of transaction"
        },
        "original_wording": {
          "type": "string",
          "description": "Full label of the transaction"
        },
        "simplified_wording": {
          "type": "string",
          "description": "Simplified label of the transaction"
        },
        "stemmed_wording": {
          "type": "string",
          "description": "Do not use it"
        },
        "wording": {
          "type": "string",
          "description": "Label set by the user"
        },
        "id_category": {
          "type": "integer",
          "description": "ID of the related category"
        },
        "state": {
          "default": "new",
          "type": "string",
          "description": "Internal state of the transaction"
        },
        "date_scraped": {
          "type": "string",
          "description": "Date when the transaction has been seen",
          "format": "date-time"
        },
        "rdate": {
          "type": "string",
          "description": "Realization of the transaction",
          "format": "date"
        },
        "vdate": {
          "type": "string",
          "description": "Value date of the transaction",
          "format": "date"
        },
        "bdate": {
          "type": "string",
          "description": "Date used by the bank for the transaction",
          "format": "date"
        },
        "coming": {
          "type": "boolean",
          "description": "If true, this transaction hasn't been yet debited"
        },
        "active": {
          "default": true,
          "type": "boolean",
          "description": "If false, PFM services will ignore this transaction"
        },
        "id_cluster": {
          "type": "integer",
          "description": "If the transaction is part of a cluster"
        },
        "comment": {
          "type": "string",
          "description": "User comment"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the transaction",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "If set, this transaction has been removed from the bank",
          "format": "date-time"
        },
        "original_value": {
          "type": "number",
          "description": "Value in the original currency",
          "format": "float"
        },
        "original_gross_value": {
          "type": "number",
          "description": "Gross value in the original currency",
          "format": "float"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "commission": {
          "type": "number",
          "description": "Commission taken on the transaction",
          "format": "float"
        },
        "commission_currency": {
          "type": "object",
          "description": "Commission currency"
        },
        "country": {
          "type": "string",
          "description": "Original country"
        },
        "counterparty": {
          "type": "string",
          "description": "Counterparty"
        },
        "card": {
          "type": "string",
          "description": "Card number associated to the transaction"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "webid": "",
        "application_date": "2019-12-27",
        "date": "2019-12-27",
        "value": 0,
        "gross_value": 0,
        "nature": "inconnu",
        "wording": "",
        "id_category": 0,
        "state": "new",
        "date_scraped": "2019-12-27 16:17:55.252832",
        "rdate": "2019-12-27",
        "vdate": "2019-12-27",
        "bdate": "2019-12-27",
        "coming": false,
        "active": true,
        "id_cluster": 0,
        "comment": "",
        "last_update": "2019-12-27 16:17:55.253360",
        "deleted": "2019-12-27 16:17:55.253424",
        "original_value": 0,
        "original_gross_value": 0,
        "original_currency": "",
        "commission": 0,
        "commission_currency": "",
        "country": "",
        "counterparty": "",
        "card": ""
      }
    },
    "Investment": {
      "required": [
        "id",
        "id_account",
        "label",
        "code"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the investment"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "label": {
          "type": "string",
          "description": "Label of the investment"
        },
        "code": {
          "type": "string",
          "description": "Investment code"
        },
        "code_type": {
          "type": "string",
          "description": "Code type (ISIN of AMF)"
        },
        "source": {
          "type": "string",
          "description": "Source of the ISIN code (website, notFound)"
        },
        "description": {
          "type": "string",
          "description": "Description of the investment"
        },
        "quantity": {
          "default": 0,
          "type": "number",
          "description": "Quantity",
          "format": "float"
        },
        "unitprice": {
          "default": 0,
          "type": "number",
          "description": "Average buy price",
          "format": "float"
        },
        "unitvalue": {
          "default": 0,
          "type": "number",
          "description": "Current unit value",
          "format": "float"
        },
        "valuation": {
          "default": 0,
          "type": "number",
          "description": "Current valuation",
          "format": "float"
        },
        "diff": {
          "default": 0,
          "type": "number",
          "description": "Capital gain",
          "format": "float"
        },
        "diff_percent": {
          "type": "number",
          "description": "Capital gain in percent (between 0 and 1)",
          "format": "float"
        },
        "prev_diff": {
          "type": "number",
          "description": "Capital gain from previous value",
          "format": "float"
        },
        "portfolio_share": {
          "type": "number",
          "description": "Percent of the portfolio",
          "format": "float"
        },
        "vdate": {
          "type": "string",
          "description": "Value date",
          "format": "date"
        },
        "prev_vdate": {
          "type": "string",
          "description": "Value date of the previous value (prev_diff)",
          "format": "date"
        },
        "id_security": {
          "type": "integer",
          "description": "ID of the related security"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "original_valuation": {
          "type": "number",
          "description": "Valuation in original currency",
          "format": "float"
        },
        "original_unitvalue": {
          "type": "number",
          "description": "Average buy price in the original currency",
          "format": "float"
        },
        "original_unitprice": {
          "type": "number",
          "description": "Current unit value in the original currency",
          "format": "float"
        },
        "original_diff": {
          "type": "number",
          "description": "Capital gain in the original currency",
          "format": "float"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the investment",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "If set, this investment has been removed from the website",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "label": "",
        "code": "",
        "code_type": "",
        "source": "",
        "description": "",
        "quantity": 0,
        "unitprice": 0,
        "unitvalue": 0,
        "valuation": 0,
        "diff": 0,
        "diff_percent": 0,
        "prev_diff": 0,
        "portfolio_share": 0,
        "vdate": "2019-12-27",
        "prev_vdate": "2019-12-27",
        "id_security": 0,
        "original_currency": "",
        "original_valuation": 0,
        "original_unitvalue": 0,
        "original_unitprice": 0,
        "original_diff": 0,
        "last_update": "2019-12-27 16:17:55.257343",
        "deleted": "2019-12-27 16:17:55.257402"
      }
    },
    "Recipient": {
      "required": [
        "id",
        "id_account",
        "label",
        "category",
        "last_update"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the recipient"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "id_target_account": {
          "type": "integer",
          "description": "ID of the target account, in case of internal recipient"
        },
        "label": {
          "type": "string",
          "description": "Label of the recipient"
        },
        "bank_name": {
          "type": "string",
          "description": "Bank of the recipient"
        },
        "iban": {
          "type": "string",
          "description": "IBAN of the recipient"
        },
        "webid": {
          "type": "string",
          "description": "Webid of the recipient"
        },
        "category": {
          "type": "string",
          "description": "Category in which the recipient is"
        },
        "last_update": {
          "type": "string",
          "description": "Last time we have fetched this recipient",
          "format": "date-time"
        },
        "time_scraped": {
          "type": "string",
          "description": "First time we've seen this recipient",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "The recipient isn't found anymore on the bank",
          "format": "date-time"
        },
        "expire": {
          "type": "string",
          "format": "date-time"
        },
        "enabled_at": {
          "type": "string",
          "description": "It will be possible to do transfers to this recipient at this date",
          "format": "date-time"
        },
        "add_verified": {
          "type": "boolean",
          "description": "Was the recipient adding authorized"
        },
        "state": {
          "type": "string",
          "description": "State of recipient"
        },
        "error": {
          "type": "string",
          "description": "Error message"
        },
        "fields": {
          "type": "string",
          "description": "Fields for recipient with additionalInformationNeeded state"
        },
        "currency": {
          "type": "object",
          "description": "Currency of the object"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_target_account": 0,
        "label": "",
        "bank_name": "",
        "iban": "",
        "webid": "",
        "category": "",
        "last_update": "2019-12-27 16:17:55.258763",
        "time_scraped": "2019-12-27 16:17:55.258823",
        "deleted": "2019-12-27 16:17:55.258879",
        "expire": "2019-12-27 16:17:55.258940",
        "enabled_at": "2019-12-27 16:17:55.259115",
        "add_verified": false,
        "state": "",
        "error": "",
        "currency": ""
      }
    },
    "Document": {
      "required": [
        "id",
        "id_user",
        "timestamp",
        "readonly",
        "has_file_on_website"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_type": {
          "type": "integer"
        },
        "id_category": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "id_subscription": {
          "type": "integer"
        },
        "id_file": {
          "type": "integer"
        },
        "id_thumbnail": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "duedate": {
          "type": "string",
          "format": "date"
        },
        "total_amount": {
          "type": "number",
          "format": "float"
        },
        "untaxed_amount": {
          "type": "number",
          "format": "float"
        },
        "vat": {
          "type": "number",
          "format": "float"
        },
        "income": {
          "default": true,
          "type": "boolean"
        },
        "readonly": {
          "default": true,
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the document",
          "format": "date-time"
        },
        "has_file_on_website": {
          "default": true,
          "type": "boolean",
          "description": "Boolean to set if file is available on website"
        },
        "currency": {
          "type": "object",
          "description": "Document currency"
        }
      },
      "example": {
        "id": 0,
        "id_type": 0,
        "id_category": 0,
        "id_user": 0,
        "id_subscription": 0,
        "id_file": 0,
        "id_thumbnail": 0,
        "name": "",
        "timestamp": "CURRENT_TIMESTAMP",
        "date": "2019-12-27 16:17:55.260543",
        "duedate": "2019-12-27",
        "total_amount": 0,
        "untaxed_amount": 0,
        "vat": 0,
        "income": true,
        "readonly": true,
        "number": "",
        "issuer": "",
        "last_update": "2019-12-27 16:17:55.261123",
        "has_file_on_website": true,
        "currency": ""
      }
    },
    "Account": {
      "required": [
        "id",
        "original_name",
        "balance",
        "display",
        "bookmarked"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the account"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the related connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "id_source": {
          "type": "integer",
          "description": "ID of the related connection source"
        },
        "id_parent": {
          "type": "integer",
          "description": "Id of the parent account"
        },
        "number": {
          "type": "string",
          "description": "Account number"
        },
        "webid": {
          "type": "string",
          "description": "Account webid"
        },
        "original_name": {
          "type": "string",
          "description": "Original name of the account on the bank"
        },
        "balance": {
          "type": "number",
          "description": "Balance of the account",
          "format": "float"
        },
        "coming": {
          "default": 0,
          "type": "number",
          "description": "Amount of coming operations not yet debited",
          "format": "float"
        },
        "display": {
          "default": true,
          "type": "boolean",
          "description": "Display this account in accounts list"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the account",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "This account is not found on the website anymore",
          "format": "date-time"
        },
        "disabled": {
          "type": "string",
          "description": "This account has been deleted by user and will not be synchronized anymore",
          "format": "date-time"
        },
        "iban": {
          "type": "string",
          "description": "Account IBAN"
        },
        "currency": {
          "type": "object",
          "description": "Account currency"
        },
        "id_type": {
          "type": "integer",
          "description": "ID of the account type"
        },
        "bookmarked": {
          "default": false,
          "type": "integer",
          "description": "This account has been bookmarked by user"
        },
        "name": {
          "type": "string",
          "description": "Name of the account"
        },
        "error": {
          "type": "string",
          "description": "If the last update has failed, the error code"
        },
        "usage": {
          "type": "string",
          "description": "Account usage (if not set by the user, displays the value of original_usage)"
        },
        "ownership": {
          "type": "string",
          "description": "Relationship between the credentials owner and the account"
        },
        "company_name": {
          "type": "string",
          "description": "Name of the company holding the employee savings of the account"
        }
      },
      "example": {
        "id": 0,
        "id_connection": 0,
        "id_user": 0,
        "id_source": 0,
        "id_parent": 0,
        "number": "",
        "webid": "",
        "original_name": "",
        "balance": 0,
        "coming": 0,
        "display": true,
        "last_update": "2019-12-27 16:17:55.263959",
        "deleted": "2019-12-27 16:17:55.264019",
        "disabled": "2019-12-27 16:17:55.264077",
        "iban": "",
        "currency": "",
        "id_type": 0,
        "bookmarked": false,
        "name": "",
        "error": "",
        "usage": "",
        "ownership": "",
        "company_name": ""
      }
    },
    "Project": {
      "required": [
        "id",
        "id_user",
        "id_type",
        "name",
        "target",
        "saved",
        "monthly_savings",
        "comment",
        "active"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "id_type": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "target": {
          "type": "number",
          "format": "float"
        },
        "saved": {
          "default": 0,
          "type": "number",
          "format": "float"
        },
        "monthly_savings": {
          "type": "number",
          "format": "float"
        },
        "comment": {
          "default": "",
          "type": "string"
        },
        "active": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_type": 0,
        "name": "",
        "target": 0,
        "saved": 0,
        "monthly_savings": 0,
        "comment": "",
        "active": true
      }
    },
    "Device": {
      "required": [
        "id",
        "id_token",
        "type",
        "notification_token",
        "last_update",
        "version",
        "debug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_token": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "notification_token": {
          "type": "string"
        },
        "last_update": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "debug": {
          "default": false,
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "id_token": 0,
        "type": "",
        "notification_token": "",
        "last_update": "CURRENT_TIMESTAMP",
        "version": "",
        "debug": false
      }
    },
    "Pocket": {
      "required": [
        "id",
        "id_account",
        "id_investment",
        "value",
        "condition"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the pocket"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "id_investment": {
          "type": "integer",
          "description": "ID of the related investment"
        },
        "label": {
          "type": "string",
          "description": "Label of the pocket"
        },
        "value": {
          "type": "number",
          "description": "Value of the pocket",
          "format": "float"
        },
        "quantity": {
          "default": 0,
          "type": "number",
          "description": "Quantity of stocks",
          "format": "float"
        },
        "availability_date": {
          "type": "string",
          "description": "Availability date of the pocket",
          "format": "date"
        },
        "condition": {
          "default": "inconnu",
          "type": "string",
          "description": "Withdrawal condition of the pocket"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the pocket",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "If set, this pocket has been removed from the website",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_investment": 0,
        "label": "",
        "value": 0,
        "quantity": 0,
        "availability_date": "2019-12-27",
        "condition": "inconnu",
        "last_update": "2019-12-27 16:17:55.268919",
        "deleted": "2019-12-27 16:17:55.268982"
      }
    },
    "Alert": {
      "required": [
        "id",
        "id_user",
        "timestamp",
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Date of the alerts emission",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "Type of the alert"
        },
        "id_transaction": {
          "type": "integer",
          "description": "ID of the related transaction"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "value": {
          "type": "number",
          "description": "Amount related to the alert",
          "format": "float"
        },
        "id_investment": {
          "type": "integer",
          "description": "ID of the related investment"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "type": "",
        "id_transaction": 0,
        "id_account": 0,
        "value": 0,
        "id_investment": 0
      }
    },
    "Group": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_parent_group": {
          "type": "integer"
        },
        "id_logo": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "conf": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_parent_group": 0,
        "id_logo": 0,
        "name": "",
        "url": "",
        "color": "",
        "email": "",
        "conf": ""
      }
    },
    "TransferLog": {
      "required": [
        "id",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the transfer log entry"
        },
        "id_transfer": {
          "type": "integer",
          "description": "ID of the related transfer"
        },
        "id_file": {
          "type": "integer",
          "description": "ID of the related file"
        },
        "request_data": {
          "type": "string",
          "description": "Data stored related to user who has requested the transfer"
        },
        "state": {
          "type": "string",
          "description": "State of the transfer (created, scheduled, validating, pending, done, canceled, error, bug)"
        },
        "error": {
          "type": "string",
          "description": "Error message during transfer, if any"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of the log",
          "format": "date-time"
        },
        "fields": {
          "type": "string",
          "description": "Fields for transfer in additionalInformationNeeded state with background option"
        }
      },
      "example": {
        "id": 0,
        "id_transfer": 0,
        "id_file": 0,
        "request_data": "",
        "state": "",
        "error": "",
        "timestamp": "CURRENT_TIMESTAMP"
      }
    },
    "TransactionInformation": {
      "required": [
        "id",
        "id_transaction",
        "key"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of this transaction information"
        },
        "id_transaction": {
          "type": "integer",
          "description": "ID of the related transaction"
        },
        "key": {
          "type": "string",
          "description": "Key of the transaction information"
        },
        "value": {
          "type": "string",
          "description": "Value of the transaction information"
        }
      },
      "example": {
        "id": 0,
        "id_transaction": 0,
        "key": "",
        "value": ""
      }
    },
    "InvestmentValue": {
      "required": [
        "id",
        "id_investment",
        "vdate",
        "unitvalue"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the value"
        },
        "id_investment": {
          "type": "integer",
          "description": "ID of the related investment"
        },
        "vdate": {
          "type": "string",
          "description": "Date of this value",
          "format": "date"
        },
        "unitvalue": {
          "type": "number",
          "description": "Value on this date",
          "format": "float"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "original_unitvalue": {
          "type": "number",
          "description": "Value on this date, in the original currency",
          "format": "float"
        }
      },
      "example": {
        "id": 0,
        "id_investment": 0,
        "vdate": "2019-12-27",
        "unitvalue": 0,
        "original_currency": "",
        "original_unitvalue": 0
      }
    },
    "RecipientLog": {
      "required": [
        "id",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the transfer log entry"
        },
        "id_recipient": {
          "type": "integer",
          "description": "ID of the related recipient"
        },
        "id_file": {
          "type": "integer",
          "description": "ID of the related file"
        },
        "request_data": {
          "type": "string",
          "description": "Data stored related to user who has requested the recipient addition"
        },
        "step": {
          "type": "string",
          "description": "Step of recipient addition, (add_recipient, asking_field, recipient addition validated, creation, storing_files)"
        },
        "error": {
          "type": "string",
          "description": "Error message during recipient addition, if any"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of the log",
          "format": "date-time"
        },
        "fields": {
          "type": "string",
          "description": "Fields for recipient in additionalInformationNeeded state with background option"
        }
      },
      "example": {
        "id": 0,
        "id_recipient": 0,
        "id_file": 0,
        "request_data": "",
        "step": "",
        "error": "",
        "timestamp": "CURRENT_TIMESTAMP"
      }
    },
    "SubscriptionLog": {
      "required": [
        "id",
        "id_subscription",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the log"
        },
        "id_subscription": {
          "type": "integer",
          "description": "ID of the related subscription"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of log",
          "format": "date-time"
        },
        "nb_docs": {
          "type": "integer",
          "description": "Number of docs on the subscription"
        },
        "id_connection_log": {
          "type": "integer",
          "description": "ID of the related connection log"
        },
        "error": {
          "type": "string",
          "description": "If fail, contains the error code"
        },
        "error_message": {
          "type": "string",
          "description": "If fail, error message received from provider"
        },
        "id_source": {
          "type": "integer",
          "description": "ID of the related connection source"
        }
      },
      "example": {
        "id": 0,
        "id_subscription": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "nb_docs": 0,
        "id_connection_log": 0,
        "error": "",
        "error_message": "",
        "id_source": 0
      }
    },
    "ConnectionSource": {
      "required": [
        "id",
        "id_connection",
        "id_connector_source",
        "name",
        "created"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of connection"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the related connection"
        },
        "id_connector_source": {
          "type": "integer",
          "description": "ID of the related connector source"
        },
        "name": {
          "type": "string",
          "description": "Name of the connection source"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update",
          "format": "date-time"
        },
        "disabled": {
          "type": "string",
          "description": "This source is not used to synchronize the connection",
          "format": "date-time"
        },
        "created": {
          "default": "<function <lambda> at 0x7f8894cfe7d0>",
          "type": "string",
          "description": "Creation date of the connection source",
          "format": "date-time"
        },
        "state": {
          "type": "string",
          "description": "If the last update has failed, the state code"
        },
        "access_expire": {
          "type": "string",
          "description": "Expiration date of the access",
          "format": "date-time"
        },
        "expire": {
          "type": "string",
          "description": "Expiration of the connection source. Used to purge the connection in case completion was not finished",
          "format": "date-time"
        },
        "next_try": {
          "type": "string",
          "description": "Date of next synchronization",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_connection": 0,
        "id_connector_source": 0,
        "name": "",
        "last_update": "2019-12-27 16:17:55.317583",
        "disabled": "2019-12-27 16:17:55.317658",
        "created": "<function <lambda> at 0x7f8894cfe7d0>",
        "state": "",
        "access_expire": "2019-12-27 16:17:55.317849",
        "expire": "2019-12-27 16:17:55.317911",
        "next_try": "2019-12-27 16:17:55.318118"
      }
    },
    "AccountLog": {
      "required": [
        "id",
        "id_account",
        "balance",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the log"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "id_connector": {
          "type": "integer",
          "description": "provider id"
        },
        "balance": {
          "type": "number",
          "description": "Balanced recorded",
          "format": "float"
        },
        "coming": {
          "default": 0,
          "type": "number",
          "description": "Coming debit recorded",
          "format": "float"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of log",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If fail, contains the error code"
        },
        "error_message": {
          "type": "string",
          "description": "If fail, error message received from bank or provider"
        },
        "id_connection_log": {
          "type": "integer",
          "description": "ID of the related connection log"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_connector": 0,
        "balance": 0,
        "coming": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "error": "",
        "error_message": "",
        "id_connection_log": 0
      }
    },
    "Currency": {
      "required": [
        "id",
        "symbol",
        "prefix"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ISO 4217 code used as ID"
        },
        "symbol": {
          "type": "string",
          "description": "Symbol representing the currency"
        },
        "prefix": {
          "default": false,
          "type": "boolean",
          "description": "Amount is prefixed or not by the currency"
        },
        "crypto": {
          "default": false,
          "type": "boolean",
          "description": "It is a crypto currency or not"
        },
        "precision": {
          "default": 2,
          "type": "integer",
          "description": "Numbers of significant digits"
        },
        "marketcap": {
          "type": "number",
          "description": "Market Capitalization in EUR",
          "format": "float"
        },
        "datetime": {
          "type": "string",
          "description": "Time and date of Market Cap (for cryptos)",
          "format": "date-time"
        }
      },
      "example": {
        "id": "",
        "symbol": "",
        "prefix": false,
        "crypto": false,
        "precision": 2,
        "marketcap": 0,
        "datetime": "2019-12-27 16:17:55.397255"
      }
    },
    "ConnectorCategory": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the bank category"
        },
        "name": {
          "default": false,
          "type": "string",
          "description": "Name of the category"
        }
      },
      "example": {
        "id": 0,
        "name": false
      }
    },
    "LockedUser": {
      "required": [
        "id_user",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id_user": {
          "type": "integer"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "worker": {
          "type": "string"
        }
      },
      "example": {
        "id_user": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "worker": ""
      }
    },
    "ConfigLog": {
      "required": [
        "id",
        "key",
        "type",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "previous_value": {
          "type": "string"
        },
        "new_value": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Action done on the config: add, update or delete"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of when the configuration key was changed",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "previous_value": "",
        "new_value": "",
        "type": "",
        "timestamp": "CURRENT_TIMESTAMP"
      }
    },
    "OidcWhitelist": {
      "required": [
        "id",
        "redirect_uri"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "redirect_uri": {
          "type": "string",
          "description": "authorized redirect uri"
        }
      },
      "example": {
        "id": 0,
        "redirect_uri": ""
      }
    }
  },
  "basePath": "/2.0/",
  "swagger": "2.0",
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "tags": [
    {
      "name": "Administration"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "Banks"
    },
    {
      "name": "Connections"
    },
    {
      "name": "Documents"
    },
    {
      "name": "OCR"
    },
    {
      "name": "OIDC"
    },
    {
      "name": "PFM"
    },
    {
      "name": "Providers"
    },
    {
      "name": "Recipients"
    },
    {
      "name": "Service"
    },
    {
      "name": "Terms"
    },
    {
      "name": "Transfer"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "Users management"
    },
    {
      "name": "Wealth"
    }
  ],
  "x-servers": [
    {
      "url": "https://cashbee-local-sandbox.biapi.pro/2.0",
      "description": "cashbee-local-sandbox.biapi.pro"
    },
    {
      "url": "https://cashbee-mordor-sandbox.biapi.pro/2.0",
      "description": "cashbee-mordor-sandbox.biapi.pro"
    }
  ]
}
