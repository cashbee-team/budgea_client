{
  "info": {
    "version": "2.0",
    "description": "",
    "title": "Budgea API Documentation"
  },
  "paths": {
    "/account_types": {
      "get": {
        "responses": {
          "200": {
            "description": "accounttypes",
            "schema": {
              "required": [
                "accounttypes"
              ],
              "type": "object",
              "properties": {
                "accounttypes": {
                  "items": {
                    "$ref": "#/definitions/AccountType"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account types"
      }
    },
    "/account_types/{id_account_type}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on AccountType resource",
            "schema": {
              "$ref": "#/definitions/AccountType"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account_type",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get an account type"
      }
    },
    "/auth/confirm": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "user"
              ],
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "description": "confirmed token"
                },
                "user": {
                  "type": "object",
                  "description": "user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "token",
            "description": "token received in email"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application in use"
          }
        ],
        "summary": "Confirm email address",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/auth/confirmNewEmail": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "token",
            "description": "token received by email"
          }
        ],
        "summary": "Confirm new email address",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/auth/cookie": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "username",
            "description": "username"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token"
          }
        ],
        "summary": "Login with credentials and set as cookie",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/auth/init": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "auth_token",
                "type"
              ],
              "type": "object",
              "properties": {
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "auth_token": {
                  "type": "string",
                  "description": "new token created for the new anonymous user"
                },
                "type": {
                  "type": "string",
                  "description": "type of the token"
                }
              }
            },
            "description": "",
            "examples": {
              "expires_in": 1800,
              "auth_token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "type": "temporary"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint creates a new temporary token related to a new anonymous user.<br><br>It will expire 30 minutes after.<br><br>Note: if you supply client_id and client_secret, or if you call this endpoint with the manage_token, the token will be permanent.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "description": "ID of the client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "client_secret",
            "description": "secret of the client"
          }
        ],
        "summary": "Create a new anonymous user",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "user",
                "profile"
              ],
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object",
                  "description": "the user profile data object"
                },
                "token": {
                  "type": "string",
                  "description": "the requested token"
                },
                "user": {
                  "type": "object",
                  "description": "the user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "profile": {},
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Create a new user with his email address and password.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "email address"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "sponsor",
            "description": "sponsor code to get advantages"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "APNS or GCM token to send notifications to device"
          }
        ],
        "summary": "Register to API",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/auth/token": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token",
                "scope",
                "user",
                "profile"
              ],
              "type": "object",
              "properties": {
                "profile": {
                  "type": "object",
                  "description": "the user profile data object"
                },
                "scope": {
                  "type": "string",
                  "description": "the token scope"
                },
                "token": {
                  "type": "string",
                  "description": "the requested token"
                },
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "user": {
                  "type": "object",
                  "description": "the user data object"
                }
              }
            },
            "description": "",
            "examples": {
              "profile": {},
              "scope": "",
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "user": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Request a new user token by giving an username and a password.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "username",
            "description": "username"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "password"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "scope",
            "description": "scope requested for the token"
          }
        ],
        "summary": "Login to API with credentials",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Authentication",
          "PFM"
        ],
        "description": "This endpoint removes the token in use.<br><br>",
        "parameters": [],
        "summary": "Remove user access"
      }
    },
    "/auth/token/access": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "access_token",
                "token_type"
              ],
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "description": "the access token transformed from the temporary one"
                },
                "token_type": {
                  "type": "string",
                  "description": "the access token type"
                }
              }
            },
            "description": "",
            "examples": {
              "access_token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "token_type": "Bearer"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "In order to register a new user with the OAuth 2 process, the client has to call this endpoint to request a granted access_token with the received temporary code.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "grant_type",
            "description": "default is \"authorization_code\""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "client_id",
            "description": "ID of the client"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "client_secret",
            "description": "secret of the client"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "code",
            "description": "user's temporary code"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "redirect uri used by user"
          }
        ],
        "summary": "Transform a temporary code to a access_token",
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/auth/token/code": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "code",
                "type",
                "expires_in"
              ],
              "type": "object",
              "properties": {
                "expires_in": {
                  "type": "integer",
                  "description": "duration in seconds of the token validity"
                },
                "code": {
                  "type": "string",
                  "description": "the temporary token"
                },
                "type": {
                  "type": "object",
                  "description": "the token type"
                }
              }
            },
            "description": "",
            "examples": {
              "expires_in": 1800,
              "code": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n",
              "type": "temporary"
            }
          }
        },
        "tags": [
          "Authentication"
        ],
        "description": "This endpoint generates a new temporary token for the user.<br><br>In case the access_token is used by a trusted device, and you want to let another one (for example a web browser) access to user resources, use this service to create a token which will expire in 30 minutes.<br><br>",
        "parameters": [],
        "summary": "Generate a user temporary token"
      }
    },
    "/banks": {
      "get": {
        "responses": {
          "200": {
            "description": "banks",
            "schema": {
              "required": [
                "banks"
              ],
              "type": "object",
              "properties": {
                "banks": {
                  "items": {
                    "$ref": "#/definitions/Bank"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      }
    },
    "/banks/categories": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on BankCategory resource",
            "schema": {
              "$ref": "#/definitions/BankCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It requires the name of the category to be created<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of the category to be created"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create bank categories"
      }
    },
    "/banks/categories/{id_category}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on BankCategory resource",
            "schema": {
              "$ref": "#/definitions/BankCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Edit the name for the supplied category.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_category",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "new name for the supplied category"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a bank categories"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on BankCategory resource",
            "schema": {
              "$ref": "#/definitions/BankCategory"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_category",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the supplied category"
      }
    },
    "/banks/{id_bank}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Connections"
        ],
        "description": "By default, it selects a set of 3 connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "range",
            "description": "the length of the connection subset"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "type",
            "description": "to target a specific account type which will be"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a subset of id_connection with the largest diversity of account"
      }
    },
    "/banks/{id_bank}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/banks/{id_bank}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/banks/{id_bank}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "categories",
            "schema": {
              "required": [
                "categories"
              ],
              "type": "object",
              "properties": {
                "categories": {
                  "items": {
                    "$ref": "#/definitions/Category"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get all existing categories<br><br>",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all categories"
      }
    },
    "/categorize": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "failed",
                "total",
                "transactions"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "failed": 1,
              "total": 2,
              "transactions": [
                {
                  "id_category": 84,
                  "state": "categorized_by_keyword",
                  "type": "card",
                  "value": -14,
                  "wording": "the great restaurant  "
                },
                {
                  "id_category": 9998,
                  "state": "fail_categorizing",
                  "type": "card",
                  "value": -14,
                  "wording": "toto"
                }
              ]
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It requires an array of transaction dictionaries. Any fields of transactions that are not required will be kept in the response. The response contains the list of transactions with two more fields: id_category and state (it indicates how the transaction has been categorized)<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          }
        ],
        "summary": "categorize transactions without storing them"
      }
    },
    "/clients": {
      "get": {
        "responses": {
          "200": {
            "description": "clients",
            "schema": {
              "required": [
                "clients"
              ],
              "type": "object",
              "properties": {
                "clients": {
                  "items": {
                    "$ref": "#/definitions/Client"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List clients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a client"
      }
    },
    "/clients/{id_client}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "If you use the manage_token, you will get also the client_secret.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get information about a client"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of client"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "secret",
            "description": "reset the secret"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "redirect_uri"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "primary_color",
            "description": "hexadecimal code of the client primary color (e.g F45B9A)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "secondary_color",
            "description": "hexadecimal code of the client secondary color (e.g F45B9A)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description",
            "description": "text to display as a default description"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description_banks",
            "description": "text to display as a description for banks"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "description_providers",
            "description": "text to display as a description for providers"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "pro",
            "description": "Wether the client should display the company manager page"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a client"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Client resource",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a client"
      }
    },
    "/clients/{id_client}/logo": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update the client logo"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on File resource",
            "schema": {
              "$ref": "#/definitions/File"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_client",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the client logo"
      }
    },
    "/config": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "limit the results to keys matching the given value"
          }
        ],
        "summary": "Get configuration of the API."
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "bank.connection.disable_new"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "bank.connection.disable_new": "0"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Request: { \"bank.connection.disable_new\": \"0\", \"search\": \"bank.connection.disable_new\" }<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "limit the results to keys matching the given value"
          }
        ],
        "summary": "Set a configuration value on the API."
      }
    },
    "/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connections without a user"
      }
    },
    "/connectors": {
      "get": {
        "responses": {
          "200": {
            "description": "connectors",
            "schema": {
              "required": [
                "connectors"
              ],
              "type": "object",
              "properties": {
                "connectors": {
                  "items": {
                    "$ref": "#/definitions/Bank"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            },
            "description": "Successful POST on Bank resource",
            "examples": {}
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Send a request to add a new connector<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "api",
            "description": "Name of the API"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the bank or provider"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "url",
            "description": "Url of the bank"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "Email of the user"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "Users login"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "Users password"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "types",
            "description": "Type of connector, eg. banks or providers"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "Optionnal comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "sendmail",
            "description": "if set, send an email to user"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Request a new connector",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/connectors/{id_bank}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates a bank logo. You can either pass a file to as a parameter to insert and link it with the bank or pass an id_file to link a bank with an existing file. Will fail if the file is already linked with that bank.<br><br>Form params: - id_file (integer): The id of the file to link with that bank. - img (string): Path to the image to link with that bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a Bank Logo"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates or update a bank logo. This logo is a mapping between a file (/file route) and a bank (/banks route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create or Update a Bank Logo"
      }
    },
    "/connectors/{id_bank}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/connectors/{id_bank}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/connectors/{id_bank}/logos/{id_logo}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint creates or update a bank logo. This logo is a mapping between a file (/file route) and a bank (/banks route) or a provider (/providers route).<br><br>Form params: - id_file (integer): The id of the file to link with that bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_logo",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create or Update a Bank Logo."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on ConnectorLogo resource",
            "schema": {
              "$ref": "#/definitions/ConnectorLogo"
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_logo",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a single Logo object."
      }
    },
    "/connectors/{id_connector}": {
      "put": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Bank"
            },
            "description": "Successful PUT on Bank resource",
            "examples": {
              "sync_frequency": null,
              "code": "40618",
              "name": "Boursorama",
              "color": "f10389",
              "capabilities": [
                "profile",
                "banktransferaddrecipient",
                "contact",
                "bank",
                "banktransfer"
              ],
              "id": 4,
              "beta": true,
              "hidden": false,
              "slug": "BOU",
              "categories": [
                "virtual"
              ],
              "charged": true
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connector",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_categories",
            "description": "one or several comma separated categories to map to the given bank (or null to map no category)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "hidden",
            "description": "to enable  or disable connector (bank or provider)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "sync_frequency",
            "description": "Allows you to overload global sync_frequency param"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit the provided bank"
      }
    },
    "/documenttypes": {
      "get": {
        "responses": {
          "200": {
            "description": "documenttypes",
            "schema": {
              "required": [
                "documenttypes"
              ],
              "type": "object",
              "properties": {
                "documenttypes": {
                  "items": {
                    "$ref": "#/definitions/DocumentType"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get document types"
      }
    },
    "/documenttypes/{id_documenttype}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on DocumentType resource",
            "schema": {
              "$ref": "#/definitions/DocumentType"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Change value of a document type.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_documenttype",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Displayed name of document type"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "attacheable",
            "description": "If true, documents of this type can be attached to a transaction, and have amount related meta-data"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a document type"
      }
    },
    "/finance/securities": {
      "get": {
        "responses": {
          "200": {
            "description": "securities",
            "schema": {
              "required": [
                "securities"
              ],
              "type": "object",
              "properties": {
                "securities": {
                  "items": {
                    "$ref": "#/definitions/Security"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get securities"
      }
    },
    "/finance/securities/{id_security}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_security",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/hash": {
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management",
          "PFM",
          "Authentication"
        ],
        "description": "deletes all connections of the user given his hash<br><br>",
        "parameters": [],
        "summary": "Delete the user's connections"
      }
    },
    "/invoicing": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get number of accounts, connections and users synced between two dates for the given period.<br><br>",
        "parameters": [
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "all",
            "description": "get full ids list instead of numbers"
          }
        ],
        "summary": "Get number of accounts, connections and users synced."
      }
    },
    "/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_bank",
            "description": "ID of a bank"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged banks"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/monitoring": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "period",
            "description": "number on days on which stats on synchronization have to be done per worker (Default: 1)"
          }
        ],
        "summary": "get performances stats on this instance"
      }
    },
    "/ocr": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_transaction",
            "description": "Transaction used to help OCR to find data"
          },
          {
            "required": true,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          }
        ],
        "tags": [
          "OCR",
          "Providers",
          "Documents"
        ],
        "summary": "Post an image with OCR",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Post an image and apply OCR on it to obtain found meta-data.<br><br>"
      }
    },
    "/oidc/whitelist": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "It requires the authorized redirect uri to be created<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "authorized redirect uri to be created"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Adds an authorized redirect uri"
      }
    },
    "/oidc/whitelist/{id_whitelist}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "Edit the uri for the supplied authorized redirect uri.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_whitelist",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "redirect_uri",
            "description": "new authorized redirect uri"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a authorized redirect uri"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on OidcWhitelist resource",
            "schema": {
              "$ref": "#/definitions/OidcWhitelist"
            }
          }
        },
        "tags": [
          "OIDC"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_whitelist",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the supplied authorized redirect uri"
      }
    },
    "/providers": {
      "get": {
        "responses": {
          "200": {
            "description": "banks",
            "schema": {
              "required": [
                "banks"
              ],
              "type": "object",
              "properties": {
                "banks": {
                  "items": {
                    "$ref": "#/definitions/Bank"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get list of connectors"
      }
    },
    "/providers/{id_bank}/logos": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/providers/{id_bank}/logos/main": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/providers/{id_bank}/logos/thumbnail": {
      "get": {
        "responses": {
          "200": {
            "description": "connectorlogos",
            "schema": {
              "required": [
                "connectorlogos"
              ],
              "type": "object",
              "properties": {
                "connectorlogos": {
                  "items": {
                    "$ref": "#/definitions/ConnectorLogo"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks",
          "Providers"
        ],
        "description": "This endpoint returns all links to files associated with this bank.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_bank",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get all links to the files associated with this bank."
      }
    },
    "/terms": {
      "get": {
        "responses": {
          "200": {
            "description": "termsofservices",
            "schema": {
              "required": [
                "termsofservices"
              ],
              "type": "object",
              "properties": {
                "termsofservices": {
                  "items": {
                    "$ref": "#/definitions/TermsOfService"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Return the current terms and the content of the associated file"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TermsOfService resource",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "version",
            "description": "Number of version"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "file_content",
            "description": "file containing the terms, optional"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Register a version of 'Terms of Service' in database"
      }
    },
    "/test/sync": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "It can be used to test receiving data on your webhooks.<br><br>",
        "parameters": [],
        "summary": "Test synchronization on a random connection."
      }
    },
    "/test/webhooks": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "It can be used to test receiving data on your webhooks.<br><br>",
        "parameters": [],
        "summary": "Test synchronization on a random connection."
      }
    },
    "/users": {
      "get": {
        "responses": {
          "200": {
            "description": "users",
            "schema": {
              "required": [
                "users"
              ],
              "type": "object",
              "properties": {
                "users": {
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "searches a user by mail (if it contains no '@', '@biapi.pro' will be added at the end)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get users"
      }
    },
    "/users/{id_user}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on User resource",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM",
          "Authentication"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a user"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on User resource",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "tags": [
          "Authentication",
          "Users management"
        ],
        "description": "This endpoint deletes the user.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete the user"
      }
    },
    "/users/{id_user}/account_types": {
      "get": {
        "responses": {
          "200": {
            "description": "accounttypes",
            "schema": {
              "required": [
                "accounttypes"
              ],
              "type": "object",
              "properties": {
                "accounttypes": {
                  "items": {
                    "$ref": "#/definitions/AccountType"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get account types"
      }
    },
    "/users/{id_user}/account_types/{id_account_type}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on AccountType resource",
            "schema": {
              "$ref": "#/definitions/AccountType"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account_type",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get an account type"
      }
    },
    "/users/{id_user}/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "accounts",
            "schema": {
              "required": [
                "accounts"
              ],
              "type": "object",
              "properties": {
                "accounts": {
                  "items": {
                    "$ref": "#/definitions/Account"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts list."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "This endpoint creates an account not related to a connection.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "balance of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "number",
            "description": "number of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_currency",
            "description": "the currency of the account (default: 'EUR')"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an account"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It updates a specific account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "display",
            "description": "If the account is displayed"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Balance of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the account is disabled (not synchronized)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "bookmarked",
            "description": "If the account is bookmarked"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update an account"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It deletes a specific account. If this is the last synced account of a connection, it will be removed too.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an account."
      }
    },
    "/users/{id_user}/accounts/{id_account}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/accounts/{id_account}/delta": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get account delta between sums of transactions and difference of account balance for the given period.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get deltas of accounts"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/accounts/{id_account}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/accounts/{id_account}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "accountlogs",
            "schema": {
              "required": [
                "accountlogs"
              ],
              "type": "object",
              "properties": {
                "accountlogs": {
                  "items": {
                    "$ref": "#/definitions/AccountLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get logs of account.<br><br>By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts logs."
      }
    },
    "/users/{id_user}/accounts/{id_account}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user"
      }
    },
    "/users/{id_user}/accounts/{id_account}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investemens"
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investemens"
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/accounts/{id_account}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/accounts/{id_account}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/accountsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "example"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "example": {
                "balance_min2": 0,
                "balance_min1": 500,
                "expense_max": 500,
                "enabled": true,
                "accounts": null,
                "income_max": 500
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get alert configuration of a specific account"
      },
      "put": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "example"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "example": {
                "balance_min2": 0,
                "balance_min1": 500,
                "expense_max": 500,
                "enabled": true,
                "accounts": null,
                "income_max": 500
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "It updates the alert configuration of a specific account<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "threshold from which an alert has to be sent for a high expense"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "accounts",
            "description": "list of accounts (id coma separated) on wich the alert has to be applied. If 'all' is given, it is applied on all accounts. default: all"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "threshold from which an alert has to be sent for a high income"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "balance_min2",
            "description": "second threshold from which an alert has to be sent for a low balance"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "enabled",
            "description": "if false, the alert is not taken into account"
          }
        ],
        "summary": "Update alert configuration of an account"
      }
    },
    "/users/{id_user}/alerts": {
      "get": {
        "responses": {
          "200": {
            "description": "alerts",
            "schema": {
              "required": [
                "alerts"
              ],
              "type": "object",
              "properties": {
                "alerts": {
                  "items": {
                    "$ref": "#/definitions/Alert"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get alerts"
      }
    },
    "/users/{id_user}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/categories/full": {
      "get": {
        "responses": {
          "200": {
            "description": "categorys",
            "schema": {
              "required": [
                "categorys"
              ],
              "type": "object",
              "properties": {
                "categorys": {
                  "items": {
                    "$ref": "#/definitions/Category"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/config": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "biapi.last_push"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "biapi.last_push": "2016-12-18T12:31:15"
            }
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get configuration of a user."
      },
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Change configuration of a user. modifications on keys prefixed by 'biapi.' (except callback_url) are ignored"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Users management"
        ],
        "description": "- keys (string): list of coma separated keys to be deleted.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Delete the given user configurations. deletions on keys prefixed by 'biapi.' (except callback_url) are ignored"
      }
    },
    "/users/{id_user}/connections": {
      "get": {
        "responses": {
          "200": {
            "description": "connections",
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connections"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Create a new connection to a given bank or provider. You have to give all needed parameters (use /banks/ID/fields or /providers/ID/fields to get them).<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_bank",
            "description": "ID of the bank"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "birthday",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "oauth_token",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "oauth_token_secret",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "auth_type",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "secret",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "birthdate",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "nuser",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "website",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "bank additional login parameter"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_provider",
            "description": "ID of the provider"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a new connection.",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all connections"
      }
    },
    "/users/{id_user}/connections/{id_connection}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Give new parameters to change on the configuration of this connection (for example \"password\").<br><br>It tests connection to website, and if it fails, a 400 response is given with the error code \"wrongpass\" or \"websiteUnavailable\".<br><br>You can also supply meta-parameters on connection, like 'active' or 'expire'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "Set if the connection synchronisation is active"
          },
          {
            "name": "expire",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Set expiration of the connection to this date"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "login",
            "description": "Set login to this new login"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "Set password to this new password"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a connection.",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "We suggest to pass parameter expand=accounts[transactions] to get all *new* and *updated* transactions.<br><br>Query params: - expand (string): fields to expand - last_update (dateTime): if supplied, get transactions inserted since this date<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Force synchronisation of a connection."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Connection resource",
            "schema": {
              "$ref": "#/definitions/Connection"
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "This endpoint deletes a connection and all related accounts and transactions.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a connection."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts": {
      "get": {
        "responses": {
          "200": {
            "description": "accounts",
            "schema": {
              "required": [
                "accounts"
              ],
              "type": "object",
              "properties": {
                "accounts": {
                  "items": {
                    "$ref": "#/definitions/Account"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts list."
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "This endpoint creates an account not related to a connection.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "name of account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "balance of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "number",
            "description": "number of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "id_currency",
            "description": "the currency of the account (default: 'EUR')"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an account",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It updates a specific account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "display",
            "description": "If the account is displayed"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the account"
          },
          {
            "name": "balance",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Balance of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the account is disabled (not synchronized)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "IBAN of the account"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "bookmarked",
            "description": "If the account is bookmarked"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update an account"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Account resource",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "It deletes a specific account. If this is the last synced account of a connection, it will be removed too.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an account."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Ressource to get categories for the user's transactions<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          }
        ],
        "summary": "Get the category"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/delta": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get account delta between sums of transactions and difference of account balance for the given period.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get deltas of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "accountlogs",
            "schema": {
              "required": [
                "accountlogs"
              ],
              "type": "object",
              "properties": {
                "accountlogs": {
                  "items": {
                    "$ref": "#/definitions/AccountLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get logs of account.<br><br>By default, it selects logs for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get accounts logs."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investments",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investments"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/accounts/{id_account}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_account",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/balances": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "Get balance (income/outcome/balance) of enabled accounts for the given period.<br><br>By default, min_date and max_date are the current month, and period is a single month.<br><br>The period is composed with units (days, months, years) and numbers. You can give for example \"1month\", \"15days\", \"1year6months\", etc.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximal (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "split output with the given period (default: month)"
          }
        ],
        "summary": "Get balances of accounts"
      }
    },
    "/users/{id_user}/connections/{id_connection}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/informations": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "connections"
              ],
              "type": "object",
              "properties": {
                "connections": {
                  "items": {
                    "$ref": "#/definitions/Connection"
                  },
                  "type": "array"
                }
              }
            },
            "description": "connections",
            "examples": {
              "owner": {
                "...": "...",
                "name": "Monsieur Honoré Émile"
              },
              "compagny": {
                "...": "...",
                "name": "Roundcore"
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection additionnal informations"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/connections/{id_connection}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_bank",
            "description": "ID of a bank"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged banks"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It updates a specific subscription<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the subscription"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the subscription is disabled (not synchronized)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a subscription"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It deletes a specific subscription If this is the last synced subscription of a connection, it will be removed too.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a subscription."
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/subscriptions/{id_subscription}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/connections/{id_connection}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/connections/{id_connection}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_connection",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/devices": {
      "get": {
        "responses": {
          "200": {
            "description": "devices",
            "schema": {
              "required": [
                "devices"
              ],
              "type": "object",
              "properties": {
                "devices": {
                  "items": {
                    "$ref": "#/definitions/Device"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get devices"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "the GCM or APNS notification_token to use"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "the device in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "notification_version",
            "description": "version of notifications"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a device linked to specified token."
      }
    },
    "/users/{id_user}/devices/{id_device}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a device"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "notification_token",
            "description": "the GCM or APNS notification_token to use"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "the device in use"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "notification_version",
            "description": "version of notifications"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update attributes of the device."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Device resource",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_device",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete device."
      }
    },
    "/users/{id_user}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/forecast": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Banks",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get forecast"
      }
    },
    "/users/{id_user}/investments": {
      "get": {
        "responses": {
          "200": {
            "description": "investments",
            "schema": {
              "required": [
                "investments"
              ],
              "type": "object",
              "properties": {
                "investments": {
                  "items": {
                    "$ref": "#/definitions/Investment"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investments"
      }
    },
    "/users/{id_user}/investments/{id_investment}/history": {
      "get": {
        "responses": {
          "200": {
            "description": "investmentvalues",
            "schema": {
              "required": [
                "investmentvalues"
              ],
              "type": "object",
              "properties": {
                "investmentvalues": {
                  "items": {
                    "$ref": "#/definitions/InvestmentValue"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get investment values"
      }
    },
    "/users/{id_user}/investments/{id_investment}/security/history": {
      "get": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "tags": [
          "Wealth"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_investment",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/logs": {
      "get": {
        "responses": {
          "200": {
            "description": "connectionlogs",
            "schema": {
              "required": [
                "connectionlogs"
              ],
              "type": "object",
              "properties": {
                "connectionlogs": {
                  "items": {
                    "$ref": "#/definitions/ConnectionLog"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Connections",
          "Banks",
          "Providers"
        ],
        "description": "Get logs about connections.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum date"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "state",
            "description": "state of user"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_user",
            "description": "ID of a user"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_connection",
            "description": "ID of a connection"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_bank",
            "description": "ID of a bank"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "charged",
            "description": "consider only logs for charged banks"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get connection logs"
      }
    },
    "/users/{id_user}/ocr": {
      "post": {
        "responses": {
          "200": {
            "description": "standard HTTP response"
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_transaction",
            "description": "Transaction used to help OCR to find data"
          },
          {
            "required": true,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          }
        ],
        "tags": [
          "OCR",
          "Providers",
          "Documents"
        ],
        "summary": "Post an image with OCR",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Post an image and apply OCR on it to obtain found meta-data.<br><br>"
      }
    },
    "/users/{id_user}/operationsalert": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "useralerts"
              ],
              "type": "object",
              "properties": {
                "useralerts": {
                  "items": {
                    "$ref": "#/definitions/UserAlert"
                  },
                  "type": "array"
                }
              }
            },
            "description": "useralerts",
            "examples": {
              "examples": {
                "total": 1,
                "alerts": [
                  {
                    "type": "transactions",
                    "enabled": true,
                    "expense_max": 500,
                    "date_range": null,
                    "value_type": "flat",
                    "apply": null,
                    "accounts": null,
                    "income_max": 500,
                    "id": 16
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a list of configurated alerts"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create an alert on transactions or investemens of a given user"
      }
    },
    "/users/{id_user}/operationsalert/{id_operationsalert}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on UserAlert resource",
            "schema": {
              "$ref": "#/definitions/UserAlert"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "parameter to choose the scope of the alert. accepted: transactions, investements"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income_max",
            "description": "capital gain thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "expense_max",
            "description": "capital loss thresholds"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "value_type",
            "description": "whether the threshold is given in absolut value or percent. accepted: percent, flat"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "date_range",
            "description": "(number of days) range on which the analysis has to be done"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit an alert on transactions or investemens"
      },
      "delete": {
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserAlert"
            },
            "description": "Successful DELETE on UserAlert resource",
            "examples": {
              "example": {}
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_operationsalert",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete an alert on transactions or investemens"
      }
    },
    "/users/{id_user}/profiles": {
      "get": {
        "responses": {
          "200": {
            "description": "profiles",
            "schema": {
              "required": [
                "profiles"
              ],
              "type": "object",
              "properties": {
                "profiles": {
                  "items": {
                    "$ref": "#/definitions/Profile"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get profiles"
      }
    },
    "/users/{id_user}/profiles/main": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get the main profile"
      }
    },
    "/users/{id_user}/profiles/me": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get my profile"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "email",
            "description": "change email of profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "password",
            "description": "change password of profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "current_password",
            "description": "needed when changing the password or the email"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "contact",
            "description": "change contact information of a profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "conf",
            "description": "change config of a profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "state",
            "description": "state of the profile"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "lang",
            "description": "change lang of the profile"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Change settings of the profile."
      }
    },
    "/users/{id_user}/profiles/{id_profile}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on Profile resource",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          }
        },
        "tags": [
          "Users management",
          "PFM"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_profile",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a profile"
      }
    },
    "/users/{id_user}/recipients": {
      "get": {
        "responses": {
          "200": {
            "description": "recipients",
            "schema": {
              "required": [
                "recipients"
              ],
              "type": "object",
              "properties": {
                "recipients": {
                  "items": {
                    "$ref": "#/definitions/Recipient"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Returns the list of recipients"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Recipients"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "label of recipient"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "iban",
            "description": "iban of recipient"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add a recipient."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Recipient resource",
            "schema": {
              "$ref": "#/definitions/Recipient"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Continue addition of a recipient."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object."
      }
    },
    "/users/{id_user}/recipients/{id_recipient}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_recipient",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/users/{id_user}/resume": {
      "get": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "examples"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "examples": {
                "resume_enabled": true,
                "promotion_enabled": true,
                "newsletter_enabled": true,
                "resume_frequency": 7,
                "last_resume": "2018-07-10 10:08:39"
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          }
        ],
        "summary": "Get synthesis configuration of a specific user"
      },
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "examples"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "examples": {
                "resume_enabled": true,
                "promotion_enabled": true,
                "newsletter_enabled": true,
                "resume_frequency": 7,
                "last_resume": "2018-07-10 10:08:39"
              }
            }
          }
        },
        "tags": [
          "PFM"
        ],
        "description": "<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "resume_enabled",
            "description": "whether the synthesis is activated or not"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "resume_frequency",
            "description": "frequency of the synthesis given in days"
          }
        ],
        "summary": "Update synthesis configuration"
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It updates a specific subscription<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Label of the subscription"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "disabled",
            "description": "If the subscription is disabled (not synchronized)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Update a subscription",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Subscription resource",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        },
        "tags": [
          "Providers"
        ],
        "description": "It deletes a specific subscription If this is the last synced subscription of a connection, it will be removed too.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a subscription."
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/subscriptions/{id_subscription}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_subscription",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/terms": {
      "get": {
        "responses": {
          "200": {
            "description": "termsofservices",
            "schema": {
              "required": [
                "termsofservices"
              ],
              "type": "object",
              "properties": {
                "termsofservices": {
                  "items": {
                    "$ref": "#/definitions/TermsOfService"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get active terms object for a specific user, only one terms can be active"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TermsOfService resource",
            "schema": {
              "$ref": "#/definitions/TermsOfService"
            }
          }
        },
        "tags": [
          "Terms"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "user id (optionnal)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_terms",
            "description": "terms id"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Register user's consent for a specific terms id",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{id_user}/token": {
      "post": {
        "responses": {
          "200": {
            "schema": {
              "required": [
                "token"
              ],
              "type": "object"
            },
            "description": "",
            "examples": {
              "token": "A37mwXNCblbWX0LrvpRq60sZ6NBft/t5tsHhADie56/TJscwSi8NSjVmUIf6iLqpDwPe6lyFXM3z7E/zKf9eRHUWzx4QryEgmCtwZ0XgQb9SE+HwaenwqwTuv1gHZD+n"
            }
          }
        },
        "tags": [
          "Users management",
          "Authentication"
        ],
        "description": "Create an access_token for this user and get it.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "application",
            "description": "application name"
          }
        ],
        "summary": "Create a token",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{id_user}/transactions": {
      "get": {
        "responses": {
          "200": {
            "description": "transactions",
            "schema": {
              "required": [
                "transactions"
              ],
              "type": "object",
              "properties": {
                "transactions": {
                  "items": {
                    "$ref": "#/definitions/Transaction"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Get list of transactions.<br><br>By default, it selects transactions for the last month. You can use \"min_date\" and \"max_date\" to change boundary dates.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "income",
            "description": "filter on income or expenditures"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "deleted",
            "description": "display only deleted transactions"
          },
          {
            "required": false,
            "in": "query",
            "type": "boolean",
            "name": "all",
            "description": "display all transactions, including deleted ones"
          },
          {
            "name": "last_update",
            "format": "date-time",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "get only transactions updated after the specified datetime"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "wording",
            "description": "filter transactions containing the given string"
          },
          {
            "name": "min_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) value"
          },
          {
            "name": "max_value",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximum (inclusive) value"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "search",
            "description": "search in labels, dates, values and categories"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "value",
            "description": "\"XX|-XX\" or \"±XX\""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Create transactions for the supplied account or the account whose id is given with form parameters. It requires an array of transaction dictionaries.<br><br><br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "formData",
            "type": "string",
            "name": "original_wording",
            "description": "label of the transaction"
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "value",
            "description": "vallue of the transaction"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "type",
            "description": "type of the transaction (default: unknown)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "state",
            "description": "nature of the transaction (default: new)"
          },
          {
            "name": "rdate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "realisation date of the transaction (default: value of date)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "coming",
            "description": "1 if the transaction has already been debited (default: 0)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "1 if the transaction should be taken into account by pfm services (default: 1)"
          },
          {
            "name": "date_scraped",
            "format": "date-time",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_account",
            "description": "account of the transaction. If not supplied, it has to be given in the route"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create transactions",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete transactions"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Transaction resource",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "wording",
            "description": "user rewording of the transaction"
          },
          {
            "name": "application_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "change application date of the transaction"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "ID of the associated category"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "comment",
            "description": "change comment"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "active",
            "description": "if false, transaction isn't considered in analyzisis endpoints (like /balances)"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a transaction meta-data",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/informations": {
      "get": {
        "responses": {
          "200": {
            "description": "transactioninformations",
            "schema": {
              "required": [
                "transactioninformations"
              ],
              "type": "object",
              "properties": {
                "transactioninformations": {
                  "items": {
                    "$ref": "#/definitions/TransactionInformation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "List all arbitrary key-value pairs on a transaction"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Add or edit transaction arbitrary key-value pairs"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete all arbitrary key-value pairs of a transaction"
      }
    },
    "/users/{id_user}/transactions/{id_transaction}/informations/{id_information}": {
      "get": {
        "responses": {
          "200": {
            "description": "Successful GET on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get a particular arbitrary key-value pair on a transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionInformation resource",
            "schema": {
              "$ref": "#/definitions/TransactionInformation"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transaction",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_information",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a particular key-value pair on a transaction."
      }
    },
    "/users/{id_user}/transactionsclusters": {
      "get": {
        "responses": {
          "200": {
            "description": "transactionsclusters",
            "schema": {
              "required": [
                "transactionsclusters"
              ],
              "type": "object",
              "properties": {
                "transactionsclusters": {
                  "items": {
                    "$ref": "#/definitions/TransactionsCluster"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get clustered transactions"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date) required: Date of transaction - mean_amount (decimal) required: Mean Amount - wording (string) required: name of transaction - id_account (id) required: related account<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create clustered transaction"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents": {
      "get": {
        "responses": {
          "200": {
            "description": "documents",
            "schema": {
              "required": [
                "documents"
              ],
              "type": "object",
              "properties": {
                "documents": {
                  "items": {
                    "$ref": "#/definitions/Document"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "Get list of documents<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "limit",
            "description": "limit number of results"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "offset",
            "description": "offset of first result"
          },
          {
            "name": "min_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "minimal (inclusive) date"
          },
          {
            "name": "max_date",
            "format": "date",
            "required": false,
            "in": "query",
            "type": "string",
            "description": "maximum (inclusive) date"
          },
          {
            "name": "min_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) amount"
          },
          {
            "name": "max_amount",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) amount"
          },
          {
            "name": "min_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "minimal (inclusive) timestamp"
          },
          {
            "name": "max_timestamp",
            "format": "float",
            "required": false,
            "in": "query",
            "type": "number",
            "description": "maximumd (inclusive) timestamp"
          },
          {
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "id_type",
            "description": "filter with a document type"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get documents"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": true,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_ocr",
            "description": "Related OCR process"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Add a new document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Add a new document<br><br>"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "formData",
            "type": "integer",
            "name": "id_document",
            "description": "id of the document you want to attach the file to"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Attach an existing document to a transaction or a transactions_cluster",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete documents"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactions_cluster}/documents/{id_document}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_type",
            "description": "Type of this document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_category",
            "description": "Related category"
          },
          {
            "name": "date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Date of document"
          },
          {
            "name": "duedate",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "Due date of document"
          },
          {
            "name": "total_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Taxed amount"
          },
          {
            "name": "untaxed_amount",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "Untaxed amount"
          },
          {
            "name": "vat",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "VAT amount"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "income",
            "description": "Is an income or an outcome"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "readonly",
            "description": "Is this file readonly"
          },
          {
            "required": false,
            "in": "formData",
            "type": "file",
            "name": "file",
            "description": "File of the document"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "name",
            "description": "Name of the document"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "tags": [
          "Providers",
          "Documents"
        ],
        "summary": "Edit a document",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Edit meta-data of a specific document."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Document resource",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        },
        "tags": [
          "Providers",
          "Documents"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactions_cluster",
            "description": ""
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_document",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a document"
      }
    },
    "/users/{id_user}/transactionsclusters/{id_transactionscluster}": {
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "Form params : - next_date (date): Date of transaction - mean_amount (decimal): Mean Amount - wording (string): name of transaction - id_account (id): related account - id_category (id): related category - enabled (bool): is enabled<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Edit a clustered transaction"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on TransactionsCluster resource",
            "schema": {
              "$ref": "#/definitions/TransactionsCluster"
            }
          }
        },
        "tags": [
          "Banks"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transactionscluster",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Delete a clustered transaction"
      }
    },
    "/users/{id_user}/transfers": {
      "get": {
        "responses": {
          "200": {
            "description": "transfers",
            "schema": {
              "required": [
                "transfers"
              ],
              "type": "object",
              "properties": {
                "transfers": {
                  "items": {
                    "$ref": "#/definitions/Transfer"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": false,
            "in": "query",
            "type": "string",
            "name": "period",
            "description": "period to group logs"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get transfers"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "name": "amount",
            "format": "float",
            "required": true,
            "in": "formData",
            "type": "number",
            "description": "amount of transfer"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "label",
            "description": "reason of transfer"
          },
          {
            "name": "exec_date",
            "format": "date",
            "required": false,
            "in": "formData",
            "type": "string",
            "description": "excution date of transfer"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Create a transfer object.",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/users/{id_user}/transfers/{id_transfer}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "boolean",
            "name": "validated",
            "description": "set it to initialize transfer on the bank website."
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Execute or edit a Transfer."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Transfer resource",
            "schema": {
              "$ref": "#/definitions/Transfer"
            }
          }
        },
        "tags": [
          "Transfers"
        ],
        "description": "It is possible to cancel only a transfer in state 'created'.<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "string",
            "name": "id_user",
            "description": "Hint: you can use 'me' or 'all'"
          },
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_transfer",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Cancel a transfer."
      }
    },
    "/webhooks": {
      "get": {
        "responses": {
          "200": {
            "description": "webhooks",
            "schema": {
              "required": [
                "webhooks"
              ],
              "type": "object",
              "properties": {
                "webhooks": {
                  "items": {
                    "$ref": "#/definitions/Webhook"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Get webhooks"
      },
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "params",
            "description": "The webhook parameters as an object with three keys: type, key and value"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Adds a new webhook"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Updates the deleted field with the date of the deletion<br><br>",
        "parameters": [
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes all webhooks"
      }
    },
    "/webhooks/{id_webhook}": {
      "post": {
        "responses": {
          "200": {
            "description": "Successful POST on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "deleted",
            "description": "a date to delete the webhook or 'null' to enable it"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates a webhook"
      },
      "put": {
        "responses": {
          "200": {
            "description": "Successful PUT on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "deleted",
            "description": "a date to delete the webhook or 'null' to enable it"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_user",
            "description": "The user ID to associate with the webhook"
          },
          {
            "required": false,
            "in": "formData",
            "type": "integer",
            "name": "id_service",
            "description": "The service ID to associate with the webhook"
          },
          {
            "name": "url",
            "format": "float",
            "required": false,
            "in": "formData",
            "type": "number",
            "description": "The webhook callback url"
          },
          {
            "required": false,
            "in": "formData",
            "type": "string",
            "name": "event",
            "description": "The webhook event"
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Updates a webhook"
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Successful DELETE on Webhook resource",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        },
        "tags": [
          "Administration"
        ],
        "description": "Updates the deleted field with the date of the deletion<br><br>",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "type": "integer",
            "name": "id_webhook",
            "description": ""
          },
          {
            "required": false,
            "type": "string",
            "name": "expand",
            "in": "query"
          }
        ],
        "summary": "Deletes a webhook"
      }
    }
  },
  "host": "demo.biapi.pro",
  "x-deactivated_services": [],
  "produces": [
    "application/json"
  ],
  "definitions": {
    "Bank": {
      "required": [
        "id",
        "name",
        "id_weboob",
        "charged",
        "beta"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the connector"
        },
        "name": {
          "type": "string",
          "description": "Name of the bank or provider"
        },
        "id_weboob": {
          "type": "string"
        },
        "hidden": {
          "default": false,
          "type": "boolean",
          "description": "This connector is hidden from your users"
        },
        "charged": {
          "default": true,
          "type": "boolean",
          "description": "Usage of this connector is charged"
        },
        "code": {
          "type": "string",
          "description": "Bank code"
        },
        "beta": {
          "default": false,
          "type": "boolean",
          "description": "If true, this connector is perhaps unstable :)"
        },
        "color": {
          "type": "string",
          "description": "Main color of the bank or provider"
        },
        "slug": {
          "type": "string"
        },
        "sync_frequency": {
          "type": "number",
          "description": "How many days to wait between syncs",
          "format": "float"
        },
        "months_to_fetch": {
          "type": "integer",
          "description": "How many months of history to fetch"
        },
        "account_types": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "id_weboob": "",
        "hidden": false,
        "charged": true,
        "code": "",
        "beta": false,
        "color": "",
        "slug": "",
        "sync_frequency": 0,
        "months_to_fetch": 0
      }
    },
    "Field": {
      "required": [
        "id_bank",
        "id",
        "name",
        "label"
      ],
      "type": "object",
      "properties": {
        "id_bank": {
          "type": "integer",
          "description": "ID of the related bank"
        },
        "id": {
          "type": "integer",
          "description": "ID of the field"
        },
        "name": {
          "type": "string",
          "description": "Name of the field"
        },
        "label": {
          "type": "string",
          "description": "Label to display to user"
        },
        "regex": {
          "type": "string",
          "description": "If set, the value must match this regexp"
        },
        "type": {
          "default": "text",
          "type": "string",
          "description": "Type of field (text, password, list, hidden)"
        },
        "ephemeral": {
          "default": false,
          "type": "boolean",
          "description": "This field will not be saved in database"
        },
        "value": {
          "type": "string",
          "description": "Default value of the field"
        },
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldValue"
          }
        }
      },
      "example": {
        "id_bank": 0,
        "id": 0,
        "name": "",
        "label": "",
        "regex": "",
        "type": "text",
        "ephemeral": false,
        "value": ""
      }
    },
    "FieldValue": {
      "required": [
        "value",
        "label"
      ],
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "ConnectorLogo": {
      "required": [
        "id",
        "id_bank",
        "id_file"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_bank": {
          "type": "integer",
          "description": "ID of the bank"
        },
        "id_file": {
          "type": "integer",
          "description": "Id of the Bank/Provider Logo"
        },
        "type": {
          "type": "string",
          "description": "Logo's type"
        }
      },
      "example": {
        "id": 0,
        "id_bank": 0,
        "id_file": 0,
        "type": ""
      }
    },
    "TermsOfService": {
      "required": [
        "id",
        "version",
        "created"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "version": {
          "type": "string"
        },
        "id_file": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "version": "",
        "id_file": 0,
        "created": "2018-09-19 10:44:12.438640",
        "deleted": "2018-09-19 10:44:12.438702"
      }
    },
    "Category": {
      "required": [
        "id",
        "id_parent_category",
        "name",
        "color",
        "id_parent_category_in_menu",
        "refundable"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the category"
        },
        "id_parent_category": {
          "type": "integer",
          "description": "ID of the parent category. If this is a parent category, it will be equal to its own ID"
        },
        "name": {
          "type": "string",
          "description": "Name of the category"
        },
        "income": {
          "type": "boolean",
          "description": "Is an income category. If null, this is both an income and an expense category"
        },
        "color": {
          "type": "string",
          "description": "Color of the category"
        },
        "id_parent_category_in_menu": {
          "type": "integer",
          "description": "ID of the parent category to be displayed"
        },
        "name_displayed": {
          "type": "string",
          "description": "Displayed name, with HTML tags"
        },
        "refundable": {
          "type": "boolean",
          "description": "This category accepts opposite sign of transactions"
        },
        "id_user": {
          "type": "integer",
          "description": "If not null, this category is specific to a user"
        },
        "id_logo": {
          "type": "integer",
          "description": "ID of the logo"
        }
      },
      "example": {
        "id": 0,
        "id_parent_category": 0,
        "name": "",
        "income": false,
        "color": "",
        "id_parent_category_in_menu": 0,
        "name_displayed": "",
        "refundable": false,
        "id_user": 0,
        "id_logo": 0
      }
    },
    "Client": {
      "required": [
        "id",
        "name",
        "secret",
        "redirect_uri",
        "pro"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "default": "",
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "redirect_uri": {
          "default": "",
          "type": "string"
        },
        "primary_color": {
          "type": "string",
          "description": "Primary color of client"
        },
        "secondary_color": {
          "type": "string",
          "description": "Secondary color of client"
        },
        "pro": {
          "default": false,
          "type": "boolean",
          "description": "Should the client display the company manager page."
        },
        "description": {
          "type": "string",
          "description": "Text to display as a default description."
        },
        "description_banks": {
          "type": "string",
          "description": "Text to display as a description for banks."
        },
        "description_providers": {
          "type": "string",
          "description": "Text to display as a description for providers."
        },
        "id_logo": {
          "type": "integer"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "secret": "",
        "redirect_uri": "",
        "primary_color": "",
        "secondary_color": "",
        "pro": false,
        "description": "",
        "description_banks": "",
        "description_providers": "",
        "id_logo": 0
      }
    },
    "File": {
      "required": [
        "id",
        "content_type",
        "filename",
        "file_size"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "content_type": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "file_size": {
          "type": "integer"
        }
      },
      "example": {
        "id": 0,
        "content_type": "",
        "filename": "",
        "file_size": 0
      }
    },
    "Security": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the security"
        },
        "code": {
          "type": "string",
          "description": "ISIN code of the security"
        },
        "name": {
          "type": "string",
          "description": "Name of the security"
        },
        "id_type": {
          "type": "integer",
          "description": "ID of the security type"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the security",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "code": "",
        "name": "",
        "id_type": 0,
        "last_update": "2018-09-19 10:44:12.447943"
      }
    },
    "Webhook": {
      "required": [
        "id",
        "created",
        "updated"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the webhook"
        },
        "created": {
          "type": "string",
          "description": "Date of the webhook creation",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "Date of the webhook last update",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "Date of the webhook deletion",
          "format": "date-time"
        },
        "id_service": {
          "type": "integer",
          "description": "ID of the service"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the emitter user"
        },
        "id_event": {
          "type": "integer",
          "description": "ID of the webhook event"
        },
        "url": {
          "type": "string",
          "description": "URL of the webhook"
        }
      },
      "example": {
        "id": 0,
        "created": "2018-09-19 10:44:12.450710",
        "updated": "2018-09-19 10:44:12.450787",
        "deleted": "2018-09-19 10:44:12.450846",
        "id_service": 0,
        "id_user": 0,
        "id_event": 0,
        "url": ""
      }
    },
    "DocumentType": {
      "required": [
        "id",
        "name",
        "attacheable"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "attacheable": {
          "default": true,
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "attacheable": true
      }
    },
    "User": {
      "required": [
        "id",
        "signin",
        "platform"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "signin": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "platform": {
          "enum": [
            "web",
            "iPad",
            "iPhone",
            "Android",
            "CAstore",
            "requestAccess",
            "sharedAccess",
            "transfer"
          ],
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "signin": "CURRENT_TIMESTAMP",
        "platform": ""
      }
    },
    "Connection": {
      "required": [
        "id",
        "id_bank",
        "active"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "id_bank": {
          "type": "integer",
          "description": "ID of the related bank or provider"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If the last update has failed, the error code"
        },
        "expire": {
          "type": "string",
          "description": "Expiration of the connection. Used during add of a two-factor authentication, to purge the connection if the user abort",
          "format": "date-time"
        },
        "active": {
          "default": true,
          "type": "boolean",
          "description": "This connection is active and will be automatically synced"
        },
        "last_push": {
          "type": "string",
          "description": "Last successful push",
          "format": "date-time"
        },
        "next_try": {
          "type": "string",
          "description": "Date of next synchronization",
          "format": "date-time"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_bank": 0,
        "last_update": "2018-09-19 10:44:12.461304",
        "error": "",
        "expire": "2018-09-19 10:44:12.461430",
        "active": true,
        "last_push": "2018-09-19 10:44:12.461552",
        "next_try": "2018-09-19 10:44:12.461740"
      }
    },
    "ConnectionLog": {
      "required": [
        "id",
        "id_connection",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the log"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the user"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the connection"
        },
        "id_bank": {
          "type": "integer",
          "description": "ID of the bank"
        },
        "login": {
          "type": "string",
          "description": "bcrypt hash of the login"
        },
        "error_uid": {
          "type": "string",
          "description": "MD5 hash of the exception backtrace"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of log, when the synchronization has finished",
          "format": "date-time"
        },
        "next_try": {
          "type": "string",
          "description": "If fail, the date represents the next try to connect",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If fail, contains the error code"
        },
        "error_message": {
          "type": "string",
          "description": "If fail, error message received from bank or provider"
        },
        "statut": {
          "type": "integer",
          "description": "Status of user (1 = charged user)"
        },
        "nb_accounts": {
          "type": "integer",
          "description": "In case of bank connection, number of accounts"
        },
        "start": {
          "type": "string",
          "description": "Timestamp when the synchronization has started",
          "format": "date-time"
        },
        "worker": {
          "type": "string",
          "description": "Worker used to do synchronization"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "id_connection": 0,
        "id_bank": 0,
        "login": "",
        "error_uid": "",
        "timestamp": "CURRENT_TIMESTAMP",
        "next_try": "2018-09-19 10:44:12.468834",
        "error": "",
        "error_message": "",
        "statut": 0,
        "nb_accounts": 0,
        "start": "2018-09-19 10:44:12.469108",
        "worker": ""
      }
    },
    "Profile": {
      "required": [
        "id",
        "id_user",
        "role",
        "email",
        "statut",
        "admin"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "role": {
          "default": "admin",
          "enum": [
            "admin",
            "ser"
          ],
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "statut": {
          "default": 0,
          "type": "integer"
        },
        "admin": {
          "default": false,
          "type": "boolean"
        },
        "conf": {
          "type": "string"
        },
        "lang": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "role": "admin",
        "email": "",
        "statut": 0,
        "admin": false,
        "conf": "",
        "lang": ""
      }
    },
    "TransactionsCluster": {
      "required": [
        "id",
        "id_account",
        "mean_amount",
        "enabled",
        "wording"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_account": {
          "type": "integer"
        },
        "mean_amount": {
          "type": "number",
          "format": "float"
        },
        "median_increment": {
          "type": "integer"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "next_date": {
          "type": "string",
          "format": "date"
        },
        "wording": {
          "type": "string"
        },
        "id_category": {
          "type": "integer"
        },
        "created_by": {
          "type": "string"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "mean_amount": 0,
        "median_increment": 0,
        "enabled": true,
        "next_date": "2018-09-19",
        "wording": "",
        "id_category": 0,
        "created_by": ""
      }
    },
    "UserAlert": {
      "description": "/!\\ Careful we use default value from database if present\n\n    For more information see AlertsPlugin.init",
      "required": [
        "id",
        "value_type",
        "type",
        "resume_frequency"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "income_max": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "expense_max": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "balance_min1": {
          "default": 500,
          "type": "number",
          "format": "float"
        },
        "balance_min2": {
          "default": 0,
          "type": "number",
          "format": "float"
        },
        "balance_max": {
          "default": 10000,
          "type": "number",
          "format": "float"
        },
        "resume_enabled": {
          "default": true,
          "type": "boolean"
        },
        "enabled": {
          "default": true,
          "type": "boolean"
        },
        "value_type": {
          "default": "flat",
          "type": "string"
        },
        "type": {
          "default": "transactions",
          "type": "string"
        },
        "transaction_types": {
          "type": "string"
        },
        "date_range": {
          "type": "integer"
        },
        "apply": {
          "type": "string"
        },
        "resume_frequency": {
          "default": 7,
          "type": "integer"
        }
      },
      "example": {
        "id": 0,
        "income_max": 500,
        "expense_max": 500,
        "balance_min1": 500,
        "balance_min2": 0,
        "balance_max": 10000,
        "resume_enabled": true,
        "enabled": true,
        "value_type": "flat",
        "type": "transactions",
        "transaction_types": "",
        "date_range": 0,
        "apply": "",
        "resume_frequency": 7
      }
    },
    "AccountType": {
      "required": [
        "id",
        "name",
        "is_invest",
        "weboob_type_id",
        "display_name_p",
        "display_name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the account type"
        },
        "name": {
          "type": "string",
          "description": "Name of the account type"
        },
        "is_invest": {
          "default": false,
          "type": "boolean",
          "description": "Is it an investment account"
        },
        "weboob_type_id": {
          "type": "integer",
          "description": "Map to the weboob_type_id"
        },
        "display_name_p": {
          "type": "string",
          "description": "Name to display in plurial"
        },
        "display_name": {
          "type": "string",
          "description": "Name to display in singular"
        },
        "color": {
          "type": "string",
          "description": "Color of the account type (hexdecimal)"
        },
        "id_parent": {
          "type": "integer",
          "description": "Id of the parent type"
        }
      },
      "example": {
        "id": 0,
        "name": "",
        "is_invest": false,
        "weboob_type_id": 0,
        "display_name_p": "",
        "display_name": "",
        "color": "",
        "id_parent": 0
      }
    },
    "Subscription": {
      "required": [
        "id",
        "id_user",
        "number",
        "label"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of subscription"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of related connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of related user"
        },
        "number": {
          "type": "string",
          "description": "Subscription's number"
        },
        "label": {
          "type": "string",
          "description": "Label of the subscription"
        },
        "subscriber": {
          "type": "string",
          "description": "Name of the subscriber"
        },
        "validity": {
          "type": "string",
          "description": "The subscription is valid until this date, if any",
          "format": "date"
        },
        "renewdate": {
          "type": "string",
          "description": "Next renew date, if any",
          "format": "date"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the subscription",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "This subscription is not found on the website anymore",
          "format": "date-time"
        },
        "disabled": {
          "type": "string",
          "description": "This subscription has been deleted by user and will not be synchronized anymore",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_connection": 0,
        "id_user": 0,
        "number": "",
        "label": "",
        "subscriber": "",
        "validity": "2018-09-19",
        "renewdate": "2018-09-19",
        "last_update": "2018-09-19 10:44:12.502349",
        "deleted": "2018-09-19 10:44:12.502406",
        "disabled": "2018-09-19 10:44:12.502462"
      }
    },
    "Transaction": {
      "required": [
        "id",
        "id_account",
        "date",
        "value",
        "nature",
        "original_wording",
        "simplified_wording",
        "stemmed_wording",
        "state",
        "date_scraped",
        "rdate",
        "coming",
        "active",
        "nopurge"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the transaction"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "webid": {
          "type": "string",
          "description": "Webid of the transaction"
        },
        "application_date": {
          "type": "string",
          "description": "Date considered by PFM services. It is used to change the month of a transaction, for example.",
          "format": "date"
        },
        "date": {
          "type": "string",
          "description": "Debit date",
          "format": "date"
        },
        "value": {
          "type": "number",
          "description": "Value of the transaction",
          "format": "float"
        },
        "nature": {
          "default": "inconnu",
          "type": "string",
          "description": "Type of transaction"
        },
        "original_wording": {
          "type": "string",
          "description": "Full label of the transaction"
        },
        "simplified_wording": {
          "type": "string",
          "description": "Simplified label of the transaction"
        },
        "stemmed_wording": {
          "type": "string",
          "description": "Do not use it"
        },
        "wording": {
          "type": "string",
          "description": "Label set by the user"
        },
        "id_category": {
          "type": "integer",
          "description": "ID of the related category"
        },
        "state": {
          "default": "new",
          "type": "string",
          "description": "Internal state of the transaction"
        },
        "date_scraped": {
          "type": "string",
          "description": "Date when the transaction has been seen",
          "format": "date-time"
        },
        "rdate": {
          "type": "string",
          "description": "Realization of the transaction",
          "format": "date"
        },
        "coming": {
          "type": "boolean",
          "description": "If true, this transaction hasn't been yet debited"
        },
        "active": {
          "default": true,
          "type": "boolean",
          "description": "If false, PFM services will ignore this transaction"
        },
        "id_cluster": {
          "type": "integer",
          "description": "If the transaction is part of a cluster"
        },
        "comment": {
          "type": "string",
          "description": "User comment"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the transaction",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "If set, this transaction has been removed from the bank",
          "format": "date-time"
        },
        "nopurge": {
          "default": false,
          "type": "boolean",
          "description": "If set to true, this transaction will never be considered as deleted"
        },
        "original_value": {
          "type": "number",
          "description": "Value in the original currency",
          "format": "float"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "commission": {
          "type": "number",
          "description": "Commission taken on the transaction",
          "format": "float"
        },
        "country": {
          "type": "string",
          "description": "Original country"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "webid": "",
        "application_date": "2018-09-19",
        "date": "2018-09-19",
        "value": 0,
        "nature": "inconnu",
        "original_wording": "",
        "simplified_wording": "",
        "stemmed_wording": "",
        "wording": "",
        "id_category": 0,
        "state": "new",
        "date_scraped": "2018-09-19 10:44:12.504942",
        "rdate": "2018-09-19",
        "coming": false,
        "active": true,
        "id_cluster": 0,
        "comment": "",
        "last_update": "2018-09-19 10:44:12.505381",
        "deleted": "2018-09-19 10:44:12.505440",
        "nopurge": false,
        "original_value": 0,
        "original_currency": "",
        "commission": 0,
        "country": ""
      }
    },
    "Investment": {
      "required": [
        "id",
        "id_account",
        "label",
        "code"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the investment"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "label": {
          "type": "string",
          "description": "Label of the investment"
        },
        "code": {
          "type": "string",
          "description": "Investment code"
        },
        "code_type": {
          "type": "string",
          "description": "Code type (ISIN of AMF)"
        },
        "source": {
          "type": "string",
          "description": "Source of the ISIN code (website, notFound)"
        },
        "description": {
          "type": "string",
          "description": "Description of the investment"
        },
        "quantity": {
          "default": 0,
          "type": "number",
          "description": "Quantity",
          "format": "float"
        },
        "unitprice": {
          "default": 0,
          "type": "number",
          "description": "Average buy price",
          "format": "float"
        },
        "unitvalue": {
          "default": 0,
          "type": "number",
          "description": "Current unit value",
          "format": "float"
        },
        "valuation": {
          "default": 0,
          "type": "number",
          "description": "Current valuation",
          "format": "float"
        },
        "diff": {
          "default": 0,
          "type": "number",
          "description": "Capital gain",
          "format": "float"
        },
        "diff_percent": {
          "type": "number",
          "description": "Capital gain in percent (between 0 and 1)",
          "format": "float"
        },
        "prev_diff": {
          "type": "number",
          "description": "Capital gain from previous value",
          "format": "float"
        },
        "portfolio_share": {
          "type": "number",
          "description": "Percent of the portfolio",
          "format": "float"
        },
        "vdate": {
          "type": "string",
          "description": "Value date",
          "format": "date"
        },
        "prev_vdate": {
          "type": "string",
          "description": "Value date of the previous value (prev_diff)",
          "format": "date"
        },
        "id_security": {
          "type": "integer",
          "description": "ID of the related security"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "original_valuation": {
          "type": "number",
          "description": "Valuation in original currency",
          "format": "float"
        },
        "original_unitvalue": {
          "type": "number",
          "description": "Average buy price in the original currency",
          "format": "float"
        },
        "original_unitprice": {
          "type": "number",
          "description": "Current unit value in the original currency",
          "format": "float"
        },
        "original_diff": {
          "type": "number",
          "description": "Capital gain in the original currency",
          "format": "float"
        },
        "last_update": {
          "type": "string",
          "description": "Last update of the investment",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "If set, this investment has been removed from the website",
          "format": "date-time"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "label": "",
        "code": "",
        "code_type": "",
        "source": "",
        "description": "",
        "quantity": 0,
        "unitprice": 0,
        "unitvalue": 0,
        "valuation": 0,
        "diff": 0,
        "diff_percent": 0,
        "prev_diff": 0,
        "portfolio_share": 0,
        "vdate": "2018-09-19",
        "prev_vdate": "2018-09-19",
        "id_security": 0,
        "original_currency": "",
        "original_valuation": 0,
        "original_unitvalue": 0,
        "original_unitprice": 0,
        "original_diff": 0,
        "last_update": "2018-09-19 10:44:12.509707",
        "deleted": "2018-09-19 10:44:12.509764"
      }
    },
    "Recipient": {
      "required": [
        "id",
        "id_account",
        "label",
        "category",
        "last_update"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the recipient"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "id_target_account": {
          "type": "integer",
          "description": "ID of the target account, in case of internal recipient"
        },
        "label": {
          "type": "string",
          "description": "Label of the recipient"
        },
        "bank_name": {
          "type": "string",
          "description": "Bank of the recipient"
        },
        "iban": {
          "type": "string",
          "description": "IBAN of the recipient"
        },
        "webid": {
          "type": "string",
          "description": "Webid of the recipient"
        },
        "category": {
          "type": "string",
          "description": "Category in which the recipient is"
        },
        "last_update": {
          "type": "string",
          "description": "Last time we have fetched this recipient",
          "format": "date-time"
        },
        "time_scraped": {
          "type": "string",
          "description": "First time we've seen this recipient",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "The recipient isn't found anymore on the bank",
          "format": "date-time"
        },
        "expire": {
          "type": "string",
          "format": "date-time"
        },
        "enabled_at": {
          "type": "string",
          "description": "It will be possible to do transfers to this recipient at this date",
          "format": "date-time"
        },
        "add_verified": {
          "type": "boolean",
          "description": "Was the recipient adding authorized"
        },
        "currency": {
          "type": "object",
          "description": "Currency of the object"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_target_account": 0,
        "label": "",
        "bank_name": "",
        "iban": "",
        "webid": "",
        "category": "",
        "last_update": "2018-09-19 10:44:12.510904",
        "time_scraped": "2018-09-19 10:44:12.510962",
        "deleted": "2018-09-19 10:44:12.511019",
        "expire": "2018-09-19 10:44:12.511073",
        "enabled_at": "2018-09-19 10:44:12.511128",
        "add_verified": false,
        "currency": ""
      }
    },
    "Document": {
      "required": [
        "id",
        "id_user",
        "timestamp",
        "date",
        "readonly"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_type": {
          "type": "integer"
        },
        "id_category": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer"
        },
        "id_subscription": {
          "type": "integer"
        },
        "id_file": {
          "type": "integer"
        },
        "id_thumbnail": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        },
        "thumb_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "duedate": {
          "type": "string",
          "format": "date"
        },
        "total_amount": {
          "type": "number",
          "format": "float"
        },
        "untaxed_amount": {
          "type": "number",
          "format": "float"
        },
        "vat": {
          "type": "number",
          "format": "float"
        },
        "income": {
          "default": true,
          "type": "boolean"
        },
        "readonly": {
          "default": true,
          "type": "boolean"
        },
        "number": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the document",
          "format": "date-time"
        },
        "currency": {
          "type": "object",
          "description": "Document currency"
        }
      },
      "example": {
        "id": 0,
        "id_type": 0,
        "id_category": 0,
        "id_user": 0,
        "id_subscription": 0,
        "id_file": 0,
        "id_thumbnail": 0,
        "url": "",
        "thumb_url": "",
        "name": "",
        "timestamp": "CURRENT_TIMESTAMP",
        "date": "2018-09-19 10:44:12.513896",
        "duedate": "2018-09-19",
        "total_amount": 0,
        "untaxed_amount": 0,
        "vat": 0,
        "income": true,
        "readonly": true,
        "number": "",
        "issuer": "",
        "last_update": "2018-09-19 10:44:12.514455",
        "currency": ""
      }
    },
    "Transfer": {
      "description": "This is a representation of a transfer.",
      "required": [
        "id",
        "exec_date",
        "register_date",
        "amount",
        "state"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of transfer"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the debited account"
        },
        "id_recipient": {
          "type": "integer",
          "description": "ID of the recipient"
        },
        "account_iban": {
          "type": "string",
          "description": "IBAN of the debited account"
        },
        "recipient_iban": {
          "type": "string",
          "description": "IBAN of the recipient"
        },
        "exec_date": {
          "type": "string",
          "description": "Date when the transfer will be operated by the bank",
          "format": "date"
        },
        "register_date": {
          "type": "string",
          "description": "Date when the transfer has been registered",
          "format": "date-time"
        },
        "amount": {
          "type": "number",
          "description": "Amount of the transfer",
          "format": "float"
        },
        "fees": {
          "type": "number",
          "description": "Fees taken by the bank",
          "format": "float"
        },
        "webid": {
          "type": "string",
          "description": "WebID of the transfer"
        },
        "state": {
          "type": "string",
          "description": "State of the transfer (created, scheduled, validating, pending, done, canceled, error, bug)"
        },
        "error": {
          "type": "string",
          "description": "Error message during transfer, if any"
        },
        "label": {
          "type": "string",
          "description": "Label of the transfer"
        },
        "account_balance": {
          "type": "number",
          "description": "Balance of the account just before the transfer",
          "format": "float"
        },
        "id_transaction": {
          "type": "integer",
          "description": "If found, ID of the related transaction"
        },
        "currency": {
          "type": "object",
          "description": "Currency of the object"
        }
      },
      "example": {
        "id": 0,
        "id_account": 0,
        "id_recipient": 0,
        "account_iban": "",
        "recipient_iban": "",
        "exec_date": "2018-09-19",
        "register_date": "2018-09-19 10:44:12.516705",
        "amount": 0,
        "fees": 0,
        "webid": "",
        "state": "",
        "error": "",
        "label": "",
        "account_balance": 0,
        "id_transaction": 0,
        "currency": ""
      }
    },
    "Account": {
      "required": [
        "id",
        "id_user",
        "original_name",
        "balance",
        "display",
        "bookmarked"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the account"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the related connection"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "id_parent": {
          "type": "integer",
          "description": "Id of the parent account"
        },
        "number": {
          "type": "string",
          "description": "Account number"
        },
        "original_name": {
          "type": "string",
          "description": "Original name of the account on the bank"
        },
        "balance": {
          "type": "number",
          "description": "Balance of the account",
          "format": "float"
        },
        "coming": {
          "default": 0,
          "type": "number",
          "description": "Amount of coming operations not yet debited",
          "format": "float"
        },
        "display": {
          "default": true,
          "type": "boolean",
          "description": "Display this account in accounts list"
        },
        "last_update": {
          "type": "string",
          "description": "Last successful update of the account",
          "format": "date-time"
        },
        "deleted": {
          "type": "string",
          "description": "This account is not found on the website anymore",
          "format": "date-time"
        },
        "disabled": {
          "type": "string",
          "description": "This account has been deleted by user and will not be synchronized anymore",
          "format": "date-time"
        },
        "iban": {
          "type": "string",
          "description": "Account IBAN"
        },
        "currency": {
          "$ref": "#/definitions/Currency",
          "description": "Account currency"
        },
        "id_type": {
          "type": "integer",
          "description": "ID of the account type"
        },
        "bookmarked": {
          "default": false,
          "type": "integer",
          "description": "This account has been bookmarked by user"
        },
        "name": {
          "type": "string",
          "description": "Name of the account"
        },
        "error": {
          "type": "string",
          "description": "If the last update has failed, the error code"
        }
      },
      "example": {
        "id": 0,
        "id_connection": 0,
        "id_user": 0,
        "id_parent": 0,
        "number": "",
        "original_name": "",
        "balance": 0,
        "coming": 0,
        "display": true,
        "last_update": "2018-09-19 10:44:12.520118",
        "deleted": "2018-09-19 10:44:12.520178",
        "disabled": "2018-09-19 10:44:12.520235",
        "iban": "",
        "currency": "",
        "id_type": 0,
        "bookmarked": false,
        "name": "",
        "error": ""
      }
    },
    "Device": {
      "required": [
        "id",
        "id_token",
        "type",
        "notification_token",
        "last_update",
        "version",
        "debug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_token": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "notification_token": {
          "type": "string"
        },
        "last_update": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "string"
        },
        "debug": {
          "default": false,
          "type": "boolean"
        }
      },
      "example": {
        "id": 0,
        "id_token": 0,
        "type": "",
        "notification_token": "",
        "last_update": "CURRENT_TIMESTAMP",
        "version": "",
        "debug": false
      }
    },
    "Alert": {
      "required": [
        "id",
        "id_user",
        "timestamp",
        "type",
        "value"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "id_user": {
          "type": "integer",
          "description": "ID of the related user"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Date of the alerts emission",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "Type of the alert"
        },
        "id_transaction": {
          "type": "integer",
          "description": "ID of the related transaction"
        },
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "value": {
          "type": "number",
          "description": "Amount related to the alert",
          "format": "float"
        },
        "id_investment": {
          "type": "integer",
          "description": "ID of the related investment"
        }
      },
      "example": {
        "id": 0,
        "id_user": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "type": "",
        "id_transaction": 0,
        "id_account": 0,
        "value": 0,
        "id_investment": 0
      }
    },
    "TransactionInformation": {
      "required": [
        "id",
        "id_transaction",
        "key"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of this transaction information"
        },
        "id_transaction": {
          "type": "integer",
          "description": "ID of the related transaction"
        },
        "key": {
          "type": "string",
          "description": "Key of the transaction information"
        },
        "value": {
          "type": "string",
          "description": "Value of the transaction information"
        }
      },
      "example": {
        "id": 0,
        "id_transaction": 0,
        "key": "",
        "value": ""
      }
    },
    "InvestmentValue": {
      "required": [
        "id",
        "id_investment",
        "vdate",
        "unitvalue"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the value"
        },
        "id_investment": {
          "type": "integer",
          "description": "ID of the related investment"
        },
        "vdate": {
          "type": "string",
          "description": "Date of this value",
          "format": "date"
        },
        "unitvalue": {
          "type": "number",
          "description": "Value on this date",
          "format": "float"
        },
        "original_currency": {
          "type": "object",
          "description": "Original currency"
        },
        "original_unitvalue": {
          "type": "number",
          "description": "Value on this date, in the original currency",
          "format": "float"
        }
      },
      "example": {
        "id": 0,
        "id_investment": 0,
        "vdate": "2018-09-19",
        "unitvalue": 0,
        "original_currency": "",
        "original_unitvalue": 0
      }
    },
    "AccountLog": {
      "required": [
        "id_account",
        "balance",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id_account": {
          "type": "integer",
          "description": "ID of the related account"
        },
        "id_bank": {
          "type": "integer",
          "description": "provider id"
        },
        "balance": {
          "type": "number",
          "description": "Balanced recorded",
          "format": "float"
        },
        "coming": {
          "default": 0,
          "type": "number",
          "description": "Coming debit recorded",
          "format": "float"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "description": "Timestamp of log",
          "format": "date-time"
        },
        "error": {
          "type": "string",
          "description": "If fail, contains the error code"
        },
        "error_message": {
          "type": "string",
          "description": "If fail, error message received from bank or provider"
        },
        "id_connection": {
          "type": "integer",
          "description": "ID of the related connection"
        }
      },
      "example": {
        "id_account": 0,
        "id_bank": 0,
        "balance": 0,
        "coming": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "error": "",
        "error_message": "",
        "id_connection": 0
      }
    },
    "Currency": {
      "required": [
        "id",
        "symbol",
        "prefix"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ISO 4217 code used as ID"
        },
        "symbol": {
          "type": "string",
          "description": "Symbol representing the currency"
        },
        "prefix": {
          "default": false,
          "type": "boolean",
          "description": "Amount is prefixed or not by the currency"
        }
      },
      "example": {
        "id": "",
        "symbol": "",
        "prefix": false
      }
    },
    "BankCategory": {
      "required": [
        "id",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of the bank category"
        },
        "name": {
          "default": false,
          "type": "string",
          "description": "Name of the category"
        }
      },
      "example": {
        "id": 0,
        "name": false
      }
    },
    "LockedUser": {
      "required": [
        "id_user",
        "timestamp"
      ],
      "type": "object",
      "properties": {
        "id_user": {
          "type": "integer"
        },
        "timestamp": {
          "default": "CURRENT_TIMESTAMP",
          "type": "string",
          "format": "date-time"
        },
        "worker": {
          "type": "string"
        }
      },
      "example": {
        "id_user": 0,
        "timestamp": "CURRENT_TIMESTAMP",
        "worker": ""
      }
    },
    "OidcWhitelist": {
      "required": [
        "id",
        "redirect_uri"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "redirect_uri": {
          "type": "string",
          "description": "authorized redirect uri"
        }
      },
      "example": {
        "id": 0,
        "redirect_uri": ""
      }
    }
  },
  "basePath": "/2.0/",
  "swagger": "2.0",
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "tags": [
    {
      "name": "Administration"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "Banks"
    },
    {
      "name": "Connections"
    },
    {
      "name": "Documents"
    },
    {
      "name": "OCR"
    },
    {
      "name": "OIDC"
    },
    {
      "name": "PFM"
    },
    {
      "name": "Providers"
    },
    {
      "name": "Recipients"
    },
    {
      "name": "Service"
    },
    {
      "name": "Terms"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "Users management"
    },
    {
      "name": "Wealth"
    }
  ],
  "x-servers": [
    {
      "url": "https://cashbee-sandbox.biapi.pro/2.0",
      "description": "cashbee-sandbox.biapi.pro"
    }
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ]
}